var Qx=Object.defineProperty;var Xx=(Ts,Br,$n)=>Br in Ts?Qx(Ts,Br,{enumerable:!0,configurable:!0,writable:!0,value:$n}):Ts[Br]=$n;var Z=(Ts,Br,$n)=>Xx(Ts,typeof Br!="symbol"?Br+"":Br,$n);(function(){"use strict";const Ts=new Map,Br=[],$n=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=Ts.get(e);if(s===void 0)Ts.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const n=Br.indexOf(e);n!==-1&&Br.splice(n,1);for(let o=0;o<Br.length;o++)if(Ts.get(Br[o]).priority<=t){Br.splice(o,0,e);return}Br.push(e)}return}throw new TypeError("not a valid backend")},W0=async e=>{const r=Ts.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},G0=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Br:t;let n;const o=[],i=new Set;for(const l of s){const u=await W0(l);typeof u=="string"?o.push({name:l,err:u}):(n||(n=u),n===u&&i.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${o.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:u}of o)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${u}`);const a=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[n,new Proxy(e,{get:(l,u)=>u==="executionProviders"?a:Reflect.get(l,u)})]},K0="1.21.0";let yu="warning";const ls={wasm:{},webgl:{},webgpu:{},versions:{common:K0},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);yu=e}},get logLevel(){return yu}};Object.defineProperty(ls,"logLevel",{enumerable:!0});const H0=ls,q0=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let n,o;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],o=e.dims[3]):(n=e.dims[3],o=e.dims[2]);const i=r?.format!==void 0?r.format:"RGB",a=r?.norm;let l,u;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?u=[0,0,0,0]:typeof a.bias=="number"?u=[a.bias,a.bias,a.bias,a.bias]:(u=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(u[3]=a.bias[3]));const p=o*n;let c=0,d=p,_=p*2,f=-1;i==="RGBA"?(c=0,d=p,_=p*2,f=p*3):i==="RGB"?(c=0,d=p,_=p*2):i==="RBG"&&(c=0,_=p,d=p*2);for(let E=0;E<o;E++)for(let k=0;k<n;k++){const b=(e.data[c++]-u[0])*l[0],g=(e.data[d++]-u[1])*l[1],C=(e.data[_++]-u[2])*l[2],x=f===-1?255:(e.data[f++]-u[3])*l[3];s.fillStyle="rgba("+b+","+g+","+C+","+x+")",s.fillRect(k,E,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Q0=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let n,o,i;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],o=e.dims[1],i=e.dims[3]):(n=e.dims[3],o=e.dims[2],i=e.dims[1]);const a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r?.norm;let u,p;l===void 0||l.mean===void 0?u=[255,255,255,255]:typeof l.mean=="number"?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(u[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const c=o*n;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const d=4;let _=0,f=1,E=2,k=3,b=0,g=c,C=c*2,x=-1;a==="RGBA"?(b=0,g=c,C=c*2,x=c*3):a==="RGB"?(b=0,g=c,C=c*2):a==="RBG"&&(b=0,C=c,g=c*2),s=t.createImageData(n,o);for(let v=0;v<o*n;_+=d,f+=d,E+=d,k+=d,v++)s.data[_]=(e.data[b++]-p[0])*u[0],s.data[f]=(e.data[g++]-p[1])*u[1],s.data[E]=(e.data[C++]-p[2])*u[2],s.data[k]=x===-1?255:(e.data[x++]-p[3])*u[3]}else throw new Error("Can not access image data");return s},pa=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,n=r.norm??{mean:255,bias:0};let o,i;typeof n.mean=="number"?o=[n.mean,n.mean,n.mean,n.mean]:o=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?i=[n.bias,n.bias,n.bias,n.bias]:i=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];const a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",u=t*s,p=l==="RGBA"?new Float32Array(u*4):new Float32Array(u*3);let c=4,d=0,_=1,f=2,E=3,k=0,b=u,g=u*2,C=-1;a==="RGB"&&(c=3,d=0,_=1,f=2,E=-1),l==="RGBA"?C=u*3:l==="RBG"?(k=0,g=u,b=u*2):l==="BGR"&&(g=0,b=u,k=u*2);for(let v=0;v<u;v++,d+=c,f+=c,_+=c,E+=c)p[k++]=(e[d]+i[0])/o[0],p[b++]=(e[_]+i[1])/o[1],p[g++]=(e[f]+i[2])/o[2],C!==-1&&E!==-1&&(p[C++]=(e[E]+i[3])/o[3]);return l==="RGBA"?new Jr("float32",p,[1,4,t,s]):new Jr("float32",p,[1,3,t,s])},X0=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,o=typeof e=="string";let i,a=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const c=u(p);if(c!=null){let d=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(d=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=d,a.width=_}else a.tensorFormat="RGBA",a.height=d,a.width=_;c.drawImage(e,0,0),i=c.getImageData(0,0,_,d).data}else throw new Error("Can not access image data")}else if(s){let p,c;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,c=r.resizedWidth):(p=e.height,c=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=c,r!==void 0){const d=l();d.width=c,d.height=p;const _=u(d);if(_!=null)_.putImageData(e,0,0),i=_.getImageData(0,0,c,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(n){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const c=u(p);if(c!=null){const d=e.height,_=e.width;return c.drawImage(e,0,0,_,d),i=c.getImageData(0,0,_,d).data,a.height=d,a.width=_,pa(i,a)}else throw new Error("Can not access image data")}else{if(o)return new Promise((p,c)=>{const d=l(),_=u(d);if(!e||!_)return c();const f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{d.width=f.width,d.height=f.height,_.drawImage(f,0,0,d.width,d.height);const E=_.getImageData(0,0,d.width,d.height);a.height=d.height,a.width=d.width,p(pa(E.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return pa(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},J0=(e,r)=>{const{width:t,height:s,download:n,dispose:o}=r,i=[1,s,t,4];return new Jr({location:"texture",type:"float32",texture:e,dims:i,download:n,dispose:o})},Y0=(e,r)=>{const{dataType:t,dims:s,download:n,dispose:o}=r;return new Jr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:n,dispose:o})},Z0=(e,r)=>{const{dataType:t,dims:s,download:n,dispose:o}=r;return new Jr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:n,dispose:o})},ev=(e,r,t)=>new Jr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),In=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),ei=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let vu=!1;const tv=()=>{if(!vu){vu=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(In.set("int64",BigInt64Array),ei.set(BigInt64Array,"int64")),r&&(In.set("uint64",BigUint64Array),ei.set(BigUint64Array,"uint64")),s?(In.set("float16",t),ei.set(t,"float16")):In.set("float16",Uint16Array)}},rv=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},sv=(e,r)=>{switch(e.location){case"cpu":return new Jr(e.type,e.data,r);case"cpu-pinned":return new Jr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Jr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Jr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Jr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let Jr=class{constructor(r,t,s){tv();let n,o;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,n=r.type,o=r.dims,r.location){case"cpu-pinned":{const a=In.get(n);if(!a)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(r.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=r.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof r=="string")if(n=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const u=In.get(r);if(u===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&u===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${u.name} as data.`);r==="uint64"||r==="int64"?a=u.from(t,BigInt):a=u.from(t)}else if(t instanceof u)a=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(r==="float16"&&t instanceof Uint16Array&&u!==Uint16Array)a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${n} tensor's data must be type of ${u}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const u=typeof r[0];if(u==="string")n="string",a=r;else if(u==="boolean")n="bool",a=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${u}.`)}else if(r instanceof Uint8ClampedArray)n="uint8",a=Uint8Array.from(r);else{const u=ei.get(r.constructor);if(u===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);n=u,a=r}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");o=l,this.cpuData=a,this.dataLocation="cpu"}const i=rv(o);if(this.cpuData&&i!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=o,this.size=i}static async fromImage(r,t){return X0(r,t)}static fromTexture(r,t){return J0(r,t)}static fromGpuBuffer(r,t){return Y0(r,t)}static fromMLTensor(r,t){return Z0(r,t)}static fromPinnedBuffer(r,t,s){return ev(r,t,s)}toDataURL(r){return q0(this,r)}toImageData(r){return Q0(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return sv(this,r)}};const kn=Jr,xu=(e,r)=>{(typeof ls.trace>"u"?!ls.wasm.trace:!ls.trace)||console.timeStamp(`${e}::ORT::${r}`)},Tu=(e,r)=>{const t=new Error().stack?.split(/\r\n|\r|\n/g)||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let o=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(o+=`::${r}`),xu("CPU",o);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},ha=e=>{(typeof ls.trace>"u"?!ls.wasm.trace:!ls.trace)||Tu("BEGIN",e)},ma=e=>{(typeof ls.trace>"u"?!ls.wasm.trace:!ls.trace)||Tu("END",e)};var nv=Object.freeze({__proto__:null,InferenceSession:class N0{constructor(r){this.handler=r}async run(r,t,s){ha();const n={};let o={};if(typeof r!="object"||r===null||r instanceof kn||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof kn)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const u of t){if(typeof u!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(u)===-1)throw new RangeError(`'fetches' contains invalid output name: ${u}.`);n[u]=null}if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let u=!1;const p=Object.getOwnPropertyNames(t);for(const c of this.outputNames)if(p.indexOf(c)!==-1){const d=t[c];(d===null||d instanceof kn)&&(u=!0,i=!1,n[c]=d)}if(u){if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else o=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const u of this.inputNames)if(typeof r[u]>"u")throw new Error(`input '${u}' is missing in 'feeds'.`);if(i)for(const u of this.outputNames)n[u]=null;const a=await this.handler.run(r,n,o),l={};for(const u in a)if(Object.hasOwnProperty.call(a,u)){const p=a[u];p instanceof kn?l[u]=p:l[u]=new kn(p.type,p.data,p.dims)}return ma(),l}async release(){return this.handler.dispose()}static async create(r,t,s,n){ha();let o,i={};if(typeof r=="string"){if(o=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(o=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const p=r;let c=0,d=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(c=t,!Number.isSafeInteger(c))throw new RangeError("'byteOffset' must be an integer.");if(c<0||c>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(d=r.byteLength-c,typeof s=="number"){if(d=s,!Number.isSafeInteger(d))throw new RangeError("'byteLength' must be an integer.");if(d<=0||c+d>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-c}].`);if(typeof n=="object"&&n!==null)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");o=new Uint8Array(p,c,d)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await G0(i),u=await a.createInferenceSessionHandler(o,l);return ma(),new N0(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}},TRACE:xu,TRACE_FUNC_BEGIN:ha,TRACE_FUNC_END:ma,Tensor:kn,env:H0,registerBackend:$n});/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var fa=Object.defineProperty,ov=Object.getOwnPropertyDescriptor,iv=Object.getOwnPropertyNames,av=Object.prototype.hasOwnProperty,lv=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Re=(e,r)=>()=>(e&&(r=e(e=0)),r),An=(e,r)=>{for(var t in r)fa(e,t,{get:r[t],enumerable:!0})},cv=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of iv(r))!av.call(e,n)&&n!==t&&fa(e,n,{get:()=>r[n],enumerable:!(s=ov(r,n))||s.enumerable});return e},io=e=>cv(fa({},"__esModule",{value:!0}),e),ao,Rs,Js,Eu,Pu,Cu=Re(()=>{ao=new Map,Rs=[],Js=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=ao.get(e);if(s===void 0)ao.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let n=Rs.indexOf(e);n!==-1&&Rs.splice(n,1);for(let o=0;o<Rs.length;o++)if(ao.get(Rs[o]).priority<=t){Rs.splice(o,0,e);return}Rs.push(e)}return}throw new TypeError("not a valid backend")},Eu=async e=>{let r=ao.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},Pu=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Rs:t,n,o=[],i=new Set;for(let l of s){let u=await Eu(l);typeof u=="string"?o.push({name:l,err:u}):(n||(n=u),n===u&&i.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${o.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:u}of o)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${u}`);let a=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[n,new Proxy(e,{get:(l,u)=>u==="executionProviders"?a:Reflect.get(l,u)})]}}),uv=Re(()=>{Cu()}),Su,dv=Re(()=>{Su="1.22.0-dev.20250409-89f8206ba4"}),_a,Yr,$u=Re(()=>{dv(),_a="warning",Yr={wasm:{},webgl:{},webgpu:{},versions:{common:Su},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);_a=e}},get logLevel(){return _a}},Object.defineProperty(Yr,"logLevel",{enumerable:!0})}),Kt,pv=Re(()=>{$u(),Kt=Yr}),Iu,ku,hv=Re(()=>{Iu=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let n,o;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],o=e.dims[3]):(n=e.dims[3],o=e.dims[2]);let i=r?.format!==void 0?r.format:"RGB",a=r?.norm,l,u;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?u=[0,0,0,0]:typeof a.bias=="number"?u=[a.bias,a.bias,a.bias,a.bias]:(u=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(u[3]=a.bias[3]));let p=o*n,c=0,d=p,_=p*2,f=-1;i==="RGBA"?(c=0,d=p,_=p*2,f=p*3):i==="RGB"?(c=0,d=p,_=p*2):i==="RBG"&&(c=0,_=p,d=p*2);for(let E=0;E<o;E++)for(let k=0;k<n;k++){let b=(e.data[c++]-u[0])*l[0],g=(e.data[d++]-u[1])*l[1],C=(e.data[_++]-u[2])*l[2],x=f===-1?255:(e.data[f++]-u[3])*l[3];s.fillStyle="rgba("+b+","+g+","+C+","+x+")",s.fillRect(k,E,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ku=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let n,o,i;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],o=e.dims[1],i=e.dims[3]):(n=e.dims[3],o=e.dims[2],i=e.dims[1]);let a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r?.norm,u,p;l===void 0||l.mean===void 0?u=[255,255,255,255]:typeof l.mean=="number"?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(u[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let c=o*n;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let d=4,_=0,f=1,E=2,k=3,b=0,g=c,C=c*2,x=-1;a==="RGBA"?(b=0,g=c,C=c*2,x=c*3):a==="RGB"?(b=0,g=c,C=c*2):a==="RBG"&&(b=0,C=c,g=c*2),s=t.createImageData(n,o);for(let v=0;v<o*n;_+=d,f+=d,E+=d,k+=d,v++)s.data[_]=(e.data[b++]-p[0])*u[0],s.data[f]=(e.data[g++]-p[1])*u[1],s.data[E]=(e.data[C++]-p[2])*u[2],s.data[k]=x===-1?255:(e.data[x++]-p[3])*u[3]}else throw new Error("Can not access image data");return s}}),ti,Au,Fu,Ou,Du,Lu,mv=Re(()=>{wa(),ti=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,n=r.norm??{mean:255,bias:0},o,i;typeof n.mean=="number"?o=[n.mean,n.mean,n.mean,n.mean]:o=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?i=[n.bias,n.bias,n.bias,n.bias]:i=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",u=t*s,p=l==="RGBA"?new Float32Array(u*4):new Float32Array(u*3),c=4,d=0,_=1,f=2,E=3,k=0,b=u,g=u*2,C=-1;a==="RGB"&&(c=3,d=0,_=1,f=2,E=-1),l==="RGBA"?C=u*3:l==="RBG"?(k=0,g=u,b=u*2):l==="BGR"&&(g=0,b=u,k=u*2);for(let x=0;x<u;x++,d+=c,f+=c,_+=c,E+=c)p[k++]=(e[d]+i[0])/o[0],p[b++]=(e[_]+i[1])/o[1],p[g++]=(e[f]+i[2])/o[2],C!==-1&&E!==-1&&(p[C++]=(e[E]+i[3])/o[3]);return l==="RGBA"?new Wr("float32",p,[1,4,t,s]):new Wr("float32",p,[1,3,t,s])},Au=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,o=typeof e=="string",i,a=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let c=u(p);if(c!=null){let d=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(d=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=d,a.width=_}else a.tensorFormat="RGBA",a.height=d,a.width=_;c.drawImage(e,0,0),i=c.getImageData(0,0,_,d).data}else throw new Error("Can not access image data")}else if(s){let p,c;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,c=r.resizedWidth):(p=e.height,c=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=c,r!==void 0){let d=l();d.width=c,d.height=p;let _=u(d);if(_!=null)_.putImageData(e,0,0),i=_.getImageData(0,0,c,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(n){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let c=u(p);if(c!=null){let d=e.height,_=e.width;return c.drawImage(e,0,0,_,d),i=c.getImageData(0,0,_,d).data,a.height=d,a.width=_,ti(i,a)}else throw new Error("Can not access image data")}else{if(o)return new Promise((p,c)=>{let d=l(),_=u(d);if(!e||!_)return c();let f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{d.width=f.width,d.height=f.height,_.drawImage(f,0,0,d.width,d.height);let E=_.getImageData(0,0,d.width,d.height);a.height=d.height,a.width=d.width,p(ti(E.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return ti(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Fu=(e,r)=>{let{width:t,height:s,download:n,dispose:o}=r,i=[1,s,t,4];return new Wr({location:"texture",type:"float32",texture:e,dims:i,download:n,dispose:o})},Ou=(e,r)=>{let{dataType:t,dims:s,download:n,dispose:o}=r;return new Wr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:n,dispose:o})},Du=(e,r)=>{let{dataType:t,dims:s,download:n,dispose:o}=r;return new Wr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:n,dispose:o})},Lu=(e,r,t)=>new Wr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),Ys,lo,ga,zu,fv=Re(()=>{Ys=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),lo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),ga=!1,zu=()=>{if(!ga){ga=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(Ys.set("int64",BigInt64Array),lo.set(BigInt64Array,"int64")),r&&(Ys.set("uint64",BigUint64Array),lo.set(BigUint64Array,"uint64")),s?(Ys.set("float16",t),lo.set(t,"float16")):Ys.set("float16",Uint16Array)}}}),Bu,Ru,_v=Re(()=>{wa(),Bu=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Ru=(e,r)=>{switch(e.location){case"cpu":return new Wr(e.type,e.data,r);case"cpu-pinned":return new Wr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Wr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Wr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Wr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Wr,wa=Re(()=>{hv(),mv(),fv(),_v(),Wr=class{constructor(e,r,t){zu();let s,n;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,n=e.dims,e.location){case"cpu-pinned":{let i=Ys.get(s);if(!i)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if(typeof e=="string")if(s=e,a=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");i=r}else{let l=Ys.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?i=l.from(r,BigInt):i=l.from(r)}else if(r instanceof l)i=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")i=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)i=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(a=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",i=e;else if(l==="boolean")s="bool",i=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",i=Uint8Array.from(e);else{let l=lo.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,i=e}if(a===void 0)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");n=a,this.cpuData=i,this.dataLocation="cpu"}let o=Bu(n);if(this.cpuData&&o!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(o/2)===this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=n,this.size=o}static async fromImage(e,r){return Au(e,r)}static fromTexture(e,r){return Fu(e,r)}static fromGpuBuffer(e,r){return Ou(e,r)}static fromMLTensor(e,r){return Du(e,r)}static fromPinnedBuffer(e,r,t){return Lu(e,r,t)}toDataURL(e){return Iu(this,e)}toImageData(e){return ku(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Ru(this,e)}}}),cs,ju=Re(()=>{wa(),cs=Wr}),co,Ma,us,Zr,Nu=Re(()=>{$u(),co=(e,r)=>{(typeof Yr.trace>"u"?!Yr.wasm.trace:!Yr.trace)||console.timeStamp(`${e}::ORT::${r}`)},Ma=(e,r)=>{let t=new Error().stack?.split(/\r\n|\r|\n/g)||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let o=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(o+=`::${r}`),co("CPU",o);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},us=e=>{(typeof Yr.trace>"u"?!Yr.wasm.trace:!Yr.trace)||Ma("BEGIN",e)},Zr=e=>{(typeof Yr.trace>"u"?!Yr.wasm.trace:!Yr.trace)||Ma("END",e)}}),Vu,gv=Re(()=>{Cu(),ju(),Nu(),Vu=class V0{constructor(r){this.handler=r}async run(r,t,s){us();let n={},o={};if(typeof r!="object"||r===null||r instanceof cs||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof cs)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let u of t){if(typeof u!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(u)===-1)throw new RangeError(`'fetches' contains invalid output name: ${u}.`);n[u]=null}if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let u=!1,p=Object.getOwnPropertyNames(t);for(let c of this.outputNames)if(p.indexOf(c)!==-1){let d=t[c];(d===null||d instanceof cs)&&(u=!0,i=!1,n[c]=d)}if(u){if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else o=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let u of this.inputNames)if(typeof r[u]>"u")throw new Error(`input '${u}' is missing in 'feeds'.`);if(i)for(let u of this.outputNames)n[u]=null;let a=await this.handler.run(r,n,o),l={};for(let u in a)if(Object.hasOwnProperty.call(a,u)){let p=a[u];p instanceof cs?l[u]=p:l[u]=new cs(p.type,p.data,p.dims)}return Zr(),l}async release(){return this.handler.dispose()}static async create(r,t,s,n){us();let o,i={};if(typeof r=="string"){if(o=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(o=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let p=r,c=0,d=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(c=t,!Number.isSafeInteger(c))throw new RangeError("'byteOffset' must be an integer.");if(c<0||c>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(d=r.byteLength-c,typeof s=="number"){if(d=s,!Number.isSafeInteger(d))throw new RangeError("'byteLength' must be an integer.");if(d<=0||c+d>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-c}].`);if(typeof n=="object"&&n!==null)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");o=new Uint8Array(p,c,d)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await Pu(i),u=await a.createInferenceSessionHandler(o,l);return Zr(),new V0(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),ba,wv=Re(()=>{gv(),ba=Vu}),Mv=Re(()=>{}),bv=Re(()=>{}),yv=Re(()=>{}),vv=Re(()=>{}),Uu={};An(Uu,{InferenceSession:()=>ba,TRACE:()=>co,TRACE_FUNC_BEGIN:()=>us,TRACE_FUNC_END:()=>Zr,Tensor:()=>cs,env:()=>Kt,registerBackend:()=>Js});var ds=Re(()=>{uv(),pv(),wv(),ju(),Mv(),bv(),Nu(),yv(),vv()}),ya=Re(()=>{}),Wu={};An(Wu,{default:()=>Gu});var va,xa,Gu,xv=Re(()=>{Eg(),Zs(),ka(),va="ort-wasm-proxy-worker",xa=globalThis.self?.name===va,xa&&(self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":Oa(t.wasm).then(()=>{Hl(t).then(()=>{postMessage({type:r})},s=>{postMessage({type:r,err:s})})},s=>{postMessage({type:r,err:s})});break;case"init-ep":{let{epName:s,env:n}=t;ql(n,s).then(()=>{postMessage({type:r})},o=>{postMessage({type:r,err:o})});break}case"copy-from":{let{buffer:s}=t,n=bi(s);postMessage({type:r,out:n});break}case"create":{let{model:s,options:n}=t;Xl(s,n).then(o=>{postMessage({type:r,out:o})},o=>{postMessage({type:r,err:o})});break}case"release":Jl(t),postMessage({type:r});break;case"run":{let{sessionId:s,inputIndices:n,inputs:o,outputIndices:i,options:a}=t;Zl(s,n,o,i,new Array(i.length).fill(null),a).then(l=>{l.some(u=>u[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:l},tc([...o,...l]))},l=>{postMessage({type:r,err:l})});break}case"end-profiling":ec(t),postMessage({type:r});break;default:}}catch(s){postMessage({type:r,err:s})}}),Gu=xa?null:e=>new Worker(e??Gr,{type:"module",name:va})}),Ku={};An(Ku,{default:()=>Hu});var Ta,Ea,Hu,qu,Tv=Re(()=>{Ea=(Ta=self.location.href,async function(e={}){var r,t,s=e,n=new Promise((h,T)=>{r=h,t=T}),o=typeof window=="object",i=typeof WorkerGlobalScope<"u",a=i&&self.name?.startsWith("em-pthread");s.mountExternalData=(h,T)=>{h.startsWith("./")&&(h=h.substring(2)),(s.Eb||(s.Eb=new Map)).set(h,T)},s.unmountExternalData=()=>{delete s.Eb};var l=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let u=h=>async(...T)=>{try{if(s.Fb)throw Error("Session already started");let I=s.Fb={dc:T[0],errors:[]},D=await h(...T);if(s.Fb!==I)throw Error("Session mismatch");s.Jb?.flush();let V=I.errors;if(0<V.length){let ie=await Promise.all(V);if(ie=ie.filter(xe=>xe),0<ie.length)throw Error(ie.join(`
`))}return D}finally{s.Fb=null}};s.jsepInit=(h,T)=>{if(h==="webgpu"){[s.Jb,s.Ub,s.Yb,s.Kb,s.Xb,s.jb,s.Zb,s.ac,s.Vb,s.Wb,s.$b]=T;let I=s.Jb;s.jsepRegisterBuffer=(D,V,ie,xe)=>I.registerBuffer(D,V,ie,xe),s.jsepGetBuffer=D=>I.getBuffer(D),s.jsepCreateDownloader=(D,V,ie)=>I.createDownloader(D,V,ie),s.jsepOnCreateSession=D=>{I.onCreateSession(D)},s.jsepOnReleaseSession=D=>{I.onReleaseSession(D)},s.jsepOnRunStart=D=>I.onRunStart(D),s.bc=(D,V)=>{I.upload(D,V)}}else if(h==="webnn"){let I=T[0];[s.nc,s.Nb,s.webnnEnsureTensor,s.Ob,s.webnnDownloadTensor]=T.slice(1),s.webnnReleaseTensorId=s.Nb,s.webnnUploadTensor=s.Ob,s.webnnOnRunStart=D=>I.onRunStart(D),s.webnnOnRunEnd=I.onRunEnd.bind(I),s.webnnRegisterMLContext=(D,V)=>{I.registerMLContext(D,V)},s.webnnOnReleaseSession=D=>{I.onReleaseSession(D)},s.webnnCreateMLTensorDownloader=(D,V)=>I.createMLTensorDownloader(D,V),s.webnnRegisterMLTensor=(D,V,ie,xe)=>I.registerMLTensor(D,V,ie,xe),s.webnnCreateMLContext=D=>I.createMLContext(D),s.webnnRegisterMLConstant=(D,V,ie,xe,ze,Qe)=>I.registerMLConstant(D,V,ie,xe,ze,s.Eb,Qe),s.webnnRegisterGraphInput=I.registerGraphInput.bind(I),s.webnnIsGraphInput=I.isGraphInput.bind(I),s.webnnCreateTemporaryTensor=I.createTemporaryTensor.bind(I),s.webnnIsInt64Supported=I.isInt64Supported.bind(I)}};let p=()=>{let h=(T,I,D)=>(...V)=>{let ie=tr,xe=I?.();V=T(...V);let ze=I?.();return xe!==ze&&(T=ze,D(xe),I=D=null),tr!=ie?new Promise((Qe,st)=>{Cr={resolve:Qe,reject:st}}):V};(()=>{for(let T of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])s[T]=h(s[T],()=>s[T],I=>s[T]=I)})(),u!==void 0&&(s._OrtRun=u(s._OrtRun),s._OrtRunWithBinding=u(s._OrtRunWithBinding)),p=void 0};s.asyncInit=()=>{p?.()};var c,d,_=Object.assign({},s),f=(h,T)=>{throw T},E="";(o||i)&&(i?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),Ta&&(E=Ta),E=E.startsWith("blob:")?"":E.slice(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1),i&&(d=h=>{var T=new XMLHttpRequest;return T.open("GET",h,!1),T.responseType="arraybuffer",T.send(null),new Uint8Array(T.response)}),c=async h=>{if(he(h))return new Promise((I,D)=>{var V=new XMLHttpRequest;V.open("GET",h,!0),V.responseType="arraybuffer",V.onload=()=>{V.status==200||V.status==0&&V.response?I(V.response):D(V.status)},V.onerror=D,V.send(null)});var T=await fetch(h,{credentials:"same-origin"});if(T.ok)return T.arrayBuffer();throw Error(T.status+" : "+T.url)});var k=console.log.bind(console),b=console.error.bind(console),g=k,C=b;Object.assign(s,_),_=null;var x,v,w,y,S,O,R,H,Q,L,Y,q,X,re=s.wasmBinary,te=!1,he=h=>h.startsWith("file://");function ue(){return x.buffer!=y.buffer&&de(),y}function N(){return x.buffer!=y.buffer&&de(),S}function A(){return x.buffer!=y.buffer&&de(),O}function K(){return x.buffer!=y.buffer&&de(),R}function j(){return x.buffer!=y.buffer&&de(),H}function ae(){return x.buffer!=y.buffer&&de(),Q}function Ae(){return x.buffer!=y.buffer&&de(),L}function ve(){return x.buffer!=y.buffer&&de(),X}if(a){let h=function(T){try{var I=T.data,D=I.Bb;if(D==="load"){let V=[];self.onmessage=ie=>V.push(ie),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let ie of V)h(ie);self.onmessage=h};for(let ie of I.Rb)s[ie]&&!s[ie].proxy||(s[ie]=(...xe)=>{postMessage({Bb:"callHandler",Qb:ie,args:xe})},ie=="print"&&(g=s[ie]),ie=="printErr"&&(C=s[ie]));x=I.kc,de(),Ie(I.lc)}else if(D==="run"){z(I.Ab),xn(I.Ab,0,0,1,0,0),Er(),oe(I.Ab),Ve||(Vo(),Ve=!0);try{ne(I.fc,I.Hb)}catch(V){if(V!="unwind")throw V}}else I.target!=="setimmediate"&&(D==="checkMailbox"?Ve&&ce():D&&(C(`worker: received unknown command ${D}`),C(I)))}catch(V){throw Uo(),V}};var Ie,Ve=!1;C=function(...T){T=T.join(" "),console.error(T)},self.alert=function(...T){postMessage({Bb:"alert",text:T.join(" "),ic:qs()})},self.onunhandledrejection=T=>{throw T.reason||T},self.onmessage=h}function de(){var h=x.buffer;s.HEAP8=y=new Int8Array(h),s.HEAP16=O=new Int16Array(h),s.HEAPU8=S=new Uint8Array(h),s.HEAPU16=R=new Uint16Array(h),s.HEAP32=H=new Int32Array(h),s.HEAPU32=Q=new Uint32Array(h),s.HEAPF32=L=new Float32Array(h),s.HEAPF64=X=new Float64Array(h),s.HEAP64=Y=new BigInt64Array(h),s.HEAPU64=q=new BigUint64Array(h)}function G(){a?startWorker(s):ut.Ca()}a||(x=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),de());var le,W=0,we=null;function Me(){if(--W==0&&we){var h=we;we=null,h()}}function Ce(h){throw C(h="Aborted("+h+")"),te=!0,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),t(h),h}function Pe(){return{a:{L:je,Aa:Fe,b:ee,$:Oe,A:tt,pa:Zt,X:Wt,Z:Or,qa:Ht,na:kr,ga:rs,ma:ws,J:ss,Y:Ps,V:jr,oa:Cs,W:Hr,va:Ds,E:Le,Q:ct,O:dn,D:pn,u:hn,r:mn,P:fn,z:pe,R:$,ja:U,T:ye,aa:Xe,M:Ge,F:Ze,ia:oe,sa:_t,t:or,Ba:Nt,w:Sr,o:wr,l:dr,c:Ls,n:as,j:Ti,v:Ei,p:Gs,f:Pi,s:Ci,m:Si,e:$i,k:Ii,i:Eo,g:ki,d:Ai,da:Po,ea:$o,fa:ac,ba:Io,ca:jn,N:ko,xa:Fi,ua:Di,h:Li,C:Un,G:Fo,ta:Oi,x:zi,ra:Oo,U:Bs,q:Nn,y:Bi,K:lc,S:Ri,za:ji,ya:Ni,ka:bn,la:Lo,_:$e,B:zo,I:Bo,ha:qn,H:Ro,a:x,wa:pt}}}var Se={829644:(h,T,I,D,V)=>{if(s===void 0||!s.Eb)return 1;if((h=et(Number(h>>>0))).startsWith("./")&&(h=h.substring(2)),!(h=s.Eb.get(h)))return 2;if(T=Number(T>>>0),I=Number(I>>>0),D=Number(D>>>0),T+I>h.byteLength)return 3;try{let ie=h.subarray(T,T+I);switch(V){case 0:N().set(ie,D>>>0);break;case 1:s.mc?s.mc(D,ie):s.bc(D,ie);break;default:return 4}return 0}catch{return 4}},830468:(h,T,I)=>{s.Ob(h,N().subarray(T>>>0,T+I>>>0))},830532:()=>s.nc(),830574:h=>{s.Nb(h)},830611:()=>{s.Vb()},830642:()=>{s.Wb()},830671:()=>{s.$b()},830696:h=>s.Ub(h),830729:h=>s.Yb(h),830761:(h,T,I)=>{s.Kb(Number(h),Number(T),Number(I),!0)},830824:(h,T,I)=>{s.Kb(Number(h),Number(T),Number(I))},830881:()=>typeof wasmOffsetConverter<"u",830938:h=>{s.jb("Abs",h,void 0)},830989:h=>{s.jb("Neg",h,void 0)},831040:h=>{s.jb("Floor",h,void 0)},831093:h=>{s.jb("Ceil",h,void 0)},831145:h=>{s.jb("Reciprocal",h,void 0)},831203:h=>{s.jb("Sqrt",h,void 0)},831255:h=>{s.jb("Exp",h,void 0)},831306:h=>{s.jb("Erf",h,void 0)},831357:h=>{s.jb("Sigmoid",h,void 0)},831412:(h,T,I)=>{s.jb("HardSigmoid",h,{alpha:T,beta:I})},831491:h=>{s.jb("Log",h,void 0)},831542:h=>{s.jb("Sin",h,void 0)},831593:h=>{s.jb("Cos",h,void 0)},831644:h=>{s.jb("Tan",h,void 0)},831695:h=>{s.jb("Asin",h,void 0)},831747:h=>{s.jb("Acos",h,void 0)},831799:h=>{s.jb("Atan",h,void 0)},831851:h=>{s.jb("Sinh",h,void 0)},831903:h=>{s.jb("Cosh",h,void 0)},831955:h=>{s.jb("Asinh",h,void 0)},832008:h=>{s.jb("Acosh",h,void 0)},832061:h=>{s.jb("Atanh",h,void 0)},832114:h=>{s.jb("Tanh",h,void 0)},832166:h=>{s.jb("Not",h,void 0)},832217:(h,T,I)=>{s.jb("Clip",h,{min:T,max:I})},832286:h=>{s.jb("Clip",h,void 0)},832338:(h,T)=>{s.jb("Elu",h,{alpha:T})},832396:h=>{s.jb("Gelu",h,void 0)},832448:h=>{s.jb("Relu",h,void 0)},832500:(h,T)=>{s.jb("LeakyRelu",h,{alpha:T})},832564:(h,T)=>{s.jb("ThresholdedRelu",h,{alpha:T})},832634:(h,T)=>{s.jb("Cast",h,{to:T})},832692:h=>{s.jb("Add",h,void 0)},832743:h=>{s.jb("Sub",h,void 0)},832794:h=>{s.jb("Mul",h,void 0)},832845:h=>{s.jb("Div",h,void 0)},832896:h=>{s.jb("Pow",h,void 0)},832947:h=>{s.jb("Equal",h,void 0)},833e3:h=>{s.jb("Greater",h,void 0)},833055:h=>{s.jb("GreaterOrEqual",h,void 0)},833117:h=>{s.jb("Less",h,void 0)},833169:h=>{s.jb("LessOrEqual",h,void 0)},833228:(h,T,I,D,V)=>{s.jb("ReduceMean",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},833403:(h,T,I,D,V)=>{s.jb("ReduceMax",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},833577:(h,T,I,D,V)=>{s.jb("ReduceMin",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},833751:(h,T,I,D,V)=>{s.jb("ReduceProd",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},833926:(h,T,I,D,V)=>{s.jb("ReduceSum",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},834100:(h,T,I,D,V)=>{s.jb("ReduceL1",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},834273:(h,T,I,D,V)=>{s.jb("ReduceL2",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},834446:(h,T,I,D,V)=>{s.jb("ReduceLogSum",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},834623:(h,T,I,D,V)=>{s.jb("ReduceSumSquare",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},834803:(h,T,I,D,V)=>{s.jb("ReduceLogSumExp",h,{keepDims:!!T,noopWithEmptyAxes:!!I,axes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},834983:h=>{s.jb("Where",h,void 0)},835036:(h,T,I)=>{s.jb("Transpose",h,{perm:T?Array.from(j().subarray(Number(T)>>>0,Number(I)>>>0)):[]})},835160:(h,T,I,D)=>{s.jb("DepthToSpace",h,{blocksize:T,mode:et(I),format:D?"NHWC":"NCHW"})},835293:(h,T,I,D)=>{s.jb("DepthToSpace",h,{blocksize:T,mode:et(I),format:D?"NHWC":"NCHW"})},835426:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr,Is)=>{s.jb("ConvTranspose",h,{format:Qe?"NHWC":"NCHW",autoPad:T,dilations:[I],group:D,kernelShape:[V],pads:[ie,xe],strides:[ze],wIsConst:()=>!!ue()[st>>>0],outputPadding:Mt?Array.from(j().subarray(Number(Mt)>>>0,Number(It)>>>0)):[],outputShape:Rt?Array.from(j().subarray(Number(Rt)>>>0,Number(Mr)>>>0)):[],activation:et(Is)})},835859:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr)=>{s.jb("ConvTranspose",h,{format:ze?"NHWC":"NCHW",autoPad:T,dilations:Array.from(j().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),group:D,kernelShape:Array.from(j().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(j().subarray(Number(ie)>>>0,4+(Number(ie)>>>0)>>>0)),strides:Array.from(j().subarray(Number(xe)>>>0,2+(Number(xe)>>>0)>>>0)),wIsConst:()=>!!ue()[Qe>>>0],outputPadding:st?Array.from(j().subarray(Number(st)>>>0,Number(Mt)>>>0)):[],outputShape:It?Array.from(j().subarray(Number(It)>>>0,Number(Rt)>>>0)):[],activation:et(Mr)})},836520:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr,Is)=>{s.jb("ConvTranspose",h,{format:Qe?"NHWC":"NCHW",autoPad:T,dilations:[I],group:D,kernelShape:[V],pads:[ie,xe],strides:[ze],wIsConst:()=>!!ue()[st>>>0],outputPadding:Mt?Array.from(j().subarray(Number(Mt)>>>0,Number(It)>>>0)):[],outputShape:Rt?Array.from(j().subarray(Number(Rt)>>>0,Number(Mr)>>>0)):[],activation:et(Is)})},836953:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr)=>{s.jb("ConvTranspose",h,{format:ze?"NHWC":"NCHW",autoPad:T,dilations:Array.from(j().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),group:D,kernelShape:Array.from(j().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(j().subarray(Number(ie)>>>0,4+(Number(ie)>>>0)>>>0)),strides:Array.from(j().subarray(Number(xe)>>>0,2+(Number(xe)>>>0)>>>0)),wIsConst:()=>!!ue()[Qe>>>0],outputPadding:st?Array.from(j().subarray(Number(st)>>>0,Number(Mt)>>>0)):[],outputShape:It?Array.from(j().subarray(Number(It)>>>0,Number(Rt)>>>0)):[],activation:et(Mr)})},837614:(h,T)=>{s.jb("GlobalAveragePool",h,{format:T?"NHWC":"NCHW"})},837705:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr)=>{s.jb("AveragePool",h,{format:Mr?"NHWC":"NCHW",auto_pad:T,ceil_mode:I,count_include_pad:D,storage_order:V,dilations:ie?Array.from(j().subarray(Number(ie)>>>0,Number(xe)>>>0)):[],kernel_shape:ze?Array.from(j().subarray(Number(ze)>>>0,Number(Qe)>>>0)):[],pads:st?Array.from(j().subarray(Number(st)>>>0,Number(Mt)>>>0)):[],strides:It?Array.from(j().subarray(Number(It)>>>0,Number(Rt)>>>0)):[]})},838184:(h,T)=>{s.jb("GlobalAveragePool",h,{format:T?"NHWC":"NCHW"})},838275:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr)=>{s.jb("AveragePool",h,{format:Mr?"NHWC":"NCHW",auto_pad:T,ceil_mode:I,count_include_pad:D,storage_order:V,dilations:ie?Array.from(j().subarray(Number(ie)>>>0,Number(xe)>>>0)):[],kernel_shape:ze?Array.from(j().subarray(Number(ze)>>>0,Number(Qe)>>>0)):[],pads:st?Array.from(j().subarray(Number(st)>>>0,Number(Mt)>>>0)):[],strides:It?Array.from(j().subarray(Number(It)>>>0,Number(Rt)>>>0)):[]})},838754:(h,T)=>{s.jb("GlobalMaxPool",h,{format:T?"NHWC":"NCHW"})},838841:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr)=>{s.jb("MaxPool",h,{format:Mr?"NHWC":"NCHW",auto_pad:T,ceil_mode:I,count_include_pad:D,storage_order:V,dilations:ie?Array.from(j().subarray(Number(ie)>>>0,Number(xe)>>>0)):[],kernel_shape:ze?Array.from(j().subarray(Number(ze)>>>0,Number(Qe)>>>0)):[],pads:st?Array.from(j().subarray(Number(st)>>>0,Number(Mt)>>>0)):[],strides:It?Array.from(j().subarray(Number(It)>>>0,Number(Rt)>>>0)):[]})},839316:(h,T)=>{s.jb("GlobalMaxPool",h,{format:T?"NHWC":"NCHW"})},839403:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr)=>{s.jb("MaxPool",h,{format:Mr?"NHWC":"NCHW",auto_pad:T,ceil_mode:I,count_include_pad:D,storage_order:V,dilations:ie?Array.from(j().subarray(Number(ie)>>>0,Number(xe)>>>0)):[],kernel_shape:ze?Array.from(j().subarray(Number(ze)>>>0,Number(Qe)>>>0)):[],pads:st?Array.from(j().subarray(Number(st)>>>0,Number(Mt)>>>0)):[],strides:It?Array.from(j().subarray(Number(It)>>>0,Number(Rt)>>>0)):[]})},839878:(h,T,I,D,V)=>{s.jb("Gemm",h,{alpha:T,beta:I,transA:D,transB:V})},839982:h=>{s.jb("MatMul",h,void 0)},840036:(h,T,I,D)=>{s.jb("ArgMax",h,{keepDims:!!T,selectLastIndex:!!I,axis:D})},840144:(h,T,I,D)=>{s.jb("ArgMin",h,{keepDims:!!T,selectLastIndex:!!I,axis:D})},840252:(h,T)=>{s.jb("Softmax",h,{axis:T})},840315:(h,T)=>{s.jb("Concat",h,{axis:T})},840375:(h,T,I,D,V)=>{s.jb("Split",h,{axis:T,numOutputs:I,splitSizes:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},840531:h=>{s.jb("Expand",h,void 0)},840585:(h,T)=>{s.jb("Gather",h,{axis:Number(T)})},840656:(h,T)=>{s.jb("GatherElements",h,{axis:Number(T)})},840735:(h,T)=>{s.jb("GatherND",h,{batch_dims:Number(T)})},840814:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt)=>{s.jb("Resize",h,{antialias:T,axes:I?Array.from(j().subarray(Number(I)>>>0,Number(D)>>>0)):[],coordinateTransformMode:et(V),cubicCoeffA:ie,excludeOutside:xe,extrapolationValue:ze,keepAspectRatioPolicy:et(Qe),mode:et(st),nearestMode:et(Mt)})},841176:(h,T,I,D,V,ie,xe)=>{s.jb("Slice",h,{starts:T?Array.from(j().subarray(Number(T)>>>0,Number(I)>>>0)):[],ends:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[],axes:ie?Array.from(j().subarray(Number(ie)>>>0,Number(xe)>>>0)):[]})},841440:h=>{s.jb("Tile",h,void 0)},841492:(h,T,I)=>{s.jb("InstanceNormalization",h,{epsilon:T,format:I?"NHWC":"NCHW"})},841606:(h,T,I)=>{s.jb("InstanceNormalization",h,{epsilon:T,format:I?"NHWC":"NCHW"})},841720:h=>{s.jb("Range",h,void 0)},841773:(h,T)=>{s.jb("Einsum",h,{equation:et(T)})},841854:(h,T,I,D,V)=>{s.jb("Pad",h,{mode:T,value:I,pads:D?Array.from(j().subarray(Number(D)>>>0,Number(V)>>>0)):[]})},841997:(h,T,I,D,V,ie)=>{s.jb("BatchNormalization",h,{epsilon:T,momentum:I,spatial:!!V,trainingMode:!!D,format:ie?"NHWC":"NCHW"})},842166:(h,T,I,D,V,ie)=>{s.jb("BatchNormalization",h,{epsilon:T,momentum:I,spatial:!!V,trainingMode:!!D,format:ie?"NHWC":"NCHW"})},842335:(h,T,I)=>{s.jb("CumSum",h,{exclusive:Number(T),reverse:Number(I)})},842432:(h,T,I)=>{s.jb("DequantizeLinear",h,{axis:T,blockSize:I})},842522:(h,T,I,D,V)=>{s.jb("GridSample",h,{align_corners:T,mode:et(I),padding_mode:et(D),format:V?"NHWC":"NCHW"})},842692:(h,T,I,D,V)=>{s.jb("GridSample",h,{align_corners:T,mode:et(I),padding_mode:et(D),format:V?"NHWC":"NCHW"})},842862:(h,T)=>{s.jb("ScatterND",h,{reduction:et(T)})},842947:(h,T,I,D,V,ie,xe,ze,Qe)=>{s.jb("Attention",h,{numHeads:T,isUnidirectional:I,maskFilterValue:D,scale:V,doRotary:ie,qkvHiddenSizes:xe?Array.from(j().subarray(Number(ze)>>>0,Number(ze)+xe>>>0)):[],pastPresentShareBuffer:!!Qe})},843219:h=>{s.jb("BiasAdd",h,void 0)},843274:h=>{s.jb("BiasSplitGelu",h,void 0)},843335:h=>{s.jb("FastGelu",h,void 0)},843391:(h,T,I,D,V,ie,xe,ze,Qe,st,Mt,It,Rt,Mr,Is,Ui)=>{s.jb("Conv",h,{format:It?"NHWC":"NCHW",auto_pad:T,dilations:I?Array.from(j().subarray(Number(I)>>>0,Number(D)>>>0)):[],group:V,kernel_shape:ie?Array.from(j().subarray(Number(ie)>>>0,Number(xe)>>>0)):[],pads:ze?Array.from(j().subarray(Number(ze)>>>0,Number(Qe)>>>0)):[],strides:st?Array.from(j().subarray(Number(st)>>>0,Number(Mt)>>>0)):[],w_is_const:()=>!!ue()[Number(Rt)>>>0],activation:et(Mr),activation_params:Is?Array.from(Ae().subarray(Number(Is)>>>0,Number(Ui)>>>0)):[]})},843975:h=>{s.jb("Gelu",h,void 0)},844027:(h,T,I,D,V,ie,xe,ze,Qe)=>{s.jb("GroupQueryAttention",h,{numHeads:T,kvNumHeads:I,scale:D,softcap:V,doRotary:ie,rotaryInterleaved:xe,smoothSoftmax:ze,localWindowSize:Qe})},844244:(h,T,I,D)=>{s.jb("LayerNormalization",h,{axis:T,epsilon:I,simplified:!!D})},844355:(h,T,I,D)=>{s.jb("LayerNormalization",h,{axis:T,epsilon:I,simplified:!!D})},844466:(h,T,I,D,V,ie)=>{s.jb("MatMulNBits",h,{k:T,n:I,accuracyLevel:D,bits:V,blockSize:ie})},844593:(h,T,I,D,V,ie)=>{s.jb("MultiHeadAttention",h,{numHeads:T,isUnidirectional:I,maskFilterValue:D,scale:V,doRotary:ie})},844752:(h,T)=>{s.jb("QuickGelu",h,{alpha:T})},844816:(h,T,I,D,V)=>{s.jb("RotaryEmbedding",h,{interleaved:!!T,numHeads:I,rotaryEmbeddingDim:D,scale:V})},844955:(h,T,I)=>{s.jb("SkipLayerNormalization",h,{epsilon:T,simplified:!!I})},845057:(h,T,I)=>{s.jb("SkipLayerNormalization",h,{epsilon:T,simplified:!!I})},845159:(h,T,I,D)=>{s.jb("GatherBlockQuantized",h,{gatherAxis:T,quantizeAxis:I,blockSize:D})},845280:h=>{s.Zb(h)},845314:(h,T)=>s.ac(Number(h),Number(T),s.Fb.dc,s.Fb.errors)};function Fe(h,T,I){return is(async()=>{await s.Xb(Number(h),Number(T),Number(I))})}function je(){return typeof wasmOffsetConverter<"u"}class Ke{constructor(T){Z(this,"name","ExitStatus");this.message=`Program terminated with exit(${T})`,this.status=T}}var Ue=h=>{h.terminate(),h.onmessage=()=>{}},ke=[],He=h=>{nt.length==0&&(ts(),wt(nt[0]));var T=nt.pop();if(!T)return 6;Et.push(T),Ft[h.Ab]=T,T.Ab=h.Ab;var I={Bb:"run",fc:h.ec,Hb:h.Hb,Ab:h.Ab};return T.postMessage(I,h.Mb),0},Ye=0,We=(h,T,...I)=>{for(var D=2*I.length,V=Zn(),ie=En(8*D),xe=ie>>>3,ze=0;ze<I.length;ze++){var Qe=I[ze];typeof Qe=="bigint"?(Y[xe+2*ze]=1n,Y[xe+2*ze+1]=Qe):(Y[xe+2*ze]=0n,ve()[xe+2*ze+1>>>0]=Qe)}return h=Wo(h,0,D,ie,T),Tn(V),h};function pt(h){if(a)return We(0,1,h);if(w=h,!(0<Ye)){for(var T of Et)Ue(T);for(T of nt)Ue(T);nt=[],Et=[],Ft={},te=!0}f(0,new Ke(h))}function at(h){if(a)return We(1,0,h);$e(h)}var $e=h=>{if(w=h,a)throw at(h),"unwind";pt(h)},nt=[],Et=[],Qt=[],Ft={},mr=h=>{var T=h.Ab;delete Ft[T],nt.push(h),Et.splice(Et.indexOf(h),1),h.Ab=0,Xn(T)};function Er(){Qt.forEach(h=>h())}var wt=h=>new Promise(T=>{h.onmessage=V=>{var ie=(V=V.data).Bb;if(V.Gb&&V.Gb!=qs()){var xe=Ft[V.Gb];xe?xe.postMessage(V,V.Mb):C(`Internal error! Worker sent a message "${ie}" to target pthread ${V.Gb}, but that thread no longer exists!`)}else ie==="checkMailbox"?ce():ie==="spawnThread"?He(V):ie==="cleanupThread"?mr(Ft[V.hc]):ie==="loaded"?(h.loaded=!0,T(h)):ie==="alert"?alert(`Thread ${V.ic}: ${V.text}`):V.target==="setimmediate"?h.postMessage(V):ie==="callHandler"?s[V.Qb](...V.args):ie&&C(`worker sent an unknown command ${ie}`)},h.onerror=V=>{throw C(`worker sent an error! ${V.filename}:${V.lineno}: ${V.message}`),V};var I,D=[];for(I of[])s.propertyIsEnumerable(I)&&D.push(I);h.postMessage({Bb:"load",Rb:D,kc:x,lc:v})});function ts(){var h=new Worker((()=>{let T=URL;return self.location.href>"file:"&&self.location.href<"file;"?new T("ort.bundle.min.mjs",self.location.href):new URL(self.location.href)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});nt.push(h)}var z=h=>{de();var T=ae()[h+52>>>2>>>0];h=ae()[h+56>>>2>>>0],Ko(T,T-h),Tn(T)},ne=(h,T)=>{Ye=0,h=Ho(h,T),0<Ye?w=h:Jn(h)};class B{constructor(T){this.Ib=T-24}}function ee(h,T,I){var D=new B(h>>>=0);throw T>>>=0,I>>>=0,ae()[D.Ib+16>>>2>>>0]=0,ae()[D.Ib+4>>>2>>>0]=T,ae()[D.Ib+8>>>2>>>0]=I,h}function me(h,T,I,D){return a?We(2,1,h,T,I,D):Oe(h,T,I,D)}function Oe(h,T,I,D){if(h>>>=0,I>>>=0,D>>>=0,l===void 0)return 6;var V=[];return a&&V.length===0?me(h,T>>>=0,I,D):(h={ec:I,Ab:h,Hb:D,Mb:V},a?(h.Bb="spawnThread",postMessage(h,V),0):He(h))}var be=typeof TextDecoder<"u"?new TextDecoder:void 0,dt=(h,T=0,I=NaN)=>{var D=(T>>>=0)+I;for(I=T;h[I]&&!(I>=D);)++I;if(16<I-T&&h.buffer&&be)return be.decode(h.buffer instanceof ArrayBuffer?h.subarray(T,I):h.slice(T,I));for(D="";T<I;){var V=h[T++];if(128&V){var ie=63&h[T++];if((224&V)==192)D+=String.fromCharCode((31&V)<<6|ie);else{var xe=63&h[T++];65536>(V=(240&V)==224?(15&V)<<12|ie<<6|xe:(7&V)<<18|ie<<12|xe<<6|63&h[T++])?D+=String.fromCharCode(V):(V-=65536,D+=String.fromCharCode(55296|V>>10,56320|1023&V))}}else D+=String.fromCharCode(V)}return D},et=(h,T)=>(h>>>=0)?dt(N(),h,T):"";function tt(h,T,I){return a?We(3,1,h,T,I):0}function Zt(h,T){if(a)return We(4,1,h,T)}var $t=h=>{for(var T=0,I=0;I<h.length;++I){var D=h.charCodeAt(I);127>=D?T++:2047>=D?T+=2:55296<=D&&57343>=D?(T+=4,++I):T+=3}return T},nr=(h,T,I)=>{var D=N();if(T>>>=0,0<I){var V=T;I=T+I-1;for(var ie=0;ie<h.length;++ie){var xe=h.charCodeAt(ie);if(55296<=xe&&57343>=xe&&(xe=65536+((1023&xe)<<10)|1023&h.charCodeAt(++ie)),127>=xe){if(T>=I)break;D[T++>>>0]=xe}else{if(2047>=xe){if(T+1>=I)break;D[T++>>>0]=192|xe>>6}else{if(65535>=xe){if(T+2>=I)break;D[T++>>>0]=224|xe>>12}else{if(T+3>=I)break;D[T++>>>0]=240|xe>>18,D[T++>>>0]=128|xe>>12&63}D[T++>>>0]=128|xe>>6&63}D[T++>>>0]=128|63&xe}}D[T>>>0]=0,h=T-V}else h=0;return h};function Wt(h,T){if(a)return We(5,1,h,T)}function Or(h,T,I){if(a)return We(6,1,h,T,I)}function Ht(h,T,I){return a?We(7,1,h,T,I):0}function kr(h,T){if(a)return We(8,1,h,T)}function rs(h,T,I){if(a)return We(9,1,h,T,I)}function ws(h,T,I,D){if(a)return We(10,1,h,T,I,D)}function ss(h,T,I,D){if(a)return We(11,1,h,T,I,D)}function Ps(h,T,I,D){if(a)return We(12,1,h,T,I,D)}function jr(h){if(a)return We(13,1,h)}function Cs(h,T){if(a)return We(14,1,h,T)}function Hr(h,T,I){if(a)return We(15,1,h,T,I)}var Ms,Dr,Ds=()=>Ce(""),er=h=>{for(var T="";N()[h>>>0];)T+=Ms[N()[h++>>>0]];return T},ns={},os={};function Ar(h,T,I={}){return function(D,V,ie={}){var xe=V.name;if(!D)throw new Dr(`type "${xe}" must have a positive integer typeid pointer`);if(os.hasOwnProperty(D)){if(ie.Sb)return;throw new Dr(`Cannot register type '${xe}' twice`)}os[D]=V,ns.hasOwnProperty(D)&&(V=ns[D],delete ns[D],V.forEach(ze=>ze()))}(h,T,I)}var Nr=(h,T,I)=>{switch(T){case 1:return I?D=>ue()[D>>>0]:D=>N()[D>>>0];case 2:return I?D=>A()[D>>>1>>>0]:D=>K()[D>>>1>>>0];case 4:return I?D=>j()[D>>>2>>>0]:D=>ae()[D>>>2>>>0];case 8:return I?D=>Y[D>>>3]:D=>q[D>>>3];default:throw new TypeError(`invalid integer width (${T}): ${h}`)}};function Le(h,T,I){I>>>=0,Ar(h>>>=0,{name:T=er(T>>>0),fromWireType:D=>D,toWireType:function(D,V){if(typeof V!="bigint"&&typeof V!="number")throw V=V===null?"null":(D=typeof V)=="object"||D==="array"||D==="function"?V.toString():""+V,new TypeError(`Cannot convert "${V}" to ${this.name}`);return typeof V=="number"&&(V=BigInt(V)),V},Cb:qe,readValueFromPointer:Nr(T,I,T.indexOf("u")==-1),Db:null})}var qe=8;function ct(h,T,I,D){Ar(h>>>=0,{name:T=er(T>>>0),fromWireType:function(V){return!!V},toWireType:function(V,ie){return ie?I:D},Cb:qe,readValueFromPointer:function(V){return this.fromWireType(N()[V>>>0])},Db:null})}var fr=[],Vr=[];function Ls(h){9<(h>>>=0)&&--Vr[h+1]==0&&(Vr[h]=void 0,fr.push(h))}var lr=h=>{if(!h)throw new Dr("Cannot use deleted val. handle = "+h);return Vr[h]},Pr=h=>{switch(h){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let T=fr.pop()||Vr.length;return Vr[T]=h,Vr[T+1]=1,T}};function zs(h){return this.fromWireType(ae()[h>>>2>>>0])}var un={name:"emscripten::val",fromWireType:h=>{var T=lr(h);return Ls(h),T},toWireType:(h,T)=>Pr(T),Cb:qe,readValueFromPointer:zs,Db:null};function dn(h){return Ar(h>>>0,un)}var bs=(h,T)=>{switch(T){case 4:return function(I){return this.fromWireType(Ae()[I>>>2>>>0])};case 8:return function(I){return this.fromWireType(ve()[I>>>3>>>0])};default:throw new TypeError(`invalid float width (${T}): ${h}`)}};function pn(h,T,I){I>>>=0,Ar(h>>>=0,{name:T=er(T>>>0),fromWireType:D=>D,toWireType:(D,V)=>V,Cb:qe,readValueFromPointer:bs(T,I),Db:null})}function hn(h,T,I,D,V){if(h>>>=0,I>>>=0,T=er(T>>>0),V===-1&&(V=4294967295),V=ze=>ze,D===0){var ie=32-8*I;V=ze=>ze<<ie>>>ie}var xe=T.includes("unsigned")?function(ze,Qe){return Qe>>>0}:function(ze,Qe){return Qe};Ar(h,{name:T,fromWireType:V,toWireType:xe,Cb:qe,readValueFromPointer:Nr(T,I,D!==0),Db:null})}function mn(h,T,I){function D(ie){var xe=ae()[ie>>>2>>>0];return ie=ae()[ie+4>>>2>>>0],new V(ue().buffer,ie,xe)}var V=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][T];Ar(h>>>=0,{name:I=er(I>>>0),fromWireType:D,Cb:qe,readValueFromPointer:D},{Sb:!0})}function fn(h,T){Ar(h>>>=0,{name:T=er(T>>>0),fromWireType:function(I){for(var D,V=ae()[I>>>2>>>0],ie=I+4,xe=ie,ze=0;ze<=V;++ze){var Qe=ie+ze;ze!=V&&N()[Qe>>>0]!=0||(xe=et(xe,Qe-xe),D===void 0?D=xe:(D+="\0",D+=xe),xe=Qe+1)}return Xr(I),D},toWireType:function(I,D){D instanceof ArrayBuffer&&(D=new Uint8Array(D));var V=typeof D=="string";if(!(V||D instanceof Uint8Array||D instanceof Uint8ClampedArray||D instanceof Int8Array))throw new Dr("Cannot pass non-string to std::string");var ie=V?$t(D):D.length,xe=vn(4+ie+1),ze=xe+4;if(ae()[xe>>>2>>>0]=ie,V)nr(D,ze,ie+1);else if(V)for(V=0;V<ie;++V){var Qe=D.charCodeAt(V);if(255<Qe)throw Xr(xe),new Dr("String has UTF-16 code units that do not fit in 8 bits");N()[ze+V>>>0]=Qe}else for(V=0;V<ie;++V)N()[ze+V>>>0]=D[V];return I!==null&&I.push(Xr,xe),xe},Cb:qe,readValueFromPointer:zs,Db(I){Xr(I)}})}var Ws=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ss=(h,T)=>{for(var I=h>>1,D=I+T/2;!(I>=D)&&K()[I>>>0];)++I;if(32<(I<<=1)-h&&Ws)return Ws.decode(N().slice(h,I));for(I="",D=0;!(D>=T/2);++D){var V=A()[h+2*D>>>1>>>0];if(V==0)break;I+=String.fromCharCode(V)}return I},_n=(h,T,I)=>{if(I??(I=2147483647),2>I)return 0;var D=T;I=(I-=2)<2*h.length?I/2:h.length;for(var V=0;V<I;++V){var ie=h.charCodeAt(V);A()[T>>>1>>>0]=ie,T+=2}return A()[T>>>1>>>0]=0,T-D},gn=h=>2*h.length,wn=(h,T)=>{for(var I=0,D="";!(I>=T/4);){var V=j()[h+4*I>>>2>>>0];if(V==0)break;++I,65536<=V?(V-=65536,D+=String.fromCharCode(55296|V>>10,56320|1023&V)):D+=String.fromCharCode(V)}return D},Mn=(h,T,I)=>{if(T>>>=0,I??(I=2147483647),4>I)return 0;var D=T;I=D+I-4;for(var V=0;V<h.length;++V){var ie=h.charCodeAt(V);if(55296<=ie&&57343>=ie&&(ie=65536+((1023&ie)<<10)|1023&h.charCodeAt(++V)),j()[T>>>2>>>0]=ie,(T+=4)+4>I)break}return j()[T>>>2>>>0]=0,T-D},$s=h=>{for(var T=0,I=0;I<h.length;++I){var D=h.charCodeAt(I);55296<=D&&57343>=D&&++I,T+=4}return T};function pe(h,T,I){if(h>>>=0,T>>>=0,I=er(I>>>=0),T===2)var D=Ss,V=_n,ie=gn,xe=ze=>K()[ze>>>1>>>0];else T===4&&(D=wn,V=Mn,ie=$s,xe=ze=>ae()[ze>>>2>>>0]);Ar(h,{name:I,fromWireType:ze=>{for(var Qe,st=ae()[ze>>>2>>>0],Mt=ze+4,It=0;It<=st;++It){var Rt=ze+4+It*T;It!=st&&xe(Rt)!=0||(Mt=D(Mt,Rt-Mt),Qe===void 0?Qe=Mt:(Qe+="\0",Qe+=Mt),Mt=Rt+T)}return Xr(ze),Qe},toWireType:(ze,Qe)=>{if(typeof Qe!="string")throw new Dr(`Cannot pass non-string to C++ string type ${I}`);var st=ie(Qe),Mt=vn(4+st+T);return ae()[Mt>>>2>>>0]=st/T,V(Qe,Mt+4,st+T),ze!==null&&ze.push(Xr,Mt),Mt},Cb:qe,readValueFromPointer:zs,Db(ze){Xr(ze)}})}function $(h,T){Ar(h>>>=0,{Tb:!0,name:T=er(T>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function U(h){xn(h>>>0,!i,1,!o,131072,!1),Er()}var J=h=>{if(!te)try{if(h(),!(0<Ye))try{a?Jn(w):$e(w)}catch(T){T instanceof Ke||T=="unwind"||f(0,T)}}catch(T){T instanceof Ke||T=="unwind"||f(0,T)}};function oe(h){h>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(j(),h>>>2,h).value.then(ce),h+=128,Atomics.store(j(),h>>>2,1))}var ce=()=>{var h=qs();h&&(oe(h),J(Yn))};function ye(h,T){(h>>>=0)==T>>>0?setTimeout(ce):a?postMessage({Gb:h,Bb:"checkMailbox"}):(h=Ft[h])&&h.postMessage({Bb:"checkMailbox"})}var Be=[];function Xe(h,T,I,D,V){for(T>>>=0,D/=2,Be.length=D,I=V>>>0>>>3,V=0;V<D;V++)Be[V]=Y[I+2*V]?Y[I+2*V+1]:ve()[I+2*V+1>>>0];return(T?Se[T]:jo[h])(...Be)}var Ge=()=>{Ye=0};function Ze(h){h>>>=0,a?postMessage({Bb:"cleanupThread",hc:h}):mr(Ft[h])}function _t(h){}var Ot=(h,T)=>{var I=os[h];if(I===void 0)throw h=No(h),I=er(h),Xr(h),new Dr(`${T} has unknown type ${I}`);return I},At=(h,T,I)=>{var D=[];return h=h.toWireType(D,I),D.length&&(ae()[T>>>2>>>0]=Pr(D)),h};function or(h,T,I){return T>>>=0,I>>>=0,h=lr(h>>>0),T=Ot(T,"emval::as"),At(T,I,h)}function Nt(h,T){return T>>>=0,h=lr(h>>>0),(T=Ot(T,"emval::as")).toWireType(null,h)}var pr=h=>{try{h()}catch(T){Ce(T)}},qt=0,tr=null,qr=0,_r=[],ys={},Gt={},gr=0,Cr=null,Qr=[];function is(h){return function(T){if(!te){if(qt===0){var I=!1,D=!1;T((V=0)=>{if(!te&&(qr=V,I=!0,D)){qt=2,pr(()=>Qo(tr)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),V=!1;try{var ie=function(){var Qe=j()[tr+8>>>2>>>0];return Qe=ut[Gt[Qe]],--Ye,Qe()}()}catch(Qe){ie=Qe,V=!0}var xe=!1;if(!tr){var ze=Cr;ze&&(Cr=null,(V?ze.reject:ze.resolve)(ie),xe=!0)}if(V&&!xe)throw ie}}),D=!0,I||(qt=1,tr=function(){var V=vn(65548),ie=V+12;ae()[V>>>2>>>0]=ie,ae()[V+4>>>2>>>0]=ie+65536,ie=_r[0];var xe=ys[ie];return xe===void 0&&(xe=gr++,ys[ie]=xe,Gt[xe]=ie),ie=xe,j()[V+8>>>2>>>0]=ie,V}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),pr(()=>eo(tr)))}else qt===2?(qt=0,pr(to),Xr(tr),tr=null,Qr.forEach(J)):Ce(`invalid state: ${qt}`);return qr}}(T=>{h().then(T)})}function Sr(h){return h>>>=0,is(async()=>{var T=await lr(h);return Pr(T)})}var vr=[];function wr(h,T,I,D){return I>>>=0,D>>>=0,(h=vr[h>>>0])(null,T=lr(T>>>0),I,D)}var cr={},rr=h=>{var T=cr[h];return T===void 0?er(h):T};function dr(h,T,I,D,V){return I>>>=0,D>>>=0,V>>>=0,(h=vr[h>>>0])(T=lr(T>>>0),T[I=rr(I)],D,V)}var Lr=()=>typeof globalThis=="object"?globalThis:Function("return this")();function as(h){return(h>>>=0)==0?Pr(Lr()):(h=rr(h),Pr(Lr()[h]))}var Bn=h=>{var T=vr.length;return vr.push(h),T},xi=(h,T)=>{for(var I=Array(h),D=0;D<h;++D)I[D]=Ot(ae()[T+4*D>>>2>>>0],"parameter "+D);return I},To=(h,T)=>Object.defineProperty(T,"name",{value:h});function Ti(h,T,I){var D=(T=xi(h,T>>>0)).shift();h--;var V=`return function (obj, func, destructorsRef, args) {
`,ie=0,xe=[];I===0&&xe.push("obj");for(var ze=["retType"],Qe=[D],st=0;st<h;++st)xe.push("arg"+st),ze.push("argType"+st),Qe.push(T[st]),V+=`  var arg${st} = argType${st}.readValueFromPointer(args${ie?"+"+ie:""});
`,ie+=T[st].Cb;return V+=`  var rv = ${I===1?"new func":"func.call"}(${xe.join(", ")});
`,D.Tb||(ze.push("emval_returnValue"),Qe.push(At),V+=`  return emval_returnValue(retType, destructorsRef, rv);
`),ze.push(V+`};
`),h=function(Mt){var It=Function;if(!(It instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof It} which is not a function`);var Rt=To(It.name||"unknownFunctionName",function(){});return Rt.prototype=It.prototype,Rt=new Rt,(Mt=It.apply(Rt,Mt))instanceof Object?Mt:Rt}(ze)(...Qe),I=`methodCaller<(${T.map(Mt=>Mt.name).join(", ")}) => ${D.name}>`,Bn(To(I,h))}function Ei(h){return h=rr(h>>>0),Pr(s[h])}function Gs(h,T){return T>>>=0,h=lr(h>>>0),T=lr(T),Pr(h[T])}function Pi(h){9<(h>>>=0)&&(Vr[h+1]+=1)}function Ci(){return Pr([])}function Si(h){h=lr(h>>>0);for(var T=Array(h.length),I=0;I<h.length;I++)T[I]=h[I];return Pr(T)}function $i(h){return Pr(rr(h>>>0))}function Ii(){return Pr({})}function Eo(h){for(var T=lr(h>>>=0);T.length;){var I=T.pop();T.pop()(I)}Ls(h)}function ki(h,T,I){T>>>=0,I>>>=0,h=lr(h>>>0),T=lr(T),I=lr(I),h[T]=I}function Ai(h,T){return T>>>=0,h=(h=Ot(h>>>0,"_emval_take_value")).readValueFromPointer(T),Pr(h)}function Po(h,T){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),T>>>=0,h=new Date(1e3*h),j()[T>>>2>>>0]=h.getUTCSeconds(),j()[T+4>>>2>>>0]=h.getUTCMinutes(),j()[T+8>>>2>>>0]=h.getUTCHours(),j()[T+12>>>2>>>0]=h.getUTCDate(),j()[T+16>>>2>>>0]=h.getUTCMonth(),j()[T+20>>>2>>>0]=h.getUTCFullYear()-1900,j()[T+24>>>2>>>0]=h.getUTCDay(),h=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,j()[T+28>>>2>>>0]=h}var Co=h=>h%4==0&&(h%100!=0||h%400==0),Rn=[0,31,60,91,121,152,182,213,244,274,305,335],So=[0,31,59,90,120,151,181,212,243,273,304,334];function $o(h,T){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),T>>>=0,h=new Date(1e3*h),j()[T>>>2>>>0]=h.getSeconds(),j()[T+4>>>2>>>0]=h.getMinutes(),j()[T+8>>>2>>>0]=h.getHours(),j()[T+12>>>2>>>0]=h.getDate(),j()[T+16>>>2>>>0]=h.getMonth(),j()[T+20>>>2>>>0]=h.getFullYear()-1900,j()[T+24>>>2>>>0]=h.getDay();var I=(Co(h.getFullYear())?Rn:So)[h.getMonth()]+h.getDate()-1|0;j()[T+28>>>2>>>0]=I,j()[T+36>>>2>>>0]=-60*h.getTimezoneOffset(),I=new Date(h.getFullYear(),6,1).getTimezoneOffset();var D=new Date(h.getFullYear(),0,1).getTimezoneOffset();h=0|(I!=D&&h.getTimezoneOffset()==Math.min(D,I)),j()[T+32>>>2>>>0]=h}function ac(h){h>>>=0;var T=new Date(j()[h+20>>>2>>>0]+1900,j()[h+16>>>2>>>0],j()[h+12>>>2>>>0],j()[h+8>>>2>>>0],j()[h+4>>>2>>>0],j()[h>>>2>>>0],0),I=j()[h+32>>>2>>>0],D=T.getTimezoneOffset(),V=new Date(T.getFullYear(),6,1).getTimezoneOffset(),ie=new Date(T.getFullYear(),0,1).getTimezoneOffset(),xe=Math.min(ie,V);return 0>I?j()[h+32>>>2>>>0]=+(V!=ie&&xe==D):0<I!=(xe==D)&&(V=Math.max(ie,V),T.setTime(T.getTime()+6e4*((0<I?xe:V)-D))),j()[h+24>>>2>>>0]=T.getDay(),I=(Co(T.getFullYear())?Rn:So)[T.getMonth()]+T.getDate()-1|0,j()[h+28>>>2>>>0]=I,j()[h>>>2>>>0]=T.getSeconds(),j()[h+4>>>2>>>0]=T.getMinutes(),j()[h+8>>>2>>>0]=T.getHours(),j()[h+12>>>2>>>0]=T.getDate(),j()[h+16>>>2>>>0]=T.getMonth(),j()[h+20>>>2>>>0]=T.getYear(),h=T.getTime(),BigInt(isNaN(h)?-1:h/1e3)}function Io(h,T,I,D,V,ie,xe){return a?We(16,1,h,T,I,D,V,ie,xe):-52}function jn(h,T,I,D,V,ie){if(a)return We(17,1,h,T,I,D,V,ie)}var Ks={},Nn=()=>performance.timeOrigin+performance.now();function ko(h,T){if(a)return We(18,1,h,T);if(Ks[h]&&(clearTimeout(Ks[h].id),delete Ks[h]),!T)return 0;var I=setTimeout(()=>{delete Ks[h],J(()=>Go(h,performance.timeOrigin+performance.now()))},T);return Ks[h]={id:I,qc:T},0}function Fi(h,T,I,D){h>>>=0,T>>>=0,I>>>=0,D>>>=0;var V=new Date().getFullYear(),ie=new Date(V,0,1).getTimezoneOffset();V=new Date(V,6,1).getTimezoneOffset();var xe=Math.max(ie,V);ae()[h>>>2>>>0]=60*xe,j()[T>>>2>>>0]=+(ie!=V),h=(T=ze=>{var Qe=Math.abs(ze);return`UTC${0<=ze?"-":"+"}${String(Math.floor(Qe/60)).padStart(2,"0")}${String(Qe%60).padStart(2,"0")}`})(ie),T=T(V),V<ie?(nr(h,I,17),nr(T,D,17)):(nr(h,D,17),nr(T,I,17))}var Oi=()=>Date.now();function Di(h,T,I){return 0<=h&&3>=h?(h===0?h=Date.now():h=performance.timeOrigin+performance.now(),Y[I>>>0>>>3]=BigInt(Math.round(1e6*h)),0):28}var Vn=[],Ao=(h,T)=>{Vn.length=0;for(var I;I=N()[h++>>>0];){var D=I!=105;T+=(D&=I!=112)&&T%8?4:0,Vn.push(I==112?ae()[T>>>2>>>0]:I==106?Y[T>>>3]:I==105?j()[T>>>2>>>0]:ve()[T>>>3>>>0]),T+=D?8:4}return Vn};function Li(h,T,I){return h>>>=0,T=Ao(T>>>0,I>>>0),Se[h](...T)}function Un(h,T,I){return h>>>=0,T=Ao(T>>>0,I>>>0),Se[h](...T)}var Fo=()=>{};function zi(h,T){return C(et(h>>>0,T>>>0))}var Oo=()=>{throw Ye+=1,"unwind"};function Bs(){return 4294901760}var Bi=()=>navigator.hardwareConcurrency;function lc(){return Ce("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Ri(h){h>>>=0;var T=N().length;if(h<=T||4294901760<h)return!1;for(var I=1;4>=I;I*=2){var D=T*(1+.2/I);D=Math.min(D,h+100663296);e:{D=(Math.min(4294901760,65536*Math.ceil(Math.max(h,D)/65536))-x.buffer.byteLength+65535)/65536|0;try{x.grow(D),de();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1}var Wn=()=>(Ce("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Hs={},Gn=h=>{h.forEach(T=>{Wn()})};function ji(){var h=Error().stack.toString().split(`
`);return h[0]=="Error"&&h.shift(),Gn(h),Hs.Lb=Wn(),Hs.cc=h,Hs.Lb}function Ni(h,T,I){if(h>>>=0,T>>>=0,Hs.Lb==h)var D=Hs.cc;else(D=Error().stack.toString().split(`
`))[0]=="Error"&&D.shift(),Gn(D);for(var V=3;D[V]&&Wn()!=h;)++V;for(h=0;h<I&&D[h+V];++h)j()[T+4*h>>>2>>>0]=Wn();return h}var Kn,Hn={},Do=()=>{if(!Kn){var h,T={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(h in Hn)Hn[h]===void 0?delete T[h]:T[h]=Hn[h];var I=[];for(h in T)I.push(`${h}=${T[h]}`);Kn=I}return Kn};function bn(h,T){if(a)return We(19,1,h,T);h>>>=0,T>>>=0;var I=0;return Do().forEach((D,V)=>{var ie=T+I;for(V=ae()[h+4*V>>>2>>>0]=ie,ie=0;ie<D.length;++ie)ue()[V++>>>0]=D.charCodeAt(ie);ue()[V>>>0]=0,I+=D.length+1}),0}function Lo(h,T){if(a)return We(20,1,h,T);h>>>=0,T>>>=0;var I=Do();ae()[h>>>2>>>0]=I.length;var D=0;return I.forEach(V=>D+=V.length+1),ae()[T>>>2>>>0]=D,0}function zo(h){return a?We(21,1,h):52}function Bo(h,T,I,D){return a?We(22,1,h,T,I,D):52}function qn(h,T,I,D){return a?We(23,1,h,T,I,D):70}var Vi=[null,[],[]];function Ro(h,T,I,D){if(a)return We(24,1,h,T,I,D);T>>>=0,I>>>=0,D>>>=0;for(var V=0,ie=0;ie<I;ie++){var xe=ae()[T>>>2>>>0],ze=ae()[T+4>>>2>>>0];T+=8;for(var Qe=0;Qe<ze;Qe++){var st=N()[xe+Qe>>>0],Mt=Vi[h];st===0||st===10?((h===1?g:C)(dt(Mt)),Mt.length=0):Mt.push(st)}V+=ze}return ae()[D>>>2>>>0]=V,0}a||function(){for(var h=s.numThreads-1;h--;)ts();ke.unshift(()=>{W++,function(T){a?T():Promise.all(nt.map(wt)).then(T)}(()=>Me())})}();for(var Qn=Array(256),yn=0;256>yn;++yn)Qn[yn]=String.fromCharCode(yn);Ms=Qn,Dr=s.BindingError=class extends Error{constructor(h){super(h),this.name="BindingError"}},s.InternalError=class extends Error{constructor(h){super(h),this.name="InternalError"}},Vr.push(0,1,void 0,1,null,1,!0,1,!1,1),s.count_emval_handles=()=>Vr.length/2-5-fr.length;var ut,jo=[pt,at,me,tt,Zt,Wt,Or,Ht,kr,rs,ws,ss,Ps,jr,Cs,Hr,Io,jn,ko,bn,Lo,zo,Bo,qn,Ro];(async function(){function h(D,V){return ut=D.exports,ut=function(){var ie=ut,xe={};for(let[ze,Qe]of Object.entries(ie))xe[ze]=typeof Qe=="function"?(...st)=>{_r.push(ze);try{return Qe(...st)}finally{te||(_r.pop(),tr&&qt===1&&_r.length===0&&(qt=0,Ye+=1,pr(qo),typeof Fibers<"u"&&Fibers.rc()))}}:Qe;return xe}(),ut=function(){var ie=ut,xe=Qe=>st=>Qe(st)>>>0,ze=Qe=>()=>Qe()>>>0;return(ie=Object.assign({},ie)).Da=xe(ie.Da),ie.fb=ze(ie.fb),ie.hb=xe(ie.hb),ie.tb=xe(ie.tb),ie.ub=ze(ie.ub),ie.__cxa_get_exception_ptr=xe(ie.__cxa_get_exception_ptr),ie}(),Qt.push(ut.ib),v=V,Me(),ut}W++;var T=Pe();if(s.instantiateWasm)return new Promise(D=>{s.instantiateWasm(T,(V,ie)=>{h(V,ie),D(V.exports)})});if(a)return new Promise(D=>{Ie=V=>{var ie=new WebAssembly.Instance(V,Pe());D(h(ie,V))}});le??(le=s.locateFile?s.locateFile?s.locateFile("ort-wasm-simd-threaded.jsep.wasm",E):E+"ort-wasm-simd-threaded.jsep.wasm":new URL(""+new URL("ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",self.location.href).href,self.location.href).href);try{var I=await async function(D){var V=le;if(!re&&typeof WebAssembly.instantiateStreaming=="function"&&!he(V))try{var ie=fetch(V,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(ie,D)}catch(xe){C(`wasm streaming compile failed: ${xe}`),C("falling back to ArrayBuffer instantiation")}return async function(xe,ze){try{var Qe=await async function(st){if(!re)try{var Mt=await c(st);return new Uint8Array(Mt)}catch{}if(st==le&&re)st=new Uint8Array(re);else{if(!d)throw"both async and sync fetching of the wasm failed";st=d(st)}return st}(xe);return await WebAssembly.instantiate(Qe,ze)}catch(st){C(`failed to asynchronously prepare wasm: ${st}`),Ce(st)}}(V,D)}(T);return h(I.instance,I.module)}catch(D){return t(D),Promise.reject(D)}})();var No=h=>(No=ut.Da)(h),Vo=()=>(Vo=ut.Ea)();s._OrtInit=(h,T)=>(s._OrtInit=ut.Fa)(h,T),s._OrtGetLastError=(h,T)=>(s._OrtGetLastError=ut.Ga)(h,T),s._OrtCreateSessionOptions=(h,T,I,D,V,ie,xe,ze,Qe,st)=>(s._OrtCreateSessionOptions=ut.Ha)(h,T,I,D,V,ie,xe,ze,Qe,st),s._OrtAppendExecutionProvider=(h,T,I,D,V)=>(s._OrtAppendExecutionProvider=ut.Ia)(h,T,I,D,V),s._OrtAddFreeDimensionOverride=(h,T,I)=>(s._OrtAddFreeDimensionOverride=ut.Ja)(h,T,I),s._OrtAddSessionConfigEntry=(h,T,I)=>(s._OrtAddSessionConfigEntry=ut.Ka)(h,T,I),s._OrtReleaseSessionOptions=h=>(s._OrtReleaseSessionOptions=ut.La)(h),s._OrtCreateSession=(h,T,I)=>(s._OrtCreateSession=ut.Ma)(h,T,I),s._OrtReleaseSession=h=>(s._OrtReleaseSession=ut.Na)(h),s._OrtGetInputOutputCount=(h,T,I)=>(s._OrtGetInputOutputCount=ut.Oa)(h,T,I),s._OrtGetInputOutputMetadata=(h,T,I,D)=>(s._OrtGetInputOutputMetadata=ut.Pa)(h,T,I,D),s._OrtFree=h=>(s._OrtFree=ut.Qa)(h),s._OrtCreateTensor=(h,T,I,D,V,ie)=>(s._OrtCreateTensor=ut.Ra)(h,T,I,D,V,ie),s._OrtGetTensorData=(h,T,I,D,V)=>(s._OrtGetTensorData=ut.Sa)(h,T,I,D,V),s._OrtReleaseTensor=h=>(s._OrtReleaseTensor=ut.Ta)(h),s._OrtCreateRunOptions=(h,T,I,D)=>(s._OrtCreateRunOptions=ut.Ua)(h,T,I,D),s._OrtAddRunConfigEntry=(h,T,I)=>(s._OrtAddRunConfigEntry=ut.Va)(h,T,I),s._OrtReleaseRunOptions=h=>(s._OrtReleaseRunOptions=ut.Wa)(h),s._OrtCreateBinding=h=>(s._OrtCreateBinding=ut.Xa)(h),s._OrtBindInput=(h,T,I)=>(s._OrtBindInput=ut.Ya)(h,T,I),s._OrtBindOutput=(h,T,I,D)=>(s._OrtBindOutput=ut.Za)(h,T,I,D),s._OrtClearBoundOutputs=h=>(s._OrtClearBoundOutputs=ut._a)(h),s._OrtReleaseBinding=h=>(s._OrtReleaseBinding=ut.$a)(h),s._OrtRunWithBinding=(h,T,I,D,V)=>(s._OrtRunWithBinding=ut.ab)(h,T,I,D,V),s._OrtRun=(h,T,I,D,V,ie,xe,ze)=>(s._OrtRun=ut.bb)(h,T,I,D,V,ie,xe,ze),s._OrtEndProfiling=h=>(s._OrtEndProfiling=ut.cb)(h),s._JsepOutput=(h,T,I)=>(s._JsepOutput=ut.db)(h,T,I),s._JsepGetNodeName=h=>(s._JsepGetNodeName=ut.eb)(h);var qs=()=>(qs=ut.fb)(),Xr=s._free=h=>(Xr=s._free=ut.gb)(h),vn=s._malloc=h=>(vn=s._malloc=ut.hb)(h),xn=(h,T,I,D,V,ie)=>(xn=ut.kb)(h,T,I,D,V,ie),Uo=()=>(Uo=ut.lb)(),Wo=(h,T,I,D,V)=>(Wo=ut.mb)(h,T,I,D,V),Xn=h=>(Xn=ut.nb)(h),Jn=h=>(Jn=ut.ob)(h),Go=(h,T)=>(Go=ut.pb)(h,T),Yn=()=>(Yn=ut.qb)(),Ko=(h,T)=>(Ko=ut.rb)(h,T),Tn=h=>(Tn=ut.sb)(h),En=h=>(En=ut.tb)(h),Zn=()=>(Zn=ut.ub)(),Ho=s.dynCall_ii=(h,T)=>(Ho=s.dynCall_ii=ut.vb)(h,T),eo=h=>(eo=ut.wb)(h),qo=()=>(qo=ut.xb)(),Qo=h=>(Qo=ut.yb)(h),to=()=>(to=ut.zb)();return s.stackSave=()=>Zn(),s.stackRestore=h=>Tn(h),s.stackAlloc=h=>En(h),s.setValue=function(h,T,I="i8"){switch(I.endsWith("*")&&(I="*"),I){case"i1":case"i8":ue()[h>>>0]=T;break;case"i16":A()[h>>>1>>>0]=T;break;case"i32":j()[h>>>2>>>0]=T;break;case"i64":Y[h>>>3]=BigInt(T);break;case"float":Ae()[h>>>2>>>0]=T;break;case"double":ve()[h>>>3>>>0]=T;break;case"*":ae()[h>>>2>>>0]=T;break;default:Ce(`invalid type for setValue: ${I}`)}},s.getValue=function(h,T="i8"){switch(T.endsWith("*")&&(T="*"),T){case"i1":case"i8":return ue()[h>>>0];case"i16":return A()[h>>>1>>>0];case"i32":return j()[h>>>2>>>0];case"i64":return Y[h>>>3];case"float":return Ae()[h>>>2>>>0];case"double":return ve()[h>>>3>>>0];case"*":return ae()[h>>>2>>>0];default:Ce(`invalid type for getValue: ${T}`)}},s.UTF8ToString=et,s.stringToUTF8=nr,s.lengthBytesUTF8=$t,function h(){if(0<W)we=h;else if(a)r(s),G();else{for(;0<ke.length;)ke.shift()(s);0<W?we=h:(s.calledRun=!0,te||(G(),r(s)))}}(),s.PTR_SIZE=4,n}),Hu=Ea,qu=globalThis.self?.name?.startsWith("em-pthread"),qu&&Ea()}),Pa,Ca,Qu,Gr,Xu,ri,Ju,Yu,Sa,Zu,$a,ed,Ia,td,ka=Re(()=>{ya(),Pa=typeof location>"u"?void 0:location.origin,Ca=self.location.href>"file:"&&self.location.href<"file;",Qu=()=>{{if(Ca){let e=URL;return new URL(new e("ort.bundle.min.mjs",self.location.href).href,Pa).href}return self.location.href}},Gr=Qu(),Xu=()=>{if(Gr&&!Gr.startsWith("blob:"))return Gr.substring(0,Gr.lastIndexOf("/")+1)},ri=(e,r)=>{try{let t=r??Gr;return(t?new URL(e,t):new URL(e)).origin===Pa}catch{return!1}},Ju=(e,r)=>{let t=r??Gr;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},Yu=(e,r)=>`${r??"./"}${e}`,Sa=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},Zu=async e=>(await import(e)).default,$a=(xv(),io(Wu)).default,ed=async()=>{if(!Gr)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(ri(Gr))return[void 0,$a()];let e=await Sa(Gr);return[e,$a(e)]},Ia=(Tv(),io(Ku)).default,td=async(e,r,t)=>{if(!e&&!r&&Ia&&Gr&&ri(Gr))return[void 0,Ia];{let s="ort-wasm-simd-threaded.jsep.mjs",n=e??Ju(s,r),o=t&&n&&!ri(n,r),i=o?await Sa(n):n??Yu(s,r);return[o?i:void 0,await Zu(i)]}}}),Aa,si,uo,Fa,rd,sd,nd,Oa,Ut,Zs=Re(()=>{ka(),si=!1,uo=!1,Fa=!1,rd=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},sd=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},nd=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},Oa=async e=>{if(si)return Promise.resolve();if(uo)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Fa)throw new Error("previous call to 'initializeWebAssembly()' failed.");uo=!0;let r=e.initTimeout,t=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!nd())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!sd())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let s=rd();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let n=e.wasmPaths,o=typeof n=="string"?n:void 0,i=n?.mjs,a=i?.href??i,l=n?.wasm,u=l?.href??l,p=e.wasmBinary,[c,d]=await td(a,o,t>1),_=!1,f=[];if(r>0&&f.push(new Promise(E=>{setTimeout(()=>{_=!0,E()},r)})),f.push(new Promise((E,k)=>{let b={numThreads:t};if(p)b.wasmBinary=p;else if(u||o)b.locateFile=g=>u??o+g;else if(a&&a.indexOf("blob:")!==0)b.locateFile=g=>new URL(g,a).href;else if(c){let g=Xu();g&&(b.locateFile=C=>g+C)}d(b).then(g=>{uo=!1,si=!0,Aa=g,E(),c&&URL.revokeObjectURL(c)},g=>{uo=!1,Fa=!0,k(g)})})),await Promise.race(f),_)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Ut=()=>{if(si&&Aa)return Aa;throw new Error("WebAssembly is not initialized yet.")}}),ps,ni,jt,Da=Re(()=>{Zs(),ps=(e,r)=>{let t=Ut(),s=t.lengthBytesUTF8(e)+1,n=t._malloc(s);return t.stringToUTF8(e,n,s),r.push(n),n},ni=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([n,o])=>{let i=r?r+n:n;if(typeof o=="object")ni(o,i+".",t,s);else if(typeof o=="string"||typeof o=="number")s(i,o.toString());else if(typeof o=="boolean")s(i,o?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof o}`)})},jt=e=>{let r=Ut(),t=r.stackSave();try{let s=r.PTR_SIZE,n=r.stackAlloc(2*s);r._OrtGetLastError(n,n+s);let o=Number(r.getValue(n,s===4?"i32":"i64")),i=r.getValue(n+s,"*"),a=i?r.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${o}, ERROR_MESSAGE: ${a}`)}finally{r.stackRestore(t)}}}),od,Ev=Re(()=>{Zs(),Da(),od=e=>{let r=Ut(),t=0,s=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let o=0;return e?.tag!==void 0&&(o=ps(e.tag,s)),t=r._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,o),t===0&&jt("Can't create run options."),e?.extra!==void 0&&ni(e.extra,"",new WeakSet,(i,a)=>{let l=ps(i,s),u=ps(a,s);r._OrtAddRunConfigEntry(t,l,u)!==0&&jt(`Can't set a run config entry: ${i} - ${a}.`)}),[t,s]}catch(o){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(i=>r._free(i)),o}}}),id,ad,ld,po,cd,ud,Pv=Re(()=>{Zs(),Da(),id=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},ad=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},ld=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},po=(e,r,t,s)=>{let n=ps(r,s),o=ps(t,s);Ut()._OrtAddSessionConfigEntry(e,n,o)!==0&&jt(`Can't set a session config entry: ${r} - ${t}.`)},cd=async(e,r,t)=>{for(let s of r){let n=typeof s=="string"?s:s.name,o=[];switch(n){case"webnn":if(n="WEBNN",typeof s!="string"){let p=s?.deviceType;p&&po(e,"deviceType",p,t)}break;case"webgpu":if(n="JS",typeof s!="string"){let p=s;if(p?.preferredLayout){if(p.preferredLayout!=="NCHW"&&p.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${p.preferredLayout}`);po(e,"preferredLayout",p.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let i=ps(n,t),a=o.length,l=0,u=0;if(a>0){l=Ut()._malloc(a*Ut().PTR_SIZE),t.push(l),u=Ut()._malloc(a*Ut().PTR_SIZE),t.push(u);for(let p=0;p<a;p++)Ut().setValue(l+p*Ut().PTR_SIZE,o[p][0],"*"),Ut().setValue(u+p*Ut().PTR_SIZE,o[p][1],"*")}await Ut()._OrtAppendExecutionProvider(e,i,l,u,a)!==0&&jt(`Can't append execution provider: ${n}.`)}},ud=async e=>{let r=Ut(),t=0,s=[],n=e||{};ld(n);try{let o=id(n.graphOptimizationLevel??"all"),i=ad(n.executionMode??"sequential"),a=typeof n.logId=="string"?ps(n.logId,s):0,l=n.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let u=n.logVerbosityLevel??0;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log verbosity level is not valid: ${u}`);let p=typeof n.optimizedModelFilePath=="string"?ps(n.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(o,!!n.enableCpuMemArena,!!n.enableMemPattern,i,!!n.enableProfiling,0,a,l,u,p),t===0&&jt("Can't create session options."),n.executionProviders&&await cd(t,n.executionProviders,s),n.enableGraphCapture!==void 0){if(typeof n.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);po(t,"enableGraphCapture",n.enableGraphCapture.toString(),s)}if(n.freeDimensionOverrides)for(let[c,d]of Object.entries(n.freeDimensionOverrides)){if(typeof c!="string")throw new Error(`free dimension override name must be a string: ${c}`);if(typeof d!="number"||!Number.isInteger(d)||d<0)throw new Error(`free dimension override value must be a non-negative integer: ${d}`);let _=ps(c,s);r._OrtAddFreeDimensionOverride(t,_,d)!==0&&jt(`Can't set a free dimension override: ${c} - ${d}.`)}return n.extra!==void 0&&ni(n.extra,"",new WeakSet,(c,d)=>{po(t,c,d,s)}),[t,s]}catch(o){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&jt("Can't release session options."),s.forEach(i=>r._free(i)),o}}}),Fn,As,en,La,oi,za,Ba,Ra,ft=Re(()=>{Fn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},As=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},en=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((n,o)=>n*o,1);return t>0?Math.ceil(s*t):void 0},La=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},oi=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},za=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Ba=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Ra=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),ja,dd=Re(()=>{ya(),ja=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n=r.body.getReader(),o;try{o=new ArrayBuffer(s)}catch(a){if(a instanceof RangeError){let l=Math.ceil(s/65536);o=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let i=0;for(;;){let{done:a,value:l}=await n.read();if(a)break;let u=l.byteLength;new Uint8Array(o,i,u).set(l),i+=u}return new Uint8Array(o,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),pd,hd,md,fd,Na,_d,kt,Fs=Re(()=>{ft(),pd=["V","I","W","E","F"],hd=(e,r)=>{console.log(`[${pd[e]},${new Date().toISOString()}]${r}`)},Na=(e,r)=>{md=e,fd=r},_d=(e,r)=>{let t=oi(e),s=oi(md);t>=s&&hd(t,typeof r=="function"?r():r)},kt=(...e)=>{fd&&_d(...e)}}),gd,On,ge,ii,wd,Md,bd,yt=Re(()=>{gd=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},On=class{static calcShape(e,r,t=!1){let s=e.length,n=r.length;if(s===0)return r;if(n===0)return e;let o=Math.max(e.length,r.length),i=new Array(o);if(t){if(s<2||n<2)return;let a=gd.calcMatMulShape([e[s-2],e[s-1]],[r[n-2],r[n-1]]);if(a===void 0)return;[i[o-2],i[o-1]]=a}for(let a=t?3:1;a<=o;a++){let l=s-a<0?1:e[s-a],u=n-a<0?1:r[n-a];if(l!==u&&l>1&&u>1)return;let p=Math.max(l,u);if(l&&u)i[o-a]=Math.max(l,u);else{if(p>1)return;i[o-a]=0}}return i}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let n=1;n<=t;n++)if(e[t-n]!==1&&e[t-n]!==r[s-n])return!1;return!0}},ge=class da{static size(r){return da.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let n=new Array(s),o=s-1;for(;o>=0;){if(r[o]%t===0){n[o]=r[o]/t;break}if(t%r[o]!==0)throw new Error("cannot convert shape");n[o]=1,t/=r[o],o--}for(o--;o>=0;o--)n[o]=r[o];return n}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return da.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return da.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let n=1;for(let o=t;o<s;o++){if(r[o]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=Number(r[o])}return n}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let n=t-3;n>=0;--n)s[n]=s[n+1]*r[n+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((n,o)=>n+t[o]+t[o+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,n)=>s===t[n])}},ii=class Zo{static adjustPoolAttributes(r,t,s,n,o,i){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let a=0;a<t.length-2;a++)a>=s.length?s.push(t[a+2]):s[a]=t[a+2];for(let a=0;a<s.length;a++)if(a<n.length){if(n[a]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let a=0;a<s.length;a++)if(a<o.length){if(o[a]<0)throw new Error("dilations should be greater than or equal to 1")}else o.push(1);for(let a=0;a<s.length*2;a++)if(a<i.length){if(i[a]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let a=0;a<s.length;a++){if(s[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[a]>=s[a]||i[a+s.length]>=s[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,n,o,i,a){if(a){if(o.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)Zo.adjustPadAndReturnShape(r[l+(i?1:2)],t[l],s[l],n[l],o,l,l+r.length-2,a)}}static computePoolOutputShape(r,t,s,n,o,i,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return Zo.computeShapeHelper(r,t,l,s,n,o,i,a),l}static computeConvOutputShape(r,t,s,n,o,i,a){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return Zo.computeShapeHelper(!1,r,l,s,n,o,i,a),l}static computeShapeHelper(r,t,s,n,o,i,a,l){if(r)for(let u=0;u<t.length-2;u++)s.push(1);else for(let u=0;u<t.length-2;u++)s.push(Zo.adjustPadAndReturnShape(t[u+2],n[u],o[u],i[u],a,u,u+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,n,o,i,a,l){let u=s*(n-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return o[i]=0,o[a]=0,Math.floor((r-u)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((r+t-1)/t-1)*t+n-r;return o[i]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),o[a]=p-o[i],Math.floor((r+p-n)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+o[i]+o[a]-u)/t+1)}},wd=class{static getShapeOfGemmResult(e,r,t,s,n){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let o,i,a;r?(o=e[1],i=e[0]):(o=e[0],i=e[1]);let l=-1;if(s?(a=t[0],l=1):(a=t[1],l=0),t[l]!==i)throw new Error("dimension mismatch");if(o<=0||a<=0||i<=0)throw new Error("invalid shape specified");if(n&&!On.isValidBroadcast(n,[o,a]))throw new Error("gemm: invalid bias shape for broadcast");return[o,a,i]}},Md=-34028234663852886e22,bd=34028234663852886e22}),Va,yd=Re(()=>{ft(),Va=(e,r)=>new(La(r))(e)}),Ua,Wa,vd,Ga,xd,Ka,Ha,qa,Td,Ed,Cv=Re(()=>{Fs(),Ua=(e,r=!0)=>{if(e.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=e.byteLength/8,s=new BigInt64Array(e.buffer,e.byteOffset,t),n=new Int32Array(t);for(let o=0;o<t;o++){let i=s[o];if(i>2147483647n||i<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${o}: ${i}`);n[o]=Number(i)}return r?new Uint8Array(n.buffer):n},Wa=(e,r=!0)=>{if(e.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=e.byteLength/4,s=new Int32Array(e.buffer,e.byteOffset,t),n=BigInt64Array.from(s,BigInt);return r?new Uint8Array(n.buffer):n},vd=1,Ga=()=>vd++,xd=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Ka=(e,r)=>{let t=xd.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,n)=>s*n)*t/8):0},Ha=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:t,tensor:s,dataType:n,shape:o,shouldConvertInt64toInt32:i=!1}=e;this.sessionId=r,this.mlContext=t,this.mlTensor=s,this.dataType=n,this.tensorShape=o,this.shouldConvertInt64toInt32=i}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Ka(this.dataType,this.tensorShape)}destroy(){kt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,r){if(e){let t=await this.mlContext.readTensor(this.mlTensor),s=Wa(new Uint8Array(t));if(r){(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(s);return}else return s.buffer}else return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,n)=>s===t[n])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},qa=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let n=r,o=this.tensorManager.getMLContext(e),i=n==="int64"&&!o.opSupportLimits().input.dataTypes.includes("int64");if(i&&(n="int32",kt("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(o,n,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==Ka(n,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let a=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,n,t,a,!0,!0,i),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let r=e;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=Ua(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength){this.wrapper.write(r);return}else kt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(e){if(this.activeUpload){let r=this.wrapper?.isInt64ToInt32Converted?Wa(this.activeUpload):this.activeUpload;if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(r):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(r);return}else return r.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32,e):this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32)}},Td=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=Ga();return this.tensorTrackersById.set(e,new qa(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,n){kt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${n}}`);let o=this.tensorTrackersById.get(r);if(!o)throw new Error("Tensor not found.");return o.ensureTensor(e,t,s,n)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){kt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r?.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let n=this.getMLContext(e),o=Ga(),i=new Ha({sessionId:e,context:n,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(o,new qa(this,i)),this.externalTensors.add(i),o}async getCachedTensor(e,r,t,s,n,o,i=!1){let a=this.getMLContext(e);for(let[u,p]of this.freeTensors.entries())if(p.canReuseTensor(a,r,t)){kt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let c=this.freeTensors.splice(u,1)[0];return c.sessionId=e,c}kt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let l=await a.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:n,readable:o});return new Ha({sessionId:e,context:a,tensor:l,dataType:r,shape:t,shouldConvertInt64toInt32:i})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},Ed=(...e)=>new Td(...e)}),ai,Pd,Cd,Sv=Re(()=>{ft(),Zs(),yd(),Cv(),Fs(),ai=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Pd=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((n,o)=>n===s[o]&&e[n]===r[n])},Cd=class{constructor(e){this.tensorManager=Ed(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,Na(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){kt("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){kt("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)kt("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>Pd(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(n=>n.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){kt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,n){let o=ai.get(t);if(!o)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,o,s,n)}async createTemporaryTensor(e,r,t){kt("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=ai.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let n=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,n,s,t,!1);let o=this.temporarySessionTensorIds.get(e);return o?o.push(n):this.temporarySessionTensorIds.set(e,[n]),n}uploadTensor(e,r){if(!Ut().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");kt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return Va(t,r)}}registerMLTensor(e,r,t,s){let n=ai.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let o=this.tensorManager.registerTensor(e,r,n,s);return kt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${n}, dimensions: ${s}} -> {tensorId: ${o}}`),o}registerMLConstant(e,r,t,s,n,o,i=!1){if(!o)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let l=o.get(a);if(!l)throw new Error(`File with name ${a} not found in preloaded files.`);if(r+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let u=l.slice(r,r+t).buffer,p;switch(n.dataType){case"float32":p=new Float32Array(u);break;case"float16":p=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(u):new Uint16Array(u);break;case"int32":p=new Int32Array(u);break;case"uint32":p=new Uint32Array(u);break;case"int64":i?(p=Ua(new Uint8Array(u),!1),n.dataType="int32"):p=new BigInt64Array(u);break;case"uint64":p=new BigUint64Array(u);break;case"int8":p=new Int8Array(u);break;case"int4":case"uint4":case"uint8":p=new Uint8Array(u);break;default:throw new Error(`Unsupported data type: ${n.dataType} in creating WebNN Constant from external data.`)}return kt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${n.dataType}, shape: ${n.shape}}} ${i?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),s.constant(n,p)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}isInt64Supported(e){return!!this.mlContextBySessionId.get(e)?.opSupportLimits().input.dataTypes.includes("int64")}flush(){}}}),Qa=Re(()=>{}),Xa,li,ci,Sd,$d,Ja,Ya,Id,kd,$v=Re(()=>{Fs(),Qa(),Xa=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),li=[],ci=e=>Math.ceil(Number(e)/16)*16,Sd=e=>{for(let r=0;r<li.length;r++){let t=li[r];if(e<=t)return t}return Math.ceil(e/16)*16},$d=1,Ja=()=>$d++,Ya=async(e,r,t,s)=>{let n=ci(t),o=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(r,0,o,0,n),e.flush(),await o.mapAsync(GPUMapMode.READ);let a=o.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{o.destroy()}},Id=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of Xa)li.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,n=r.byteLength,o=ci(n),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(Number(i.originalSize)!==n)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${n}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,n)),a.unmap();let u=this.backend.device.createCommandEncoder();u.copyBufferToBuffer(a,0,i.gpuData.buffer,0,o),this.backend.device.queue.submit([u.finish()]),a.destroy(),kt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let n=ci(t.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,n)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return kt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=Ja();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),kt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),kt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Sd(e),s,n=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,o=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(n||o){let a=(n?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?s=a.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let i={id:Ja(),type:0,buffer:s};return this.storageCache.set(i.id,{gpuData:i,originalSize:Number(e)}),kt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`),i}get(e){return this.storageCache.get(e)?.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return kt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Ya(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=Xa.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(kt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},kd=(...e)=>new Id(...e)}),Ad,zt,ar=Re(()=>{Ad=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},zt=e=>new Ad(e)}),Dn,ui,yr,Fr,lt,sr,Za,Ln,js,ot,ho,Ee,rt,Fd,el,Od,Dd,xt=Re(()=>{ft(),yt(),Dn=64,ui=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},yr=(e,r=1)=>{let t=ui(e,r);return typeof t=="string"?t:t[0]},Fr=(e,r=1)=>{let t=ui(e,r);return typeof t=="string"?t:t[1]},lt=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:ge.computeStrides(t)})}),r},sr=e=>e%4===0?4:e%2===0?2:1,Za=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,Ln=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,js=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,ot=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,ho=(e,r,t,s,n)=>{let o=typeof t=="number",i=o?t:t.length,a=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,u=ui(r,n),p=typeof u=="string"?u:u[1],c=typeof u=="string"?u:u[0],d={indices:l,value:p,storage:c,tensor:r},_=N=>typeof N=="string"?N:`${N}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},E=o?"uniforms.":"",k=`${E}${e}_shape`,b=`${E}${e}_strides`,g="";for(let N=0;N<i-1;N++)g+=`
    let dim${N} = current / ${ot(b,N,i)};
    let rest${N} = current % ${ot(b,N,i)};
    indices[${N}] = dim${N};
    current = rest${N};
    `;g+=`indices[${i-1}] = current;`;let C=i<2?"":`
  fn o2i_${e}(offset: u32) -> ${d.indices} {
    var indices: ${d.indices};
    var current = offset;
    ${g}
    return indices;
  }`,x=N=>(f.offsetToIndices=!0,i<2?N:`o2i_${e}(${N})`),v=[];if(i>=2)for(let N=i-1;N>=0;N--)v.push(`${ot(b,N,i)} * (indices[${N}])`);let w=i<2?"":`
  fn i2o_${e}(indices: ${d.indices}) -> u32 {
    return ${v.join("+")};
  }`,y=N=>(f.indicesToOffset=!0,i<2?N:`i2o_${e}(${N})`),S=(...N)=>i===0?"0u":`${d.indices}(${N.map(_).join(",")})`,O=(N,A)=>i<2?`${N}`:`${ot(N,A,i)}`,R=(N,A,K)=>i<2?`${N}=${K};`:`${ot(N,A,i)}=${K};`,H={},Q=(N,A)=>{f.broadcastedIndicesToOffset=!0;let K=`${A.name}broadcastedIndicesTo${e}Offset`;if(K in H)return`${K}(${N})`;let j=[];for(let ae=i-1;ae>=0;ae--){let Ae=A.indicesGet("outputIndices",ae+A.rank-i);j.push(`${O(b,ae)} * (${Ae} % ${O(k,ae)})`)}return H[K]=`fn ${K}(outputIndices: ${A.type.indices}) -> u32 {
             return ${j.length>0?j.join("+"):"0u"};
           }`,`${K}(${N})`},L=(N,A)=>(()=>{if(d.storage===d.value)return`${e}[${N}]=${A};`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`${e}[${N}]=vec2<u32>(u32(${A}), select(0u, 0xFFFFFFFFu, ${A} < 0));`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`${e}[${N}]=vec2<u32>(u32(${A}), 0u);`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`${e}[${N}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${A}));`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),Y=N=>(()=>{if(d.storage===d.value)return`${e}[${N}]`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`i32(${e}[${N}].x)`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`u32(${e}[${N}].x)`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${N}] & 0xFFu), bool(${e}[${N}] & 0xFF00u), bool(${e}[${N}] & 0xFF0000u), bool(${e}[${N}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),q=i<2?"":`
  fn get_${e}ByIndices(indices: ${d.indices}) -> ${p} {
    return ${Y(`i2o_${e}(indices)`)};
  }`,X=i<2?"":(()=>{let N=a.map(K=>`d${K}: u32`).join(", "),A=a.map(K=>`d${K}`).join(", ");return`
  fn get_${e}(${N}) -> ${p} {
    return get_${e}ByIndices(${S(A)});
  }`})(),re=(...N)=>{if(N.length!==i)throw new Error(`indices length must be ${i}`);let A=N.map(_).join(",");return i===0?Y("0u"):i===1?Y(A[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${A})`)},te=N=>i<2?Y(N):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${N})`),he=i<2?"":`
  fn set_${e}ByIndices(indices: ${d.indices}, value: ${p}) {
    ${L(`i2o_${e}(indices)`,"value")}
  }`,ue=i<2?"":(()=>{let N=a.map(K=>`d${K}: u32`).join(", "),A=a.map(K=>`d${K}`).join(", ");return`
  fn set_${e}(${N}, value: ${p}) {
    set_${e}ByIndices(${S(A)}, value);
  }`})();return{impl:()=>{let N=[],A=!1;return f.offsetToIndices&&(N.push(C),A=!0),f.indicesToOffset&&(N.push(w),A=!0),f.broadcastedIndicesToOffset&&(Object.values(H).forEach(K=>N.push(K)),A=!0),f.set&&(N.push(ue),A=!0),f.setByIndices&&(N.push(he),A=!0),f.get&&(N.push(X),A=!0),f.getByIndices&&(N.push(q),A=!0),!o&&A&&N.unshift(`const ${k} = ${d.indices}(${t.join(",")});`,`const ${b} = ${d.indices}(${ge.computeStrides(t).join(",")});`),N.join(`
`)},type:d,offsetToIndices:x,indicesToOffset:y,broadcastedIndicesToOffset:Q,indices:S,indicesGet:O,indicesSet:R,set:(...N)=>{if(N.length!==i+1)throw new Error(`indices length must be ${i}`);let A=N[i];if(typeof A!="string")throw new Error("value must be string");let K=N.slice(0,i).map(_).join(",");return i===0?L("0u",A):i===1?L(K[0],A):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${K}, ${A})`)},setByOffset:L,setByIndices:(N,A)=>i<2?L(N,A):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${N}, ${A});`),get:re,getByOffset:Y,getByIndices:te,usage:s,name:e,strides:b,shape:k,rank:i}},Ee=(e,r,t,s=1)=>ho(e,r,t,"input",s),rt=(e,r,t,s=1)=>ho(e,r,t,"output",s),Fd=(e,r,t)=>ho(e,r,t,"atomicOutput",1),el=(e,r,t,s=1)=>ho(e,r,t,"internal",s),Od=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Dn){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let n=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,o=n?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=n?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${o}) {
    ${i}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let n=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${n}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},Dd=(e,r)=>new Od(e,r)}),Ld,tl,zd,Bd,Rd,jd,Kr,Nd,Vd,Ns=Re(()=>{ft(),yt(),ar(),xt(),Ld=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},tl=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),zd=(e,r)=>ge.sortBasedOnPerm(e,tl(e.length,r)),Bd=(e,r,t,s)=>{let n=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let o=0;o<r;++o)n+=`a[${e[o]}]=i[${o}];`;return n+="return a;}"},Rd=(e,r)=>{let t=[],s=[];for(let n=0;n<e.length;++n)e[n]!==1&&t.push(e[n]),e[r[n]]!==1&&s.push(r[n]);return{newShape:t,newPerm:s}},jd=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},Kr=(e,r)=>{let t=e.dataType,s=e.dims.length,n=tl(s,r),o=zd(e.dims,n),i=e.dims,a=o,l=s<2||jd(n,e.dims),u;if(l)return u=f=>{let E=Ee("input",t,i,4),k=rt("output",t,a,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(E,k)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=ge.size(o);return{outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:u};let{newShape:p,newPerm:c}=Rd(e.dims,n),d=ge.areEqual(c,[2,3,1]),_=ge.areEqual(c,[3,1,2]);if(p.length===2||d||_){i=d?[p[0],p[1]*p[2]]:_?[p[0]*p[1],p[2]]:p,a=[i[1],i[0]];let f=16;return u=E=>{let k=Ee("a",t,i.length),b=rt("output",t,a.length);return`
  ${E.registerUniform("output_size","u32").declareVariables(k,b)}
  var<workgroup> tile : array<array<${b.type.value}, ${f+1}>, ${f}>;
  ${E.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${k.getByIndices(`${k.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${b.setByIndices(`${b.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let E=ge.size(o);return{outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/f),y:Math.ceil(a[0]/f)},programUniforms:[{type:12,data:E},...lt(i,a)]}},getShaderSource:u}}return u=f=>{let E=Ee("a",t,i.length),k=rt("output",t,a.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(E,k)}

  ${Bd(n,s,E,k)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${k.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${k.setByOffset("global_idx",E.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let f=ge.size(o);return{outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...lt(i,a)]}},getShaderSource:u}},Nd=(e,r)=>{Ld(e.inputs,r.perm),e.compute(Kr(e.inputs[0],r.perm))},Vd=e=>zt({perm:e.perm})}),Ud,Wd,Gd,Kd,Hd,qd,Qd,Xd,Jd,Yd,hs,Zd,ep,tp,rp,sp,np,op,ip,ap,lp,Iv=Re(()=>{ft(),yt(),xt(),sl(),Ns(),Ud={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Wd={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Gd={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Kd={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Hd=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},qd=(e,r)=>{let t=[],s=e.length;for(let o=0;o<s;o++)r.indexOf(o)===-1&&t.push(e[o]);let n=r.map(o=>e[o]);return[t,n]},Qd=(e,r)=>{let t=e.length+r.length,s=[],n=0;for(let o=0;o<t;o++)r.indexOf(o)===-1?s.push(e[n++]):s.push(1);return s},Xd=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},Jd=(e,r)=>{let t=[];if(!Xd(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},Yd=(e,r,t,s,n,o,i)=>{let a=t[0].dims,l=ge.size(o),u=ge.size(i),p=Ee("_A",t[0].dataType,a),c=rt("output",n,o),d=64;l===1&&(d=256);let _=`
          var<workgroup> aBestValues : array<f32, ${d}>;
       `,f=E=>`
        ${E.registerUniform("reduceSize","u32").declareVariables(p,c)}
        ${_}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${E.mainStart(d)}

          let outputIndex = global_idx / ${d};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Gd[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${d}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${Ud[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${d}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Wd[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${c.setByOffset("outputIndex",`${s==="mean"?`${c.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${c.type.storage}(${Kd[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${d}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},hs=(e,r,t,s)=>{let n=e.inputs.length===1?t:rl(e.inputs,t),o=n.axes;o.length===0&&!n.noopWithEmptyAxes&&(o=e.inputs[0].dims.map((_,f)=>f));let i=ge.normalizeAxes(o,e.inputs[0].dims.length),a=i,l=e.inputs[0],u=Jd(a,e.inputs[0].dims.length);u.length>0&&(l=e.compute(Kr(e.inputs[0],u),{inputs:[0],outputs:[-1]})[0],a=Hd(a.length,l.dims.length));let[p,c]=qd(l.dims,a),d=p;n.keepDims&&(d=Qd(p,i)),e.compute(Yd(r,n.cacheKey,[l],s,e.inputs[0].dataType,d,c),{inputs:[l]})},Zd=(e,r)=>{hs(e,"ReduceMeanShared",r,"mean")},ep=(e,r)=>{hs(e,"ReduceL1Shared",r,"l1")},tp=(e,r)=>{hs(e,"ReduceL2Shared",r,"l2")},rp=(e,r)=>{hs(e,"ReduceLogSumExpShared",r,"logSumExp")},sp=(e,r)=>{hs(e,"ReduceMaxShared",r,"max")},np=(e,r)=>{hs(e,"ReduceMinShared",r,"min")},op=(e,r)=>{hs(e,"ReduceProdShared",r,"prod")},ip=(e,r)=>{hs(e,"ReduceSumShared",r,"sum")},ap=(e,r)=>{hs(e,"ReduceSumSquareShared",r,"sumSquare")},lp=(e,r)=>{hs(e,"ReduceLogSumShared",r,"logSum")}}),ms,cp,di,rl,fs,up,dp,pp,hp,mp,fp,_p,gp,wp,Mp,_s,bp,yp,vp,xp,Tp,Ep,Pp,Cp,Sp,$p,sl=Re(()=>{ft(),yt(),ar(),xt(),Iv(),ms=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},cp=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],di=(e,r,t,s,n,o,i=!1,a=!1)=>{let l=[],u=t[0].dims,p=u.length,c=ge.normalizeAxes(n,p),d=!a&&c.length===0;u.forEach((E,k)=>{d||c.indexOf(k)>=0?i&&l.push(1):l.push(E)});let _=l.length,f=ge.size(l);return{name:e,shaderCache:r,getShaderSource:E=>{let k=[],b=Ee("_A",t[0].dataType,p),g=rt("output",o,_),C=s(b,g,c),x=C[2];for(let v=0,w=0;v<p;v++)d||c.indexOf(v)>=0?(i&&w++,x=`for(var j${v}: u32 = 0; j${v} < ${u[v]}; j${v}++) {
                  ${C[2].includes("last_index")?`let last_index = j${v};`:""}
                  ${b.indicesSet("input_indices",v,`j${v}`)}
                  ${x}
                }`):(k.push(`${b.indicesSet("input_indices",v,g.indicesGet("output_indices",w))};`),w++);return`

        ${E.registerUniform("output_size","u32").declareVariables(b,g)}

        ${E.mainStart()}
          ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${b.type.indices};
          let output_indices = ${g.offsetToIndices("global_idx")};

          ${k.join(`
`)}
          ${C[0]}       // init ops for reduce max/min
          ${C[1]}
          ${x}
          ${C[3]}
          ${C.length===4?g.setByOffset("global_idx","value"):C.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:o}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...lt(u,l)]})}},rl=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),zt({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},fs=(e,r,t,s)=>{let n=e.inputs,o=n.length===1?t:rl(n,t);e.compute(di(r,{hint:o.cacheKey,inputDependencies:["rank"]},[n[0]],o.noopWithEmptyAxes&&o.axes.length===0?cp:s,o.axes,n[0].dataType,o.keepDims,o.noopWithEmptyAxes),{inputs:[0]})},up=(e,r)=>{ms(e.inputs),fs(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},dp=(e,r)=>{ms(e.inputs),fs(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},pp=(e,r)=>{ms(e.inputs),fs(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},hp=(e,r)=>{ms(e.inputs),fs(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},mp=(e,r)=>{ms(e.inputs),fs(e,"ReduceMax",r,(t,s,n)=>{let o=[];for(let i=0;i<t.rank;i++)(n.indexOf(i)>=0||n.length===0)&&o.push(t.indicesSet("input_indices",i,0));return[`${o.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},fp=(e,r)=>{ms(e.inputs),fs(e,"ReduceMean",r,(t,s,n)=>{let o=1;for(let i=0;i<t.rank;i++)(n.indexOf(i)>=0||n.length===0)&&(o*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${o});`]})},_p=(e,r)=>{ms(e.inputs),fs(e,"ReduceMin",r,(t,s,n)=>{let o=[];for(let i=0;i<t.rank;i++)(n.indexOf(i)>=0||n.length===0)&&o.push(`input_indices[${i}] = 0;`);return[`${o.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},gp=(e,r)=>{ms(e.inputs),fs(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},wp=(e,r)=>{ms(e.inputs),fs(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},Mp=(e,r)=>{ms(e.inputs),fs(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},_s=(e,r,t)=>{if(r.length===0)return t;let s=1,n=1;for(let o=0;o<r.length;o++)r.indexOf(o)===-1?s*=e[o]:n*=e[o];return n<32&&s>1024},bp=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?fp(e,r):Zd(e,r)},yp=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?dp(e,r):ep(e,r)},vp=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?pp(e,r):tp(e,r)},xp=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?hp(e,r):rp(e,r)},Tp=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?mp(e,r):sp(e,r)},Ep=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?_p(e,r):np(e,r)},Pp=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?gp(e,r):op(e,r)},Cp=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?wp(e,r):ip(e,r)},Sp=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Mp(e,r):ap(e,r)},$p=(e,r)=>{_s(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?up(e,r):lp(e,r)}}),nl,Ip,kp,ol,kv=Re(()=>{ft(),ar(),sl(),nl=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ip=(e,r)=>{nl(e.inputs);let t=(s,n,o)=>{let i=[];for(let a=0;a<s.rank;a++)(o.indexOf(a)>=0||o.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(di("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},kp=(e,r)=>{nl(e.inputs);let t=(s,n,o)=>{let i=[];for(let a=0;a<s.rank;a++)(o.indexOf(a)>=0||o.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(di("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},ol=e=>zt(e)}),Ap,pi,Fp,Op,Dp,mo,Lp,zp,il=Re(()=>{ft(),yt(),Qa(),xt(),Ap=(e,r)=>{let t=e[0],s=e[1],n=e[2],o=e[3],i=e[4],a=e[5];if(i&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],u=t.dims[1],p=t.dims[2];if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let c=n.dims[0]/3,d=c,_=d;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let C of r.qkvHiddenSizes)if(C%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");c=r.qkvHiddenSizes[0],d=r.qkvHiddenSizes[1],_=r.qkvHiddenSizes[2]}let f=u;if(c!==d)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==c+d+_)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let E=0;if(i){if(d!==_)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==d/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(E=i.dims[3])}let k=f+E,b=-1,g=0;if(o)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==r.numHeads||a.dims[2]!==u||a.dims[3]!==k)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:u,pastSequenceLength:E,kvSequenceLength:f,totalSequenceLength:k,maxSequenceLength:b,inputHiddenSize:p,hiddenSize:c,vHiddenSize:_,headSize:Math.floor(c/r.numHeads),vHeadSize:Math.floor(_/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:g,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},pi=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Fp=(e,r,t,s,n,o,i,a)=>{let l=sr(i?1:o),u=64,p=o/l;p<u&&(u=32);let c=Math.ceil(o/l/u),d=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:n},{type:12,data:p},{type:12,data:c}],_=yr(e.dataType,l),f=Fr(1,l),E=["type"];i&&E.push("type"),a&&E.push("type");let k=b=>{let g=rt("x",e.dataType,e.dims,l),C=[g],x=i?Ee("seq_lens",i.dataType,i.dims):void 0;x&&C.push(x);let v=a?Ee("total_sequence_length_input",a.dataType,a.dims):void 0;v&&C.push(v);let w=Fr(e.dataType),y=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${u}>;
  var<workgroup> thread_sum: array<f32, ${u}>;
  ${b.registerUniforms(y).declareVariables(...C)}
  ${b.mainStart([u,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${pi(x,v,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${u}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${i?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${u}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${u}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${g.type.value}(${w}(1.0) / ${w}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${g.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${i?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${g.type.value}(${w}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${_};${l}`,inputDependencies:E},getShaderSource:k,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:n,z:r*t},programUniforms:d})}},Op=(e,r,t,s,n,o,i,a,l)=>{let u=i+o.kvSequenceLength,p=[o.batchSize,o.numHeads,o.sequenceLength,u],c=e>1&&s,d=o.kvNumHeads?o.kvNumHeads:o.numHeads,_=c?[o.batchSize,d,u,o.headSize]:void 0,f=o.nReps?o.nReps:1,E=o.scale===0?1/Math.sqrt(o.headSize):o.scale,k=sr(o.headSize),b=o.headSize/k,g=12,C={x:Math.ceil(u/g),y:Math.ceil(o.sequenceLength/g),z:o.batchSize*o.numHeads},x=[{type:12,data:o.sequenceLength},{type:12,data:b},{type:12,data:u},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:1,data:E},{type:12,data:i},{type:12,data:o.kvSequenceLength},{type:12,data:f}],v=c&&s&&ge.size(s.dims)>0,w=["type","type"];v&&w.push("type"),n&&w.push("type"),a&&w.push("type"),l&&w.push("type");let y=[{dims:p,dataType:r.dataType,gpuDataType:0}];c&&y.push({dims:_,dataType:r.dataType,gpuDataType:0});let S=O=>{let R=Ee("q",r.dataType,r.dims,k),H=Ee("key",t.dataType,t.dims,k),Q=[R,H];if(v){let he=Ee("past_key",s.dataType,s.dims,k);Q.push(he)}n&&Q.push(Ee("attention_bias",n.dataType,n.dims));let L=a?Ee("seq_lens",a.dataType,a.dims):void 0;L&&Q.push(L);let Y=l?Ee("total_sequence_length_input",l.dataType,l.dims):void 0;Y&&Q.push(Y);let q=rt("output",r.dataType,p),X=[q];c&&X.push(rt("present_key",r.dataType,_,k));let re=Fr(1,k),te=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${g}u;

  var<workgroup> tileQ: array<${R.type.storage}, ${g*g}>;
  var<workgroup> tileK: array<${R.type.storage}, ${g*g}>;
  ${O.registerUniforms(te).declareVariables(...Q,...X)}
  ${O.mainStart([g,g,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${pi(L,Y,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${v&&c?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${c?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${re}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${v&&c?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${c?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${re}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(k){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${k}`)}})()};
        output[outputIdx] = ${q.type.value} (sum * uniforms.alpha) + ${n?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${k};${n!==void 0};${s!==void 0};${e}`,inputDependencies:w},getRunData:()=>({outputs:y,dispatchGroup:C,programUniforms:x}),getShaderSource:S}},Dp=(e,r,t,s,n,o,i=void 0,a=void 0)=>{let l=o+n.kvSequenceLength,u=n.nReps?n.nReps:1,p=n.vHiddenSize*u,c=e>1&&s,d=n.kvNumHeads?n.kvNumHeads:n.numHeads,_=c?[n.batchSize,d,l,n.headSize]:void 0,f=[n.batchSize,n.sequenceLength,p],E=12,k={x:Math.ceil(n.vHeadSize/E),y:Math.ceil(n.sequenceLength/E),z:n.batchSize*n.numHeads},b=[{type:12,data:n.sequenceLength},{type:12,data:l},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:12,data:p},{type:12,data:o},{type:12,data:n.kvSequenceLength},{type:12,data:u}],g=c&&s&&ge.size(s.dims)>0,C=["type","type"];g&&C.push("type"),i&&C.push("type"),a&&C.push("type");let x=[{dims:f,dataType:r.dataType,gpuDataType:0}];c&&x.push({dims:_,dataType:r.dataType,gpuDataType:0});let v=w=>{let y=Ee("probs",r.dataType,r.dims),S=Ee("v",t.dataType,t.dims),O=[y,S];g&&O.push(Ee("past_value",s.dataType,s.dims));let R=i?Ee("seq_lens",i.dataType,i.dims):void 0;i&&O.push(R);let H=a?Ee("total_sequence_length_input",a.dataType,a.dims):void 0;a&&O.push(H);let Q=[rt("output",r.dataType,f)];c&&Q.push(rt("present_value",r.dataType,_));let L=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${E}u;
  var<workgroup> tileQ: array<${y.type.value}, ${E*E}>;
  var<workgroup> tileV: array<${y.type.value}, ${E*E}>;
  ${w.registerUniforms(L).declareVariables(...O,...Q)}
  ${w.mainStart([E,E,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${u===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${u===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${pi(R,H,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${g&&c?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${c?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${y.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${g&&c?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${c?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:C},getRunData:()=>({outputs:x,dispatchGroup:k,programUniforms:b}),getShaderSource:v}},mo=(e,r,t,s,n,o,i,a,l,u,p=void 0,c=void 0)=>{let d=Math.min(e.outputCount,1+(i?1:0)+(a?1:0)),_=d>1?u.pastSequenceLength:0,f=_+u.kvSequenceLength,E=l&&ge.size(l.dims)>0?l:void 0,k=[r,t];d>1&&i&&ge.size(i.dims)>0&&k.push(i),E&&k.push(E),p&&k.push(p),c&&k.push(c);let b=e.compute(Op(d,r,t,i,E,u,_,p,c),{inputs:k,outputs:d>1?[-1,1]:[-1]})[0];e.compute(Fp(b,u.batchSize,u.numHeads,_,u.sequenceLength,f,p,c),{inputs:p&&c?[b,p,c]:[b],outputs:[]});let g=[b,s];d>1&&a&&ge.size(a.dims)>0&&g.push(a),p&&g.push(p),c&&g.push(c),e.compute(Dp(d,b,s,a,u,_,p,c),{inputs:g,outputs:d>1?[0,2]:[0]})},Lp=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,n=r.inputHiddenSize,o=r.headSize,i=12,a={x:Math.ceil(r.headSize/i),y:Math.ceil(r.sequenceLength/i),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],u=[{type:12,data:s},{type:12,data:n},{type:12,data:o},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],p=c=>{let d=rt("output_q",l[0].dataType,t),_=rt("output_k",l[0].dataType,t),f=rt("output_v",l[0].dataType,t),E=Ee("input",l[0].dataType,l[0].dims),k=Ee("weight",l[1].dataType,l[1].dims),b=Ee("bias",l[2].dataType,l[2].dims),g=E.type.storage,C=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${g}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${g}, ${i*i}>;
  var<workgroup> tileWeightK: array<${g}, ${i*i}>;
  var<workgroup> tileWeightV: array<${g}, ${i*i}>;
  ${c.registerUniforms(C).declareVariables(E,k,b,d,_,f)}
  ${c.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${g}(0);
    var valueK = ${g}(0);
    var valueV = ${g}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:u}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},zp=(e,r)=>{let t=Ap(e.inputs,r),[s,n,o]=Lp(e,t);return mo(e,s,n,o,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),Bp,Rp,jp,Np,Av=Re(()=>{ds(),ft(),yt(),ar(),xt(),Bp=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,n,o)=>{let i=n.length;if(i!==s.length)throw new Error(`${o}: num dimensions != ${i}`);n.forEach((a,l)=>{if(a!==s[l])throw new Error(`${o}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},Rp=(e,r)=>{let{epsilon:t,spatial:s,format:n}=r,o=e[0].dims,i=s?sr(o[o.length-1]):1,a=n==="NHWC"&&o.length>1?i:1,l=ge.size(o)/i,u=s,p=u?o.length:o,c=Ee("x",e[0].dataType,e[0].dims,i),d=Ee("scale",e[1].dataType,e[1].dims,a),_=Ee("bias",e[2].dataType,e[2].dims,a),f=Ee("inputMean",e[3].dataType,e[3].dims,a),E=Ee("inputVar",e[4].dataType,e[4].dims,a),k=rt("y",e[0].dataType,p,i),b=()=>{let C="";if(s)C=`let cOffset = ${o.length===1?"0u":n==="NHWC"?`outputIndices[${o.length-1}] / ${i}`:"outputIndices[1]"};`;else if(n==="NCHW")C=`
            ${k.indicesSet("outputIndices","0","0")}
            let cOffset = ${k.indicesToOffset("outputIndices")};`;else{C=`var cIndices = ${d.type.indices}(0);
                       cIndices[0] = outputIndices[${o.length-1}];`;for(let x=1;x<d.rank;x++)C+=`cIndices[${x}] = outputIndices[${x}];`;C+=`let cOffset = ${d.indicesToOffset("cIndices")};`}return C},g=C=>`
  const epsilon = ${t};
  ${C.registerUniform("outputSize","u32").declareVariables(c,d,_,f,E,k)}
  ${C.mainStart()}
  ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${k.offsetToIndices(`global_idx * ${i}`)};
    ${b()}
    let scale = ${d.getByOffset("cOffset")};
    let bias = ${_.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${E.getByOffset("cOffset")};
    let x = ${c.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${k.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${i}`,inputDependencies:u?["rank","type","type","type","type"]:void 0},getShaderSource:g,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...lt(o)]:[{type:12,data:l}]})}},jp=e=>zt(e),Np=(e,r)=>{let{inputs:t,outputCount:s}=e,n=jp({...r,outputCount:s});if(Kt.webgpu.validateInputContent&&Bp(t,n),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Rp(t,n))}}),Vp,Up,Wp,Fv=Re(()=>{yt(),xt(),Vp=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Up=e=>{let r=e[0].dims,t=e[0].dims[2],s=ge.size(r)/4,n=e[0].dataType,o=Ee("input",n,r,4),i=Ee("bias",n,[t],4),a=Ee("residual",n,r,4),l=rt("output",n,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:u=>`
  const channels = ${t}u / 4;
  ${u.declareVariables(o,i,a,l)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${o.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},Wp=e=>{Vp(e.inputs),e.compute(Up(e.inputs))}}),Gp,Dt,Kp,Hp,qp,Qp,Xp,Jp,Yp,Zp,eh,th,rh,sh,nh,oh,fo,ih,hi,ah,lh,ch,uh,dh,ph,hh,mh,fh,_h,gh,wh,Mh,bh,yh,vh,al,xh,ll,cl,Th,Eh,Ph,Ch,Sh,$h,ul=Re(()=>{ft(),yt(),ar(),xt(),Gp=(e,r,t,s,n,o,i)=>{let a=Math.ceil(r/4),l="";typeof n=="string"?l=`${n}(a)`:l=n("a");let u=Ee("inputData",t,[a],4),p=rt("outputData",s,[a],4),c=[{name:"vec_size",type:"u32"}];return i&&c.push(...i),`
      ${e.registerUniforms(c).declareVariables(u,p)}

  ${o??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},Dt=(e,r,t,s,n,o=e.dataType,i,a)=>{let l=[{type:12,data:Math.ceil(ge.size(e.dims)/4)}];return i&&l.push(...i),{name:r,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:u=>Gp(u,ge.size(e.dims),e.dataType,o,t,s,a),getRunData:u=>({outputs:[{dims:e.dims,dataType:o}],dispatchGroup:{x:Math.ceil(ge.size(u[0].dims)/64/4)},programUniforms:l})}},Kp=e=>{e.compute(Dt(e.inputs[0],"Abs","abs"))},Hp=e=>{e.compute(Dt(e.inputs[0],"Acos","acos"))},qp=e=>{e.compute(Dt(e.inputs[0],"Acosh","acosh"))},Qp=e=>{e.compute(Dt(e.inputs[0],"Asin","asin"))},Xp=e=>{e.compute(Dt(e.inputs[0],"Asinh","asinh"))},Jp=e=>{e.compute(Dt(e.inputs[0],"Atan","atan"))},Yp=e=>{e.compute(Dt(e.inputs[0],"Atanh","atanh"))},Zp=e=>zt(e),eh=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(Dt(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},th=e=>{let r,t,s=e.length>=2&&e[1].data!==0,n=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=n?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=n?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return zt({min:r,max:t})},rh=(e,r)=>{let t=r||th(e.inputs),s=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"Clip",n=>`clamp(${n}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},sh=e=>{e.compute(Dt(e.inputs[0],"Ceil","ceil"))},nh=e=>{e.compute(Dt(e.inputs[0],"Cos","cos"))},oh=e=>{e.compute(Dt(e.inputs[0],"Cosh","cosh"))},fo=e=>zt(e),ih=(e,r)=>{let t=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},hi=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ah=e=>{let r=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,hi(r)))},lh=e=>{e.compute(Dt(e.inputs[0],"Exp","exp"))},ch=e=>{e.compute(Dt(e.inputs[0],"Floor","floor"))},uh=e=>{let r=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,hi(r)))},dh=(e,r)=>{let t=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},ph=e=>{e.compute(Dt(e.inputs[0],"Not",r=>`!${r}`))},hh=e=>{e.compute(Dt(e.inputs[0],"Neg",r=>`-${r}`))},mh=e=>{e.compute(Dt(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},fh=e=>{let r=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},_h=e=>{e.compute(Dt(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},gh=e=>zt(e),wh=(e,r)=>{let t=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},Mh=e=>{e.compute(Dt(e.inputs[0],"Sin","sin"))},bh=e=>{e.compute(Dt(e.inputs[0],"Sinh","sinh"))},yh=e=>{e.compute(Dt(e.inputs[0],"Sqrt","sqrt"))},vh=e=>{e.compute(Dt(e.inputs[0],"Tan","tan"))},al=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,xh=e=>{e.compute(Dt(e.inputs[0],"Tanh",al))},ll=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${al("v")};
}
`,cl=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Th=e=>{let r=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"FastGelu",cl,ll(r),void 0,e.inputs[0].dataType))},Eh=(e,r)=>{let t=Fr(e.inputs[0].dataType);return e.compute(Dt(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},Ph=e=>{e.compute(Dt(e.inputs[0],"Log","log"))},Ch=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Sh=e=>`quick_gelu_impl(${e})`,$h=(e,r)=>{let t=Fr(e.inputs[0].dataType);e.compute(Dt(e.inputs[0],"QuickGelu",Sh,Ch(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),Ih,kh,Ah,Ov=Re(()=>{yt(),xt(),ul(),Ih=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},kh=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Ee("input",e[0].dataType,e[0].dims,4),s=Ee("bias",e[0].dataType,[e[0].dims[2]],4),n=rt("output",e[0].dataType,r,4),o=ge.size(r)/4,i=yr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,s,n)}

  ${hi(i)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Ah=e=>{Ih(e.inputs),e.compute(kh(e.inputs))}}),Fh,Oh,gs,Dh,Lh,zh,Bh,Rh,jh,Nh,Vh,Uh,Wh,Dv=Re(()=>{ft(),yt(),xt(),Fh=(e,r,t,s,n,o,i,a,l,u,p,c)=>{let d,_;typeof a=="string"?d=_=(g,C)=>`${a}((${g}),(${C}))`:typeof a=="function"?d=_=a:(d=a.scalar,_=a.vector);let f=rt("outputData",p,s.length,4),E=Ee("aData",l,r.length,4),k=Ee("bData",u,t.length,4),b;if(n)if(o){let g=ge.size(r)===1,C=ge.size(t)===1,x=r.length>0&&r[r.length-1]%4===0,v=t.length>0&&t[t.length-1]%4===0;g||C?b=f.setByOffset("global_idx",_(g?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"),C?`${k.type.value}(${k.getByOffset("0")}.x)`:k.getByOffset("global_idx"))):b=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${E.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${k.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",_(i||x?E.getByOffset("offsetA / 4u"):`${E.type.value}(${E.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||v?k.getByOffset("offsetB / 4u"):`${k.type.value}(${k.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else b=f.setByOffset("global_idx",_(E.getByOffset("global_idx"),k.getByOffset("global_idx")));else{if(!o)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let g=(C,x,v="")=>{let w=`aData[indexA${x}][componentA${x}]`,y=`bData[indexB${x}][componentB${x}]`;return`
            let outputIndices${x} = ${f.offsetToIndices(`global_idx * 4u + ${x}u`)};
            let offsetA${x} = ${E.broadcastedIndicesToOffset(`outputIndices${x}`,f)};
            let offsetB${x} = ${k.broadcastedIndicesToOffset(`outputIndices${x}`,f)};
            let indexA${x} = offsetA${x} / 4u;
            let indexB${x} = offsetB${x} / 4u;
            let componentA${x} = offsetA${x} % 4u;
            let componentB${x} = offsetB${x} % 4u;
            ${C}[${x}] = ${v}(${d(w,y)});
          `};p===9?b=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:b=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(E,k,f)}

        ${c??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${b}
      }`},Oh=(e,r,t,s,n,o,i=t.dataType)=>{let a=t.dims.map(E=>Number(E)??1),l=s.dims.map(E=>Number(E)??1),u=!ge.areEqual(a,l),p=a,c=ge.size(a),d=!1,_=!1,f=[u];if(u){let E=On.calcShape(a,l,!1);if(!E)throw new Error("Can't perform binary op on the given tensors");p=E.slice(),c=ge.size(p);let k=ge.size(a)===1,b=ge.size(l)===1,g=a.length>0&&a[a.length-1]%4===0,C=l.length>0&&l[l.length-1]%4===0;f.push(k),f.push(b),f.push(g),f.push(C);let x=1;for(let v=1;v<p.length;v++){let w=a[a.length-v],y=l[l.length-v];if(w===y)x*=w;else break}x%4===0?(_=!0,d=!0):(k||b||g||C)&&(d=!0)}else d=!0;return f.push(d),{name:e,shaderCache:{hint:r+f.map(E=>E.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:E=>Fh(E,a,l,p,d,u,_,n,t.dataType,s.dataType,i,o),getRunData:()=>({outputs:[{dims:p,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:Math.ceil(ge.size(p)/4)},...lt(a,l,p)]})}},gs=(e,r,t,s,n,o)=>{e.compute(Oh(r,n??"",e.inputs[0],e.inputs[1],t,s,o))},Dh=e=>{gs(e,"Add",(r,t)=>`${r}+${t}`)},Lh=e=>{gs(e,"Div",(r,t)=>`${r}/${t}`)},zh=e=>{gs(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},Bh=e=>{gs(e,"Mul",(r,t)=>`${r}*${t}`)},Rh=e=>{let r=Ee("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;gs(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},jh=e=>{gs(e,"Sub",(r,t)=>`${r}-${t}`)},Nh=e=>{gs(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},Vh=e=>{gs(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},Uh=e=>{gs(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},Wh=e=>{gs(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),Gh,Kh,Hh,qh,Qh,Xh,Lv=Re(()=>{ft(),yt(),ar(),xt(),Gh=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],n=s.dataType,o=s.dims.length;e.forEach((i,a)=>{if(a!==t){if(i.dataType!==n)throw new Error("input tensors should be one type");if(i.dims.length!==o)throw new Error("input tensors should have the same shape");i.dims.forEach((l,u)=>{if(u!==r&&l!==s.dims[u])throw new Error("non concat dimensions must match")})}})},Kh=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Hh=(e,r)=>{let t=e.length,s=[];for(let n=0;n<t;++n){let o=r.setByOffset("global_idx",e[n].getByIndices("indices"));t===1?s.push(o):n===0?s.push(`if (inputIndex == ${n}u) { ${o} }`):n===t-1?s.push(`else { ${o} }`):s.push(`else if (inputIndex == ${n}) { ${o} }`)}return s.join(`
`)},qh=(e,r,t,s)=>{let n=ge.size(t),o=new Array(e.length),i=new Array(e.length),a=0,l=[],u=[],p=[{type:12,data:n}];for(let E=0;E<e.length;++E)a+=e[E].dims[r],o[E]=a,u.push(e[E].dims.length),i[E]=Ee(`input${E}`,s,u[E]),l.push("rank"),p.push({type:12,data:o[E]});for(let E=0;E<e.length;++E)p.push(...lt(e[E].dims));p.push(...lt(t));let c=rt("output",s,t.length),d=c.indicesGet("indices",r),_=Array.from(Array(o.length).keys()).map(E=>`uniforms.sizeInConcatAxis${E}`).join(","),f=E=>`

  ${(()=>{E.registerUniform("outputSize","u32");for(let k=0;k<e.length;k++)E.registerUniform(`sizeInConcatAxis${k}`,"u32");return E.declareVariables(...i,c)})()}

  ${Kh(o.length,_)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${c.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${d});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${o.length}u>(${_});
      ${d} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Hh(i,c)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}),getShaderSource:f}},Qh=(e,r)=>{let t=e.inputs,s=t[0].dims,n=ge.normalizeAxis(r.axis,s.length);Gh(t,n);let o=s.slice();o[n]=t.reduce((a,l)=>a+(l.dims.length>n?l.dims[n]:0),0);let i=t.filter(a=>ge.size(a.dims)>0);e.compute(qh(i,n,o,t[0].dataType),{inputs:i})},Xh=e=>zt({axis:e.axis})}),tn,rn,sn,dl,nn=Re(()=>{ft(),yt(),tn=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},rn=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},sn=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},dl=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,s]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=e?.activation_params||[Md,bd];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}}),Tr,Jh,pl=Re(()=>{Tr=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},Jh=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Yh,zv=Re(()=>{Yh=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),_o,hl,ml=Re(()=>{ft(),yt(),xt(),nn(),_o=(e,r,t,s,n)=>{let o=s-t;return`
      ${Array.from({length:t}).map((i,a)=>`
      if (${ot(r.shape,a,r.rank)} != 1) {
        ${r.indicesSet(e,a,ot(n,a+o,s))}
      } else {
        ${r.indicesSet(e,a,0)}
      }`).join("")}
`},hl=(e,r,t,s,n=!1,o)=>{let i=e[0].dims,a=e[1].dims,l=i[i.length-2],u=a[a.length-1],p=i[i.length-1],c=sr(u),d=sr(p),_=sr(l),f=ge.size(t)/c/_,E=e.length>2,k=s?s.slice(0,-2):t.slice(0,-2),b=[ge.size(k),l,u],g=[{type:12,data:f},{type:12,data:l},{type:12,data:u},{type:12,data:p}];rn(r,g),g.push(...lt(k,i,a)),E&&g.push(...lt(e[2].dims)),g.push(...lt(b));let C=x=>{let v=el("batch_dims",e[0].dataType,k.length),w=Ee("a",e[0].dataType,i.length,d),y=Ee("b",e[1].dataType,a.length,c),S=rt("output",e[0].dataType,b.length,c),O=yr(S.type.tensor),R=tn(r,S.type.value,O),H=[w,y],Q="";if(E){let q=n?c:1;H.push(Ee("bias",e[2].dataType,e[2].dims.length,q)),Q=`${n?`value += bias[col / ${q}];`:`value += ${S.type.value}(bias[row + i]);`}`}let L=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];sn(r,L);let Y=()=>{let q=`var a_data: ${w.type.value};`;for(let X=0;X<d;X++)q+=`
              let b_data${X} = b[(b_offset + (k + ${X}) * uniforms.N + col) / ${c}];`;for(let X=0;X<_;X++){q+=`a_data = a[(a_offset + (row + ${X}) * uniforms.K + k) / ${d}];`;for(let re=0;re<d;re++)q+=`
            values[${X}] = fma(${y.type.value}(a_data${d===1?"":`[${re}]`}), b_data${re}, values[${X}]);
`}return q};return`
  ${x.registerUniforms(L).registerInternalVariables(v).declareVariables(...H,S)}
  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${c})) * ${c};
    var index1 = global_idx / (uniforms.N / ${c});
    let stride1 = uniforms.M / ${_};
    let row = (index1 % stride1) * ${_};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${v.offsetToIndices("batch")};`}

    var a_indices: ${w.type.indices};
    ${_o("a_indices",w,w.rank-2,v.rank,"batch_indices")}
    ${w.indicesSet("a_indices",w.rank-2,0)}
    ${w.indicesSet("a_indices",w.rank-1,0)}
    let a_offset = ${w.indicesToOffset("a_indices")};

    var b_indices: ${y.type.indices};
    ${_o("b_indices",y,y.rank-2,v.rank,"batch_indices")}
    ${y.indicesSet("b_indices",y.rank-2,0)}
    ${y.indicesSet("b_indices",y.rank-1,0)}
    let b_offset = ${y.indicesToOffset("b_indices")};
    var values: array<${S.type.value}, ${_}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${d}) {
      ${Y()}
    }
    for (var i = 0u; i < ${_}u; i++) {
      var value = values[i];
      ${Q}
      ${R}
      let cur_indices = ${S.type.indices}(batch, row + i, col);
      let offset = ${S.indicesToOffset("cur_indices")};
      ${S.setByOffset(`offset / ${c}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${c};${d};${_};${n}`,inputDependencies:E?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:o?o(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:g}),getShaderSource:C}}}),Zh,em,fl,_l,tm,gl,rm,mi,wl=Re(()=>{ft(),yt(),xt(),nn(),ml(),pl(),Zh=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,em=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,fl=(e,r,t="f32",s,n=!1,o=32,i=!1,a=32)=>{let l=r[1]*e[1],u=r[0]*e[0],p=n?l:o,c=n?o:l,d=p/r[0],_=o/r[1];if(!((n&&d===4&&e[1]===4||!n&&(d===3||d===4))&&p%r[0]===0&&o%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${d} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${d}<${t}>, ${p/d}>, ${c}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${u/e[0]}>, ${o}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${d};
const tileInner = ${o};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${i?`${Math.ceil(a/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${_};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Zh(n,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${d===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${em(n,d)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},_l=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,tm=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",gl=(e,r,t="f32",s,n=!1,o=32,i=!1,a=32,l=!1)=>{let u=e[1]*r[1],p=e[0]*r[0],c=n?u:o,d=n?o:u;if(!(d%r[1]===0&&c%r[0]===0&&o%r[1]===0))throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${r[0]}, tileInner ${o} must be divisible by workgroupSize[1]${r[1]}`);let _=d/r[1],f=c/r[0],E=o/r[1],k=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${u};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${r[0]}) {
          ${_l(n,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${u};

let tileRowA = i32(localId.y) * ${_};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${E};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${_l(n,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${E}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${tm(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${c}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${o}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${o};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(a/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${k}
  }
`},rm=(e,r,t,s,n=!1)=>{let[o,i,a,l]=s,u=yr(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${o.type.indices}) -> ${Tr(e,u)} {
      var value = ${Tr(e,u)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${i.type.indices};
        ${_o("aIndices",i,i.rank-2,o.rank,"batchIndices")}
        ${i.indicesSet("aIndices",i.rank-2,"u32(row)")}
        ${i.indicesSet("aIndices",i.rank-1,"u32(colIn)")}
        value = ${i.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${o.type.indices}) -> ${Tr(e,u)} {
      var value = ${Tr(e,u)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${_o("bIndices",a,a.rank-2,o.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Tr(e,u)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${n?"bias[colIn]":`${Tr(e,u)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},mi=(e,r,t,s,n=!1,o)=>{let i=e[0].dims,a=e[1].dims,l=i.slice(0,-2),u=a.slice(0,-2),p=s?s.slice(0,-2):t.slice(0,-2),c=ge.size(p),d=i[i.length-2],_=i[i.length-1],f=a[a.length-1],E=_%4===0&&f%4===0,k=d<=8?[4,1,1]:[4,4,1],b=[8,8,1],g=[Math.ceil(f/b[0]/k[0]),Math.ceil(d/b[1]/k[1]),Math.ceil(c/b[2]/k[2])],C=E?4:1,x=[...l,d,_/C],v=x.length,w=[...u,_,f/C],y=w.length,S=[c,d,f/C],O=[{type:6,data:d},{type:6,data:f},{type:6,data:_}];rn(r,O),O.push(...lt(p,x,w));let R=["rank","rank"],H=e.length>2;H&&(O.push(...lt(e[2].dims)),R.push("rank")),O.push(...lt(S));let Q=L=>{let Y=p.length,q=el("batchDims",e[0].dataType,Y,1),X=yr(e[0].dataType),re=Ee("a",e[0].dataType,v,C),te=Ee("b",e[1].dataType,y,C),he=rt("result",e[0].dataType,S.length,C),ue=[re,te];if(H){let ae=n?C:1;ue.push(Ee("bias",e[2].dataType,e[2].dims.length,ae))}let N=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];sn(r,N);let A=yr(he.type.tensor),K=tn(r,he.type.value,A),j=rm(C,H,K,[q,re,te,he],n);return`
  ${L.registerUniforms(N).registerInternalVariables(q).declareVariables(...ue,he)}
  ${j}
  ${E?fl(k,b,X,q):gl(k,b,X,q)}
                   `};return{name:"MatMul",shaderCache:{hint:`${k};${r.activation};${E};${n}`,inputDependencies:R},getRunData:()=>({outputs:[{dims:o?o(t):t,dataType:e[0].dataType}],dispatchGroup:{x:g[0],y:g[1],z:g[2]},programUniforms:O}),getShaderSource:Q}}}),sm,nm,Bv=Re(()=>{ft(),Fs(),xt(),nn(),pl(),zv(),wl(),sm=(e,r,t,s,n=!1,o,i=4,a=4,l=4,u="f32")=>{let p=O=>{switch(O){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${O} is not supported.`)}},c=O=>{switch(O){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${O} is not supported.`)}},d=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,_=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",E=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",k=e?"row":"col",b=e?"col":"row",g=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${k} / outWidth;
    let outCol = ${k} % outWidth;

    let WRow = ${b} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${b} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${b} % inChannels;
    var resData = ${Tr(i,u)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${E}) {
      ${d}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(i)}
    }
    return resData;`,C=e?r&&s?`
    let col = colIn * ${i};
    ${g}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${g}
    }
    return ${Tr(i,u)}(0.0);`:s&&t?`
    let col = colIn * ${i};
    ${g}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${g}
    }
    return ${Tr(i,u)}(0.0);`,x=e?s&&t?c(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${c(a)}
    }
    return ${Tr(a,u)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${c(a)}
    }
    return ${Tr(a,u)}(0.0);`,v=Tr(l,u),w=Tr(e?i:a,u),y=Tr(e?a:i,u),S=tn(o,v,u);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${w} {
      ${e?C:x}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${y} {
      ${e?x:C}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${v}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${_}
      ${Jh(n)}
      ${S}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},nm=(e,r,t,s,n,o,i,a,l)=>{let u=r.format==="NHWC",p=u?e[0].dims[3]:e[0].dims[1],c=t[0],d=u?t[2]:t[3],_=u?t[1]:t[2],f=u?t[3]:t[1],E=u&&(p%4===0||p%3===0)&&f%4===0,k=u?f:d*_,b=u?d*_:f,g=[8,8,1],C=s<=8?[4,1,1]:[4,4,1],x=[Math.ceil(k/g[0]/C[0]),Math.ceil(b/g[1]/C[1]),Math.ceil(c/g[2]/C[2])];kt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${x}`);let v=E?u&&p%4!==0?3:4:1,w=g[1]*C[1],y=g[0]*C[0],S=Math.max(g[0]*v,g[1]),O=s%w===0,R=n%y===0,H=o%S===0,Q=E?[v,4,4]:[1,1,1],L=[{type:6,data:s},{type:6,data:n},{type:6,data:o},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];rn(r,L),L.push(...lt(e[0].dims,e[1].dims));let Y=["rank","rank"];i&&(L.push(...lt(e[2].dims)),Y.push("rank")),L.push(...lt(t));let q=X=>{let re=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];sn(r,re);let te=E?4:1,he=yr(e[0].dataType),ue=`
      fn setOutputAtIndex(flatIndex : i32, value : ${E?`vec4<${he}>`:he}) {
        result[flatIndex] = ${E?`vec4<${he}>`:he}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${E?`vec4<${he}>`:he}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${E?"/ 4":""}, value);
      }`,N=Ee("x",e[0].dataType,e[0].dims.length,v===3?1:v),A=Ee("w",e[1].dataType,e[1].dims.length,te),K=[N,A],j=rt("result",e[0].dataType,t.length,te);if(i){let ae=Ee("bias",e[2].dataType,e[2].dims.length,te);K.push(ae),ue+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${E?`vec4<${he}>`:he} {
          return bias[coords.${u?"w":"y"}${E?"/ 4":""}];
        }`}return`
        ${Yh("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${X.registerUniforms(re).declareVariables(...K,j)}
        ${ue}
        ${sm(u,O,R,H,i,r,Q[0],Q[1],Q[2],he)}
        ${E?fl(C,g,he,void 0,!u,S):gl(C,g,he,void 0,!u,S,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${v};${E};${O};${R};${H};${w};${y};${S}`,inputDependencies:Y},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:L}),getShaderSource:q}}}),om,Ml,go,im,bl,am,lm,cm,Rv=Re(()=>{ft(),Fs(),yt(),xt(),nn(),pl(),om=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},Ml=e=>typeof e=="number"?[e,e,e]:e,go=(e,r)=>r<=1?e:e+(e-1)*(r-1),im=(e,r,t,s=1)=>{let n=go(r,s);return Math.floor((e[0]*(t-1)-t+n)/2)},bl=(e,r,t,s,n)=>{n==null&&(n=im(e,r[0],s[0]));let o=[0,0,0,t];for(let i=0;i<3;i++)e[i]+2*n>=r[i]&&(o[i]=Math.trunc((e[i]-r[i]+2*n)/s[i]+1));return o},am=(e,r,t,s,n,o,i,a,l,u)=>{let p,c,d,_;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=bl([r,t,s,1],[a,l,u],1,[n,o,i],e);c=f[0],d=f[1],_=f[2]}else if(Array.isArray(e)){if(!e.every((E,k,b)=>E===b[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=bl([r,t,s,1],[a,l,u],1,[n,o,i],e[0]);c=f[0],d=f[1],_=f[2]}else if(e==="SAME_UPPER"){c=Math.ceil(r/n),d=Math.ceil(t/o),_=Math.ceil(s/i);let f=(c-1)*n+a-r,E=(d-1)*o+l-t,k=(_-1)*i+u-s,b=Math.floor(f/2),g=f-b,C=Math.floor(E/2),x=E-C,v=Math.floor(k/2),w=k-v;p={top:C,bottom:x,left:v,right:w,front:b,back:g}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:c,outHeight:d,outWidth:_}},lm=(e,r,t,s,n,o=!1,i="channelsLast")=>{let a,l,u,p,c;if(i==="channelsLast")[a,l,u,p,c]=e;else if(i==="channelsFirst")[a,c,l,u,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[d,,_,f,E]=r,[k,b,g]=Ml(t),[C,x,v]=Ml(s),w=go(_,C),y=go(f,x),S=go(E,v),{padInfo:O,outDepth:R,outHeight:H,outWidth:Q}=am(n,l,u,p,k,b,g,w,y,S),L=o?d*c:d,Y=[0,0,0,0,0];return i==="channelsFirst"?Y=[a,L,R,H,Q]:i==="channelsLast"&&(Y=[a,R,H,Q,L]),{batchSize:a,dataFormat:i,inDepth:l,inHeight:u,inWidth:p,inChannels:c,outDepth:R,outHeight:H,outWidth:Q,outChannels:L,padInfo:O,strideDepth:k,strideHeight:b,strideWidth:g,filterDepth:_,filterHeight:f,filterWidth:E,effectiveFilterDepth:w,effectiveFilterHeight:y,effectiveFilterWidth:S,dilationDepth:C,dilationHeight:x,dilationWidth:v,inShape:e,outShape:Y,filterShape:r}},cm=(e,r,t,s,n,o)=>{let i=o==="channelsLast";i?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map((k,b)=>b)},u=[Math.ceil(om(l.x.map(k=>t[k]))/a[0]),1,1];kt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${u}`);let p=1,c=ge.size(t),d=[{type:12,data:c},{type:12,data:s},{type:12,data:n},{type:12,data:r.strides},{type:12,data:r.dilations}];rn(r,d),d.push(...lt(e[0].dims,e[1].dims));let _=["rank","rank"],f=e.length===3;f&&(d.push(...lt(e[2].dims)),_.push("rank")),d.push(...lt(t));let E=k=>{let b=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:n.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];sn(r,b);let g=1,C=yr(e[0].dataType),x=Ee("x",e[0].dataType,e[0].dims.length,p),v=Ee("W",e[1].dataType,e[1].dims.length,g),w=[x,v],y=rt("result",e[0].dataType,t.length,g),S="";if(f){let H=Ee("bias",e[2].dataType,e[2].dims.length,g);w.push(H),S+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${C} {
          return bias[${i?ot("coords",4,5):ot("coords",1,5)}];
        }`}let O=Tr(p,C),R=tn(r,O,C);return`
            ${S}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${x.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${v.getByIndices("aIndices")};
            }
          ${k.registerUniforms(b).declareVariables(...w,y)}
          ${k.mainStart()}
          ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${y.offsetToIndices("global_idx")};
              let batch = ${ot("coords",0,x.rank)};
              let d2 = ${i?ot("coords",x.rank-1,x.rank):ot("coords",1,x.rank)};
              let xFRCCorner = vec3<u32>(${i?ot("coords",1,x.rank):ot("coords",2,x.rank)},
              ${i?ot("coords",2,x.rank):ot("coords",3,x.rank)},
              ${i?ot("coords",3,x.rank):ot("coords",4,x.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${i?ot("uniforms.x_shape",1,x.rank):ot("uniforms.x_shape",2,x.rank)};
              let xShapeZ = ${i?ot("uniforms.x_shape",2,x.rank):ot("uniforms.x_shape",3,x.rank)};
              let xShapeW = ${i?ot("uniforms.x_shape",3,x.rank):ot("uniforms.x_shape",4,x.rank)};
              let xShapeU = ${i?ot("uniforms.x_shape",4,x.rank):ot("uniforms.x_shape",1,x.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${i?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${i?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${i?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${i?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${R}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${i};${p};${f}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:u[0],y:u[1],z:u[2]},programUniforms:d}),getShaderSource:E}}}),um,dm,jv=Re(()=>{ft(),yt(),xt(),nn(),um=(e,r,t,s)=>{let n=e.length>2,o=n?"value += b[output_channel];":"",i=e[0].dims,a=e[1].dims,l=r.format==="NHWC",u=l?t[3]:t[1],p=u/r.group,c=l&&p>=4?sr(u):1,d=ge.size(t)/c,_=[{type:12,data:d},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:p}];rn(r,_),_.push(...lt(i,[a[0],a[1],a[2],a[3]/c]));let f=n?["rank","rank","rank"]:["rank","rank"];_.push(...lt([t[0],t[1],t[2],t[3]/c]));let E=k=>{let b=rt("output",e[0].dataType,t.length,c),g=yr(b.type.tensor),C=tn(r,b.type.value,g),x=Ee("x",e[0].dataType,i.length),v=Ee("w",e[1].dataType,a.length,c),w=[x,v];n&&w.push(Ee("b",e[2].dataType,e[2].dims,c));let y=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];sn(r,y);let S=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${x.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${v.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${x.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${v.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${k.registerUniforms(y).declareVariables(...w,b)}

  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${b.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${c} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${b.type.value} = ${b.type.value}(0);
    ${S}
    ${o}
    ${C}
    ${b.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${c}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:_}),getShaderSource:E}},dm=(e,r,t,s)=>{let n=e.length>2,o=sr(t[3]),i=sr(t[2]),a=ge.size(t)/o/i,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/o],u=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/o],p=[t[0],t[1],t[2],t[3]/o],c=[{type:12,data:a},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];rn(r,c),c.push(...lt(l,u,p));let d=(i-1)*r.strides[1]+u[1],_=f=>{let E=rt("output",e[0].dataType,p.length,o),k=yr(E.type.tensor),b=tn(r,E.type.value,k),g=Ee("x",e[0].dataType,l.length,o),C=Ee("w",e[1].dataType,u.length,o),x=[g,C];n&&x.push(Ee("b",e[2].dataType,e[2].dims,o));let v=n?"value += b[output_channel];":"",w=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return sn(r,w),`
  ${f.registerUniforms(w).declareVariables(...x,E)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${g.type.value}, ${d}>;
    var values: array<${E.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${u[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${d}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${g.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${g.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${u[1]}; w_width++) {
          let w_val = ${C.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${v}
      ${b}
      ${E.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${o};${i};${d};${u[0]};${u[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c}),getShaderSource:_}}}),pm,fi,hm,_i,yl,vl,mm,fm,xl,Nv=Re(()=>{yt(),Bv(),Rv(),wl(),jv(),nn(),ml(),Ns(),pm=(e,r,t,s,n,o)=>{let i=e[0],a=e.slice(o?1:2,o?3:4),l=a.length,u=r[0],p=r.slice(2).map((d,_)=>d+(d-1)*(t[_]-1)),c=a.map((d,_)=>d+s[_]+s[_+l]).map((d,_)=>Math.floor((d-p[_]+n[_])/n[_]));return c.splice(0,0,i),c.splice(o?3:1,0,u),c},fi=[2,3,1,0],hm=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},_i=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let o=2;o<r[1].dims.length;++o)t[o-2]===0&&(t[o-2]=r[1].dims[o]);let s=e.pads.slice();ii.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:t,pads:s}),n},yl=e=>{let r=dl(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,o=e.group,i=e.kernel_shape,a=e.pads,l=e.strides,u=e.w_is_const();return{autoPad:s,format:t,dilations:n,group:o,kernelShape:i,pads:a,strides:l,wIsConst:u,...r,cacheKey:`${e.format};${r.activation};`}},vl=(e,r,t,s)=>{let n=t.format==="NHWC",o=pm(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,n);if(t.group!==1){let w=[r[0]];if(n){let y=e.kernelCustomData.wT??e.compute(Kr(r[1],fi),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=y),w.push(y)}else w.push(r[1]);r.length===3&&w.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&n&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(dm(w,t,o,s),{inputs:w}):e.compute(um(w,t,o,s),{inputs:w});return}let i=r.length===3,a=r[0].dims[n?1:2],l=r[0].dims[n?2:3],u=r[0].dims[n?3:1],p=r[1].dims[2],c=r[1].dims[3],d=o[n?1:2],_=o[n?2:3],f=o[n?3:1],E=n&&p===a&&c===l&&t.pads[0]===0&&t.pads[1]===0;if(E||p===1&&c===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let w=o[0],y,S,O,R=[];if(n){let L=e.kernelCustomData.wT??e.compute(Kr(r[1],fi),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=L),E){let Y=a*l*u;y=r[0].reshape([1,w,Y]),S=L.reshape([1,Y,f]),O=[1,w,f]}else y=r[0].reshape([w,a*l,u]),S=L.reshape([1,u,f]),O=[w,d*_,f];R.push(y),R.push(S)}else y=r[0].reshape([w,u,a*l]),S=r[1].reshape([1,f,u]),O=[w,f,d*_],R.push(S),R.push(y);i&&R.push(r[2]);let H=O[2],Q=R[0].dims[R[0].dims.length-1];H<8&&Q<8?e.compute(hl(R,t,o,O,n,s),{inputs:R}):e.compute(mi(R,t,o,O,n,s),{inputs:R});return}let k=!0,b=e.kernelCustomData.wT??e.compute(Kr(r[1],fi),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=b);let g=[r[0],b];i&&g.push(r[2]);let C=n?d*_:f,x=n?f:d*_,v=p*c*u;e.compute(nm(g,t,o,C,x,v,i,k,s),{inputs:g})},mm=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=[0,r.pads[0],0,r.pads[1]],o=[1].concat(r.strides),i=[1].concat(r.dilations),a=[1].concat(r.kernelShape),l=_i({...r,pads:n,strides:o,dilations:i,kernelShape:a},s);vl(e,s,l,u=>t?[u[0],u[2],u[3]]:[u[0],u[1],u[3]])},fm=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",n=_i(t,r),o=t.autoPad==="NOTSET"?t.pads:t.autoPad,i=lm(r[0].dims,r[1].dims,t.strides,t.dilations,o,!1,s);e.compute(cm(r,n,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],s))},xl=(e,r)=>{if(hm(e.inputs,r),e.inputs[0].dims.length===3)mm(e,r);else if(e.inputs[0].dims.length===5)fm(e,e.inputs,r);else{let t=_i(r,e.inputs);vl(e,e.inputs,t)}}}),_m,Vv=Re(()=>{ft(),Fs(),yt(),xt(),_m=(e,r,t)=>{let s=e.length>2,n=r.outputShape,o=r.format==="NHWC",i=r.group,a=e[1].dims,l=a[2]/i,u=a[3],p=o?sr(l):1,c=o&&u===1&&l>=4,d=c?Math.floor(l/4)*4:Math.floor(l/p)*p,_=l-d,f=o?sr(u):1,E=o?u===1?p:f:1,k=ge.size(n)/f,b=[Math.ceil(k/64),1,1];kt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${b}`);let g=["rank","rank"],C=[r.strides[0],r.strides[1]],x=[r.kernelShape[o?1:2],r.kernelShape[o?2:3]],v=[r.dilations[0],r.dilations[1]],w=[x[0]+(r.dilations[0]<=1?0:(r.kernelShape[o?1:2]-1)*(r.dilations[0]-1)),x[1]+(r.dilations[1]<=1?0:(r.kernelShape[o?2:3]-1)*(r.dilations[1]-1))],y=[w[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),w[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],S=[{type:12,data:k},{type:12,data:C},{type:12,data:x},{type:12,data:v},{type:12,data:w},{type:6,data:y},{type:12,data:d},{type:12,data:l},{type:12,data:u},...lt(e[0].dims,e[1].dims)];s&&(S.push(...lt(e[2].dims)),g.push("rank")),S.push(...lt(n));let O=R=>{let H=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:C.length},{name:"filter_dims",type:"u32",length:x.length},{name:"dilations",type:"u32",length:x.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:y.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Q=yr(e[0].dataType),L=o?1:2,Y=o?2:3,q=o?3:1,X=Ee("W",e[1].dataType,e[1].dims.length,E),re=Ee("Dy",e[0].dataType,e[0].dims.length,p),te=[re,X];s&&te.push(Ee("bias",e[2].dataType,[n[q]].length,f));let he=rt("result",e[0].dataType,n.length,f),ue=()=>{let K="";if(c)p===4?K+=`
        let xValue = ${re.getByOffset("x_offset")};
        let wValue = ${X.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?K+=`
          dotProd = dotProd + dot(vec4<${Q}>(${re.getByOffset("x_offset")}, ${re.getByOffset("x_offset + 1u")}), vec4<${Q}>(${X.getByOffset("w_offset")}, ${X.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(K+=`
          dotProd = dotProd + dot(vec4<${Q}>(${re.getByOffset("x_offset")}, ${re.getByOffset("x_offset + 1u")}, ${re.getByOffset("x_offset + 2u")}, ${re.getByOffset("x_offset + 3u")}), vec4<${Q}>(${X.getByOffset("w_offset")}, ${X.getByOffset("w_offset + 1u")}, ${X.getByOffset("w_offset + 2u")}, ${X.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(K+=`
                  let xValue = ${o?re.getByOffset(`${re.indicesToOffset(`${re.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):re.get("batch","inputChannel","idyR","idyC")};
        `,p===1)K+=`
          let w_offset = ${X.indicesToOffset(`${X.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${X.getByOffset(`w_offset / ${E}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let j=0;j<p;j++)K+=`
            let wValue${j} = ${X.getByOffset(`${X.indicesToOffset(`${X.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${j}, wOutChannel)`)} / ${E}`)};
            dotProd = dotProd + xValue[${j}] * wValue${j};`;return K},N=()=>{if(_===0)return"";if(!c)throw new Error(`packInputAs4 ${c} is not true.`);let K="";if(p===1){K+="dotProd = dotProd";for(let j=0;j<_;j++)K+=`
            + ${re.getByOffset(`x_offset + ${j}`)} * ${X.getByOffset(`w_offset + ${j}`)}`;K+=";"}else if(p===2){if(_!==2)throw new Error(`Invalid inputChannelsRemainder ${_}.`);K+=`
          let xValue = ${re.getByOffset("x_offset")};
          let wValue = ${X.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return K},A=`
            let outputIndices = ${he.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${he.indicesGet("outputIndices",0)};
            let d1 = ${he.indicesGet("outputIndices",q)};
            let r = ${he.indicesGet("outputIndices",L)};
            let c = ${he.indicesGet("outputIndices",Y)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${he.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${Q}(dyRCorner) + ${Q}(wR)) / ${Q}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${Q}(uniforms.Dy_shape[${L}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${Q}(dyCCorner) + ${Q}(wC)) / ${Q}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${Q}(uniforms.Dy_shape[${Y}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${c?`
                var x_offset = ${re.indicesToOffset(`${re.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${X.indicesToOffset(`${X.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${E};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${c?4:p}) {
                  ${ue()}
                  inputChannel = inputChannel + ${c?4:p};
                }
                ${N()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${f}]`:""};
            ${he.setByOffset("global_idx","value")};
          `;return`
    ${R.registerUniforms(H).declareVariables(...te,he)}
      ${R.mainStart()}
      ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${A}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${p}${E}${f}${c}${_}`,inputDependencies:g},getRunData:()=>({dispatchGroup:{x:b[0],y:b[1],z:b[2]},outputs:[{dims:t?t(n):n,dataType:e[0].dataType}],programUniforms:S}),getShaderSource:O}}}),gm,wm,Mm,Tl,bm,ym,El,vm,xm,Uv=Re(()=>{Vv(),nn(),Ns(),gm=(e,r,t,s,n,o)=>(e-1)*r+t+(s-1)*n+1-o,wm=(e,r,t,s,n)=>{let o=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=o,t[n]=e-o):r==="SAME_LOWER"&&(t[s]=e-o,t[n]=o)},Mm=(e,r,t,s,n,o,i,a,l,u)=>{let p=e.length-2,c=u.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let d=e[0],_=r[a?3:1]*n;for(let f=0,E=e.length-p-(a?1:0);f<p;++f,++E){let k=e[E],b=c?k*i[f]:u[f],g=gm(k,i[f],o[f],r[E],t[f],b);wm(g,s,o,f,f+p),c&&u.push(i[f]*(k-1)+l[f]+(r[E]-1)*t[f]+1-o[f]-o[f+p])}u.splice(0,0,d),u.splice(a?3:1,0,_)},Tl=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((c,d)=>c*d,1)===0){t.length=0;for(let c=2;c<r[1].dims.length;++c)t.push(r[1].dims[c])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let n=e.pads.slice(),o=e.outputShape.slice(),i=e.outputPadding.slice(),a=r[0].dims,l=e.dilations.slice();if(l.reduce((c,d)=>c+d,0)===0){let c=r[0].dims.length-2;l=new Array(c).fill(1)}let u=e.strides.slice();if(u.reduce((c,d)=>c+d,0)===0){let c=r[0].dims.length-2;u=new Array(c).fill(1)}Mm(a,t,l,e.autoPad,e.group,n,u,s,i,o);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:n,outputPadding:i,outputShape:o,dilations:l,strides:u}),p},bm=e=>{let r=dl(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,o=e.group,i=e.kernelShape,a=e.pads,l=e.strides,u=e.wIsConst(),p=e.outputPadding,c=e.outputShape;return{autoPad:s,format:t,dilations:n,group:o,kernelShape:i,outputPadding:p,outputShape:c,pads:a,strides:l,wIsConst:u,...r,cacheKey:`${e.format};${r.activation};`}},ym=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let o=e[0].dims.length-2;if(r.dilations.reduce((i,a)=>i+a,0)>0&&r.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(r.strides.reduce((i,a)=>i+a,0)>0&&r.strides.length!==o)throw new Error(`strides should be ${o}D`);if(r.pads.reduce((i,a)=>i+a,0)>0&&r.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(r.outputPadding.length!==o&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${o}D`);if(r.kernelShape.reduce((i,a)=>i+a,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},El=(e,r,t,s)=>{let n=e.kernelCustomData.wT??e.compute(Kr(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=n);let o=[r[0],n];r.length===3&&o.push(r[2]),e.compute(_m(o,t,s),{inputs:o})},vm=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=r.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let o=r.dilations;(o.length===0||o[0]===0)&&(o=[1]);let i=r.strides;(i.length===0||i[0]===0)&&(i=[1]);let a=r.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],i=[1].concat(i),o=[1].concat(o),n=[1].concat(n);let l=r.outputPadding;l=[0].concat(l);let u=Tl({...r,pads:a,strides:i,dilations:o,kernelShape:n,outputPadding:l},s);El(e,s,u,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},xm=(e,r)=>{if(ym(e.inputs,r),e.inputs[0].dims.length===3)vm(e,r);else{let t=Tl(r,e.inputs);El(e,e.inputs,t)}}}),Tm,Em,Pm,Wv=Re(()=>{ft(),yt(),ar(),xt(),Tm=(e,r,t,s)=>{let n=ge.size(r),o=r.length,i=Ee("input",e,o),a=rt("output",e,o),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),u=ge.normalizeAxis(l,o),p=c=>{let d=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,_=ot("uniforms.input_shape","uniforms.axis",o),f=s.reverse?d+(s.exclusive?" + 1":""):"0",E=s.reverse?_:d+(s.exclusive?"":" + 1");return`
                ${c.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,a)}
                ${c.mainStart()}
                  ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${E};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:12,data:u},...lt(r,r)]}),getShaderSource:p}},Em=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,n=e.inputs[1];e.compute(Tm(s,t,n,r),{inputs:[0]})},Pm=e=>{let r=e.exclusive===1,t=e.reverse===1;return zt({exclusive:r,reverse:t})}}),Cm,Sm,$m,Im,km,Gv=Re(()=>{ft(),yt(),ar(),xt(),Cm=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Sm=(e,r,t,s)=>{let n=[];n.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let o=0;o<r;++o)n.push(t.indicesSet("a",e[o],`i[${o}]`));return n.push("return a;}"),n.join(`
`)},$m=(e,r)=>{let t,s,n,o,i,a,l=r.format==="NHWC",u=r.blocksize,p=r.mode==="DCR";l?([t,s,n,o]=e.dims,i=p?[t,s,n,u,u,o/u**2]:[t,s,n,o/u**2,u,u],a=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,n,o]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=p?[t,u,u,o/u**2,s,n]:[t,o/u**2,u,u,s,n],a=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let c=e.reshape(i),d=c.dims.length,_=e.dataType,f=Ee("a",_,d),E=rt("output",_,d),k=b=>`
  ${b.registerUniform("output_size","u32").declareVariables(f,E)}

  ${Sm(a,d,f,E)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${E.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${E.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:b=>{let g=l?[t,s*u,n*u,o/u**2]:[t,o/u**2,s*u,n*u],C=ge.size(g),x=c.dims,v=ge.sortBasedOnPerm(x,a);return{outputs:[{dims:g,dataType:b[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:[{type:12,data:C},...lt(x,v)]}},getShaderSource:k}},Im=(e,r)=>{Cm(e.inputs),e.compute($m(e.inputs[0],r))},km=e=>zt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),gi,wo,Pl,Am,Fm,Om,Dm,Cl,Lm,zm,Bm,Kv=Re(()=>{ft(),yt(),ar(),xt(),gi="[a-zA-Z]|\\.\\.\\.",wo="("+gi+")+",Pl="^"+wo+"$",Am="("+wo+",)*"+wo,Fm="^"+Am+"$",Om=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},Dm=class{constructor(e,r){this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(Fm)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,o)=>{let i=e[o].dims.slice();if(!n.match(RegExp(Pl)))throw new Error("Invalid LHS term");let a=this.processTerm(n,!0,i,o);this.lhs.push(a)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,o])=>o.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(wo)))throw new Error("Invalid RHS");s.match(RegExp(gi,"g"))?.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(n);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let n=t.length,o=!1,i=[],a=0;if(!e.match(RegExp(Pl))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(gi,"g")),u=new Om(s);return l?.forEach((p,c)=>{if(p==="..."){if(o)throw new Error("Only one ellipsis is allowed per input term");o=!0;let d=n-l.length+1;if(d<0)throw new Error("Ellipsis out of bounds");if(i=t.slice(a,a+d),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let _=0;_<i.length;_++){let f=String.fromCharCode(48+_);u.addSymbol(f,c+_),this.addSymbol(f,t[a++],s)}}else u.addSymbol(p,c+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[a++],s)}),u}},Cl=e=>e+"_max",Lm=(e,r,t,s)=>{let n=e.map(u=>u.length).map((u,p)=>Ee(`input${p}`,r,u)),o=ge.size(s),i=rt("output",r,s.length),a=[...t.symbolToInfo.keys()].filter(u=>!t.rhs.symbolToIndices.has(u)),l=u=>{let p=[],c="var prod = 1.0;",d="var sum = 0.0;",_="sum += prod;",f=[],E=[],k=[],b=[],g=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((x,v)=>{if(t.rhs.symbolToIndices.has(v)){let w=t.rhs.symbolToIndices.get(v)?.[0];w!==void 0&&t.lhs.forEach((y,S)=>{if(x.inputIndices.includes(S)){let O=y.symbolToIndices.get(v);if(O===void 0)throw new Error("Invalid symbol error");O.forEach(R=>{p.push(`${n[S].indicesSet(`input${S}Indices`,R,i.indicesGet("outputIndices",w))}`)})}})}else t.lhs.forEach((w,y)=>{if(x.inputIndices.includes(y)){let S=w.symbolToIndices.get(v);if(S===void 0)throw new Error("Invalid symbol error");S.forEach(O=>{f.push(`${n[y].indicesSet(`input${y}Indices`,O,`${v}`)}`)}),b.push(`prod *= ${n[y].getByIndices(`input${y}Indices`)};`)}}),E.push(`for(var ${v}: u32 = 0; ${v} < uniforms.${Cl(v)}; ${v}++) {`),k.push("}")});let C=g?[...p,`let sum = ${n.map((x,v)=>x.getByIndices(`input${v}Indices`)).join(" * ")};`]:[...p,d,...E,...f,c,...b,_,...k];return`
            ${u.registerUniforms(a.map(x=>({name:`${Cl(x)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...n,i)}

            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${n.map((x,v)=>`var input${v}Indices: ${n[v].type.indices};`).join(`
`)}
            ${C.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let u=a.filter(c=>t.symbolToInfo.has(c)).map(c=>({type:12,data:t.symbolToInfo.get(c)?.dimValue||0}));u.push({type:12,data:o});let p=e.map((c,d)=>[...lt(c)]).reduce((c,d)=>c.concat(d),u);return p.push(...lt(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p}},getShaderSource:l}},zm=(e,r)=>{let t=new Dm(e.inputs,r.equation),s=t.outputDims,n=e.inputs.map((o,i)=>o.dims);e.compute(Lm(n,e.inputs[0].dataType,t,s))},Bm=e=>{let r=e.equation.replace(/\s+/g,"");return zt({equation:r})}}),Rm,Sl,jm,Nm,Vm,Hv=Re(()=>{ft(),yt(),xt(),Rm=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,n=r.length<t.length?0:r.length-t.length;for(;s<t.length&&n<r.length;++s,++n)if(t[s]!==r[n]&&t[s]!==1&&r[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Sl=(e,r)=>{let t=e.length-r.length,s=[];for(let n=0;n<t;++n)s.push(e[n]);for(let n=0;n<r.length;++n)s.push(r[n]===1?e[n+t]:r[n]);return s},jm=(e,r)=>e.length>r.length?Sl(e,r):Sl(r,e),Nm=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=jm(r,t),n=e[0].dataType,o=n===9||ge.size(r)===1,i=n===9||r.length>0&&r[r.length-1]%4===0?4:1,a=o||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(ge.size(s)/a),u=c=>{let d=Ee("input",n,r.length,i),_=rt("output",n,s.length,a),f;if(n===9){let E=(k,b,g="")=>`
          let outputIndices${b} = ${_.offsetToIndices(`outputOffset + ${b}u`)};
          let offset${b} = ${d.broadcastedIndicesToOffset(`outputIndices${b}`,_)};
          let index${b} = offset${b} / 4u;
          let component${b} = offset${b} % 4u;
          ${k}[${b}] = ${g}(${d.getByOffset(`index${b}`)}[component${b}]);
        `;f=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${E("data",0,"u32")}
        ${E("data",1,"u32")}
        ${E("data",2,"u32")}
        ${E("data",3,"u32")}
        ${_.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${_.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",_)};
        let data = ${_.type.value}(${d.getByOffset(`inputOffset / ${i}`)});
        ${_.setByOffset("global_idx","data")}
      }`;return`
    ${c.registerUniform("vec_size","u32").declareVariables(d,_)}
    ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},p=[{type:12,data:l},...lt(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${i}${a}`,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},Vm=e=>{Rm(e.inputs),e.compute(Nm(e.inputs),{inputs:[0]})}}),Um,Wm,qv=Re(()=>{ft(),yt(),xt(),ul(),Um=e=>{let r=e[0].dataType,t=ge.size(e[0].dims),s=ge.size(e[1].dims),n=s%4===0,o=i=>{let a=Ee("x",r,[1],4),l=Ee("bias",r,[1],4),u=rt("y",r,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],c=_=>`
      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;
      let bias${_} = ${l.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,d=n?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${c(0)}${c(1)}${c(2)}${c(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(p).declareVariables(a,l,u)}

    ${ll(Fr(r))}

    ${i.mainStart(Dn)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${d}
      let x_in = x + bias;
      ${u.setByOffset("global_idx",cl("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:o,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/Dn/4)}})}},Wm=e=>{e.inputs.length<2||ge.size(e.inputs[1].dims)===0?Th(e):e.compute(Um(e.inputs))}}),Gm,Km,Hm,qm,Qv=Re(()=>{ft(),yt(),ar(),xt(),Gm=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Km=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t.length,o=ge.normalizeAxis(r.axis,n),i=t.slice(0);i.splice(o,1,...s);let a=t[o],l=e[0].dataType===9?4:1,u=Math.ceil(ge.size(i)/l),p=[{type:12,data:u},{type:6,data:a},{type:12,data:o},...lt(e[0].dims,e[1].dims,i)],c=d=>{let _=Ee("data",e[0].dataType,e[0].dims.length,l),f=Ee("inputIndices",e[1].dataType,e[1].dims.length),E=rt("output",e[0].dataType,i.length,l),k=g=>{let C=s.length,x=`var indicesIndices${g}  = ${f.type.indices}(0);`;for(let v=0;v<C;v++)x+=`${C>1?`indicesIndices${g}[${v}]`:`indicesIndices${g}`} = ${i.length>1?`outputIndices${g}[uniforms.axis + ${v}]`:`outputIndices${g}`};`;x+=`
          var idx${g} = ${f.getByIndices(`indicesIndices${g}`)};
          if (idx${g} < 0) {
            idx${g} = idx${g} + uniforms.axisDimLimit;
          }
          var dataIndices${g} : ${_.type.indices};
        `;for(let v=0,w=0;v<n;v++)v===o?(x+=`${n>1?`dataIndices${g}[${v}]`:`dataIndices${g}`} = u32(idx${g});`,w+=C):(x+=`${n>1?`dataIndices${g}[${v}]`:`dataIndices${g}`} = ${i.length>1?`outputIndices${g}[${w}]`:`outputIndices${g}`};`,w++);return x},b;if(e[0].dataType===9){let g=(C,x,v="")=>`
          let outputIndices${x} = ${E.offsetToIndices(`outputOffset + ${x}u`)};
          ${k(x)};
          let offset${x} = ${_.indicesToOffset(`dataIndices${x}`)};
          let index${x} = offset${x} / 4u;
          let component${x} = offset${x} % 4u;
          ${C}[${x}] = ${v}(${_.getByOffset(`index${x}`)}[component${x}]);
        `;b=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${g("value",0,"u32")}
        ${g("value",1,"u32")}
        ${g("value",2,"u32")}
        ${g("value",3,"u32")}
        ${E.setByOffset("global_idx","value")}
      `}else b=`
      let outputIndices = ${E.offsetToIndices("global_idx")};
      ${k("")};
      let value = ${_.getByIndices("dataIndices")};
      ${E.setByOffset("global_idx","value")};
      `;return`
      ${d.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,f,E)}
      ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${b}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:p}),getShaderSource:c}},Hm=e=>zt({axis:e.axis}),qm=(e,r)=>{let t=e.inputs;Gm(t),e.compute(Km(e.inputs,r))}}),Qm,Xm,Jm,Xv=Re(()=>{ft(),yt(),xt(),Qm=(e,r,t,s,n,o,i,a,l)=>{let u=[{type:12,data:o},{type:12,data:s},{type:12,data:n},{type:12,data:t},{type:12,data:i},{type:12,data:a},{type:12,data:l}],p=[o];u.push(...lt(r.dims,p));let c=d=>{let _=Ee("indices_data",r.dataType,r.dims.length),f=rt("input_slice_offsets_data",12,1,1),E=[_,f],k=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:n.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${d.registerUniforms(k).declareVariables(...E)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${n.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${n.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:u}),getShaderSource:c},{inputs:[r],outputs:[-1]})[0]},Xm=(e,r)=>{let t=e.inputs,s=t[0].dims,n=t[0].dataType,o=t[1].dims,i=o[o.length-1],a=ge.sizeToDimension(o,o.length-1),l=ge.sizeFromDimension(s,r.batchDims+i),u=ge.sizeToDimension(s,r.batchDims),p=ge.sizeFromDimension(s,r.batchDims),c=a/u,d=new Array(i),_=l;for(let x=0;x<i;++x)d[i-1-x]=_,_*=s[r.batchDims+i-1-x];let f=Qm(e,t[1],d,r.batchDims,s,a,c,p,i),E=r.batchDims+i;if(E>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let k=o.slice(0,-1).concat(s.slice(E)),b=ge.size(k),g=[{type:12,data:b},{type:12,data:l},...lt(t[0].dims,f.dims,k)],C=x=>{let v=Ee("data",t[0].dataType,t[0].dims.length),w=Ee("slice_offsets",12,f.dims.length),y=rt("output",t[0].dataType,k.length);return`
          ${x.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(v,w,y)}
            ${x.mainStart()}
            ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:k,dataType:n}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:g}),getShaderSource:C},{inputs:[t[0],f]})},Jm=e=>({batchDims:e.batch_dims,cacheKey:""})}),Ym,Zm,ef,tf,Jv=Re(()=>{ft(),yt(),ar(),xt(),Ym=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=ge.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,n=e[0],o=e[2],i=e.length===4?e[3]:void 0;if(o.dims.length!==n.dims.length||!n.dims.map((a,l)=>l===t?Math.ceil(a/s)===o.dims[l]:a===o.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==n.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==o.dims.length||!i.dims.map((a,l)=>a===o.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Zm=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t.length,o=ge.normalizeAxis(r.gatherAxis,n),i=ge.normalizeAxis(r.quantizeAxis,n),a=t.slice(0);a.splice(o,1,...s);let l=ge.size(a),u=e[2].dataType,p=e[0].dataType===22,c=[{type:12,data:l},{type:12,data:i},{type:12,data:o},{type:12,data:r.blockSize},...lt(...e.map((_,f)=>_.dims),a)],d=_=>{let f=Ee("data",e[0].dataType,e[0].dims.length),E=Ee("inputIndices",e[1].dataType,e[1].dims.length),k=Ee("scales",e[2].dataType,e[2].dims.length),b=e.length>3?Ee("zeroPoint",e[3].dataType,e[3].dims.length):void 0,g=rt("output",u,a.length),C=[f,E,k];b&&C.push(b);let x=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${_.registerUniforms(x).declareVariables(...C,g)}
        ${_.mainStart()}
        let output_indices = ${g.offsetToIndices("global_idx")};
        var indices_indices = ${E.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${g.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${E.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${g.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${g.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${E.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[o]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${g.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${k.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${k.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${k.getByIndices("scale_indices")};
        ${b?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${b.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${b.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Fr(u)}(quantized_data - zero_point) * scale;
        ${g.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((_,f)=>f!==1).map(_=>_.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(_,f)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:d}},ef=(e,r)=>{let t=e.inputs;Ym(t,r),e.compute(Zm(e.inputs,r))},tf=e=>zt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),rf,sf,nf,of,Yv=Re(()=>{ft(),yt(),ar(),xt(),rf=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},sf=(e,r)=>{let t=e[0].dims,s=e[0].dataType,n=t.length,o=e[1].dims,i=e[1].dataType,a=ge.normalizeAxis(r.axis,n),l=t[a],u=o.slice(0),p=ge.size(u),c=Ee("input",s,n),d=Ee("indicesInput",i,o.length),_=rt("output",s,u.length),f=[{type:12,data:p},{type:6,data:l},{type:12,data:a}];return f.push(...lt(t,o,u)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:f}),getShaderSource:E=>`
      ${E.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,d,_)}
      ${E.mainStart()}
      ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${_.offsetToIndices("global_idx")};

      var idx = ${d.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${c.type.indices}(outputIndices);
      ${c.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${c.getByIndices("inputIndices")};

      ${_.setByOffset("global_idx","value")};
  }`}},nf=e=>zt({axis:e.axis}),of=(e,r)=>{let t=e.inputs;rf(t),e.compute(sf(e.inputs,r))}}),af,lf,cf,uf,Zv=Re(()=>{ft(),yt(),xt(),af=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},lf=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[n,o,i]=wd.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),a=[n,o];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,u=Math.ceil(o/l),p=Math.ceil(n/l),c=!0,d=ge.size(a),_=[{type:12,data:c?u:d},{type:12,data:n},{type:12,data:o},{type:12,data:i},{type:1,data:r.alpha},{type:1,data:r.beta}],f=["type","type"];e.length===3&&(_.push(...lt(e[2].dims)),f.push("rank")),_.push(...lt(a));let E=b=>{let g="";r.transA&&r.transB?g="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?g="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?g="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(g="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let C=r.alpha===1?"":"value *= uniforms.alpha;",x=Ee("a",e[0].dataType,e[0].dims),v=Ee("b",e[1].dataType,e[1].dims),w=x.type.value,y=null,S=[x,v];e.length===3&&(y=Ee("c",e[2].dataType,e[2].dims.length),S.push(y));let O=rt("output",e[0].dataType,a.length);S.push(O);let R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${b.registerUniforms(R).declareVariables(...S)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${w}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${g}
    }

    ${C}
    ${y!=null?`let cOffset = ${y.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${w}(uniforms.beta) * ${y.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},k=b=>{let g=Ee("a",e[0].dataType,e[0].dims),C=Ee("b",e[1].dataType,e[1].dims),x=null,v=[g,C];e.length===3&&(x=Ee("c",e[2].dataType,e[2].dims.length),v.push(x));let w=rt("output",e[0].dataType,a.length);v.push(w);let y=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],S="",O="";r.transA&&r.transB?(O=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,S="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(O=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,S="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(O=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,S="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(O=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${C.type.value}(0);
      }
      `,S="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let R=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${b.registerUniforms(y).declareVariables(...v)}
  var<workgroup> tile_a: array<array<${g.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${C.type.storage}, ${l}>, ${l}>;
  ${b.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${w.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${O}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${S}
      }
      workgroupBarrier();
    }

    ${R}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",w)}; value += ${w.type.value}(uniforms.beta) * ${x.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return c?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:u*p},programUniforms:_}),getShaderSource:k}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:_}),getShaderSource:E}},cf=e=>{let r=e.transA,t=e.transB,s=e.alpha,n=e.beta;return{transA:r,transB:t,alpha:s,beta:n,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},uf=(e,r)=>{af(e.inputs),e.compute(lf(e.inputs,r))}}),Es,Os,on,an,df,pf,hf,mf,ff,_f,gf,wf,Mf,bf,ex=Re(()=>{ft(),yt(),ar(),xt(),[Es,Os,on,an]=[0,1,2,3],df=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},pf=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,hf=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,mf=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,ff=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,_f=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${Es}] = batch;
     indices[${Os}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${on}] = u32(r);
            indices[${an}] = u32(c);
          } else {
            return ${r}(0);
          }
        `;case"border":return`
          indices[${on}] = u32(clamp(r, 0, H - 1));
          indices[${an}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${on}] = gs_reflect(r, border[1], border[3]);
          indices[${an}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,gf=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Es}], indices[${Os}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Es}], indices[${Os}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Es}], indices[${Os}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Es}], indices[${Os}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Es}], indices[${Os}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Es}], indices[${Os}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,wf=(e,r)=>{let t=Ee("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],n=Ee("grid",e[1].dataType,s.length,2),o=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(o=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Es,Os,on,an]=[0,3,1,2]);let i=rt("output",e[0].dataType,o.length),a=t.type.value,l=ge.size(o),u=[{type:12,data:l},...lt(e[0].dims,s,o)],p=c=>`
  ${c.registerUniform("output_size","u32").declareVariables(t,n,i)}
  ${pf}
  ${hf(a)}
  ${mf(r)}
  ${ff(r)}
  ${_f(t,a,r)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${on}]);
      let W_in = i32(uniforms.x_shape[${an}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${i.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Es}], indices[${on}], indices[${an}]);
      let nxy = ${n.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${gf(i,a,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:c=>{let d=ge.size(o);return{outputs:[{dims:o,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:u}},getShaderSource:p}},Mf=(e,r)=>{df(e.inputs),e.compute(wf(e.inputs,r))},bf=e=>zt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Rr,yf,vf,$l,xf,Mo,Tf,Ef=Re(()=>{ft(),yt(),ar(),Qa(),il(),xt(),Ns(),Rr=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,yf=(e,r)=>{let t=e[0],s=Rr(e,1),n=Rr(e,2),o=Rr(e,3),i=Rr(e,4),a=Rr(e,5),l=Rr(e,6),u=Rr(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],c=t.dims[1],d=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],_=c,f=0,E=0,k=Math.floor(d/r.numHeads);if(l&&u&&ge.size(l.dims)&&ge.size(u.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==r.numHeads||l.dims[3]!==k)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(u.dims[0]!==p||u.dims[1]!==r.numHeads||u.dims[3]!==k)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==u.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(u.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],E=l.dims[2]}else if(l&&ge.size(l.dims)||u&&ge.size(u.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let b;if(s&&ge.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');b=2,_=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==k)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');b=5,_=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==k)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');b=0,_=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');b=3}if(o&&ge.size(o.dims)>0){if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let g=f+_,C=0;if(i&&ge.size(i.dims)>0){C=8;let y=i.dims;throw y.length===1?y[0]===p?C=1:y[0]===3*p+2&&(C=3):y.length===2&&y[0]===p&&y[1]===g&&(C=5),C===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let x=!1,v=d;if(n&&ge.size(n.dims)>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(_!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=n.dims[2]}else{if(_!==n.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=n.dims[1]*n.dims[3],x=!0}}let w=!1;if(i&&ge.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(a&&ge.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==p||a.dims[1]!==r.numHeads||a.dims[2]!==c||a.dims[3]!==g)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:c,pastSequenceLength:f,kvSequenceLength:_,totalSequenceLength:g,maxSequenceLength:E,inputHiddenSize:0,hiddenSize:d,vHiddenSize:v,headSize:k,vHeadSize:Math.floor(v/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:C,scale:r.scale,broadcastResPosBias:w,passPastInKv:x,qkvFormat:b}},vf=e=>zt({...e}),$l=zt({perm:[0,2,1,3]}),xf=(e,r,t,s,n,o,i)=>{let a=[s,n,o],l=ge.size(a),u=[{type:12,data:l},{type:12,data:i},{type:12,data:o}],p=c=>{let d=rt("qkv_with_bias",r.dataType,a),_=Ee("qkv",r.dataType,a),f=Ee("bias",t.dataType,a),E=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${c.registerUniforms(E).declareVariables(_,f,d)}
  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:p},{inputs:[r,t],outputs:[-1]})[0]},Mo=(e,r,t,s,n,o,i,a)=>{let l=o;if(i&&ge.size(i.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=xf(e,o,i,r,s,t*n,a),l=l.reshape([r,s,t,n]),t===1||s===1?l:e.compute(Kr(l,$l.perm),{inputs:[l],outputs:[-1]})[0]}else return o.dims.length===3&&(l=o.reshape([r,s,t,n])),t===1||s===1?l:e.compute(Kr(l,$l.perm),{inputs:[l],outputs:[-1]})[0]},Tf=(e,r)=>{let t=yf(e.inputs,r),s=e.inputs[0],n=Rr(e.inputs,1),o=Rr(e.inputs,2),i=Rr(e.inputs,3),a=Rr(e.inputs,4),l=Rr(e.inputs,5),u=Rr(e.inputs,6),p=Rr(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if(n?.dims.length===5)throw new Error("Packed KV is not implemented");let c=n&&o&&n.dims.length===4&&o.dims.length===4,d=Mo(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,i,0);if(c)return mo(e,d,n,o,a,void 0,u,p,l,t);if(!n||!o)throw new Error("key and value must be provided");let _=Mo(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,n,i,t.hiddenSize),f=Mo(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,o,i,2*t.hiddenSize);mo(e,d,_,f,a,void 0,u,p,l,t)}}),Pf,Cf,Sf,$f,Il,If,kf,Af=Re(()=>{ft(),yt(),ar(),xt(),Pf=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Cf=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>t.push(Number(n))),s=t.length),zt({numOutputs:s,axis:r.axis,splitSizes:t})},Sf=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${ot("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,$f=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let n=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(n):s===0?t.push(`if (output_number == ${s}u) { ${n} }`):s===r-1?t.push(`else { ${n} }`):t.push(`else if (output_number == ${s}) { ${n} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},Il=(e,r)=>{let t=e[0].dims,s=ge.size(t),n=e[0].dataType,o=ge.normalizeAxis(r.axis,t.length),i=new Array(r.numOutputs),a=Ee("input",n,t.length),l=new Array(r.numOutputs),u=[],p=[],c=0,d=[{type:12,data:s}];for(let f=0;f<r.numOutputs;f++){c+=r.splitSizes[f],l[f]=c;let E=t.slice();E[o]=r.splitSizes[f],p.push(E),i[f]=rt(`output${f}`,n,E.length),u.push({dims:p[f],dataType:e[0].dataType})}d.push({type:12,data:l},...lt(t,...p));let _=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...i)}
  ${Sf(l.length)}
  ${$f(i)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",o)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${ot("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",o,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d})}},If=(e,r)=>{Pf(e.inputs);let t=e.inputs.length===1?r:Cf(e.inputs,r);e.compute(Il(e.inputs,t),{inputs:[0]})},kf=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return zt({axis:r,numOutputs:s,splitSizes:t})}}),Ff,wi,Of,Df=Re(()=>{ft(),yt(),ar(),xt(),Ff=(e,r)=>{let[t,s,n,o]=e,{numHeads:i,rotaryEmbeddingDim:a}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!ge.areEqual(s.dims,[])&&!ge.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(!ge.areEqual(n.dims,o.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],u=t.dims[t.dims.length-2],p=n.dims[0],c=ge.sizeFromDimension(t.dims,1)/u,d=a===0?n.dims[1]*2:c/i;if(a>d)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(u!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(d/2!==n.dims[1]&&a/2!==n.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(u>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},wi=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:n,scale:o}=r,i=e[0].dims[0],a=ge.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],u=a/l,p=e[2].dims[1],c=n===0?p*2:u/s,d=new Array(i,l,u/c,c-p),_=ge.computeStrides(d),f=[{type:1,data:o},{type:12,data:d},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[a,u,c,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,c,l*c,1]}):[],...lt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],E=k=>{let b=Ee("input",e[0].dataType,e[0].dims.length),g=Ee("position_ids",e[1].dataType,e[1].dims.length),C=Ee("cos_cache",e[2].dataType,e[2].dims.length),x=Ee("sin_cache",e[3].dataType,e[3].dims.length),v=rt("output",e[0].dataType,e[0].dims.length);return k.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:d.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`
        ${k.declareVariables(b,g,C,x,v)}

        ${k.mainStart(Dn)}
          let half_rotary_emb_dim = uniforms.${C.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${k.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${g.broadcastedIndicesToOffset("bsnh.xy",rt("",g.type.tensor,2))};
            let position_id =
                u32(${g.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${b.getByOffset("i")} * ${C.get("position_id","bsnh[3]")} -
                ${b.getByOffset("j")} * ${x.get("position_id","bsnh[3]")};
            ${v.setByOffset("i","re")}
            let im = ${b.getByOffset("i")} * ${x.get("position_id","bsnh[3]")} +
                ${b.getByOffset("j")} * ${C.get("position_id","bsnh[3]")};
            ${v.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${v.setByOffset("k",b.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:zt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:E,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ge.size(d)/Dn)},programUniforms:f})}},Of=(e,r)=>{Ff(e.inputs,r),e.compute(wi(e.inputs,r))}}),Lf,zf,kl,Bf,Rf,tx=Re(()=>{ar(),ft(),il(),Ef(),Af(),Ns(),Df(),xt(),Lf=(e,r)=>{if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],n=e[2],o=e[3],i=e[4];if(r.doRotary!==0&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],u=t.dims[1],p=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],c=u,d=0,_=!s||s.dims.length===0,f=Math.floor(_?p/(r.numHeads+2*r.kvNumHeads):p/r.numHeads);_&&(p=f*r.numHeads);let E=o&&o.dims.length!==0,k=i&&i.dims.length!==0;if(E&&o.dims.length===4&&o.dims[0]===l&&o.dims[1]!==r.kvNumHeads&&o.dims[2]===r.kvNumHeads&&o.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(E&&k){if(o.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(i.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');d=o.dims[2]}else if(E||k)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let b=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');c=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');c=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');c=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');b=3}let g=0,C=!1,x=r.kvNumHeads?f*r.kvNumHeads:p;if(n&&n.dims.length>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(c!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');x=n.dims[2]}else{if(c!==n.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');x=n.dims[1]*n.dims[3],C=!0}}let v=e.length>4?e[5]:void 0;if(v&&v.dims.length!==1&&v.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:u,pastSequenceLength:d,kvSequenceLength:c,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:x,headSize:f,vHeadSize:Math.floor(x/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:g,scale:r.scale,broadcastResPosBias:!1,passPastInKv:C,qkvFormat:b}},zf=zt({perm:[0,2,1,3]}),kl=(e,r,t)=>{let s=r,n=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,n,t.headSize]),s=e.compute(Kr(s,zf.perm),{inputs:[s],outputs:[-1]})[0]),s},Bf=(e,r,t,s)=>{let n=7,o=["type","type"],i=[e*r],a=e*r,l=[{type:12,data:a},{type:12,data:r},{type:12,data:e}],u=p=>{let c=Ee("seq_lens",t.dataType,t.dims),d=Ee("total_seq_lens",s.dataType,s.dims),_=rt("pos_ids",n,i),f=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${p.registerUniforms(f).declareVariables(c,d,_)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${d.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${c.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${_.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${r}`,inputDependencies:o},getRunData:()=>({outputs:[{dims:i,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:u}},Rf=(e,r)=>{let t=Lf(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],n=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,o=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,u=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,c=zt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[d,_,f]=!n&&!o?e.compute(Il([s],c),{inputs:[s],outputs:[-1,-1,-1]}):[s,n,o],E,k;if(r.doRotary){let x=e.compute(Bf(t.batchSize,t.sequenceLength,l,u),{inputs:[l,u],outputs:[-1]})[0],v=e.inputs[7],w=e.inputs[8],y=zt({interleaved:r.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),S=[d,x,v,w],O=[-1];E=e.compute(wi(S,y),{inputs:S,outputs:O})[0],S.splice(0,1,_);let R=zt({interleaved:r.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});k=e.compute(wi(S,R),{inputs:S,outputs:O})[0]}let b=Mo(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r.doRotary?E:d,void 0,0),g=kl(e,r.doRotary?k:_,t),C=kl(e,f,t);mo(e,b,g,C,void 0,void 0,i,a,void 0,t,l,u)}}),Al,jf,Nf,Vf,rx=Re(()=>{ft(),yt(),Ns(),xt(),Al=(e,r,t,s,n,o,i,a)=>{let l=sr(o),u=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,c=n*i,d=64;c===1&&(d=256);let _=[n,i,o/l],f=[n,i,2],E=["rank","type","type"],k=[];k.push(...lt(_,f));let b=g=>{let C=Ee("x",r.dataType,3,l),x=Ee("scale",t.dataType,t.dims),v=Ee("bias",s.dataType,s.dims),w=rt("output",1,3,2),y=[C,x,v,w];return`
  var<workgroup> workgroup_shared : array<${p}, ${d}>;
  const workgroup_size = ${d}u;
  ${g.declareVariables(...y)}
  ${g.mainStart(d)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${u}(0);
    var squared_sum = ${u}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${u}(${C.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${js("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${js("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${d}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:c},programUniforms:k}),getShaderSource:b},{inputs:[r,t,s],outputs:[-1]})[0]},jf=(e,r,t)=>{let s=r[0].dims,n=s,o=2,i=s[0],a=s[1],l=ge.sizeFromDimension(s,o),u=sr(l),p=ge.size(n)/u,c=Al(e,r[0],r[1],r[2],i,l,a,t.epsilon),d=[i,a,l/u],_=[i,a],f=["type","none"],E=k=>{let b=Ee("x",r[0].dataType,d.length,u),g=Ee("scale_shift",1,_.length,2),C=rt("output",r[0].dataType,d.length,u),x=[b,g,C];return`
  ${k.registerUniform("output_size","u32").declareVariables(...x)}
  ${k.mainStart()}
  ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${C.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${g.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${b.getByOffset("global_idx")} * ${C.type.value}(scale_shift.x) + ${C.type.value}(scale_shift.y);
      ${C.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${u}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...lt(d,_,d)]}),getShaderSource:E},{inputs:[r[0],c]})},Nf=(e,r,t)=>{let s=r[0].dims,n=s,o=s[0],i=s[s.length-1],a=ge.sizeFromDimension(s,1)/i,l=sr(i),u=ge.size(n)/l,p=[{type:12,data:a},{type:12,data:Math.floor(i/l)}],c=["type","type"],d=!1,_=[0,s.length-1];for(let b=0;b<s.length-2;b++)d=d||s[b+1]!==1,_.push(b+1);d=d&&s[s.length-1]!==1;let f=d?e.compute(Kr(e.inputs[0],_),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(b,g)=>s[_[g]])),E=Al(e,f,r[1],r[2],o,a,i,t.epsilon),k=b=>{let g=yr(r[0].dataType),C=l===1?"vec2f":`mat${l}x2f`,x=y=>{let S=y===0?"x":"y",O=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${g}(${O}(scale.${S}))`;case 2:return`vec2<${g}>(${O}(scale[0].${S}, scale[1].${S}))`;case 4:return`vec4<${g}>(${O}(scale[0].${S}, scale[1].${S}, scale[2].${S}, scale[3].${S}))`;default:throw new Error(`Not supported compoents ${l}`)}},v=Ee("input",r[0].dataType,r[0].dims,l),w=rt("output",r[0].dataType,n,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${v.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${C}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${w.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${b.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${x(0)}, ${x(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:p}),getShaderSource:k},{inputs:[r[0],E]})},Vf=(e,r)=>{r.format==="NHWC"?Nf(e,e.inputs,r):jf(e,e.inputs,r)}}),Uf,Wf,Gf,sx=Re(()=>{ft(),yt(),xt(),Uf=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Wf=(e,r,t)=>{let s=r.simplified,n=e[0].dims,o=e[1],i=!s&&e[2],a=n,l=ge.normalizeAxis(r.axis,n.length),u=ge.sizeToDimension(n,l),p=ge.sizeFromDimension(n,l),c=ge.size(o.dims),d=i?ge.size(i.dims):0;if(c!==p||i&&d!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${c} and bias size of ${d}`);let _=[];for(let v=0;v<n.length;++v)v<l?_.push(n[v]):_.push(1);let f=sr(p),E=["type","type"],k=[{type:12,data:u},{type:1,data:p},{type:12,data:Math.floor(p/f)},{type:1,data:r.epsilon}];i&&E.push("type");let b=t>1,g=t>2,C=v=>{let w=yr(e[0].dataType),y=[Ee("x",e[0].dataType,e[0].dims,f),Ee("scale",o.dataType,o.dims,f)];i&&y.push(Ee("bias",i.dataType,i.dims,f)),y.push(rt("output",e[0].dataType,a,f)),b&&y.push(rt("mean_data_output",1,_)),g&&y.push(rt("inv_std_output",1,_));let S=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${v.registerUniforms(S).declareVariables(...y)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Za("f32",f)};
    var mean_square_vector = ${Za("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Ln(w,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${js("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${js("mean_square_vector",f)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Ln(w,f,"x[j + offset]")};
      let f32scale = ${Ln(w,f,"scale[j]")};
      output[j + offset] = ${y[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${Ln(w,f,"bias[j]")}`:""}
      );
    }

    ${b?"mean_data_output[global_idx] = mean":""};
    ${g?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},x=[{dims:a,dataType:e[0].dataType}];return b&&x.push({dims:_,dataType:1}),g&&x.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${s}`,inputDependencies:E},getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:k}),getShaderSource:C}},Gf=(e,r)=>{Uf(e.inputs),e.compute(Wf(e.inputs,r,e.outputCount))}}),Kf,Hf,nx=Re(()=>{yt(),ml(),wl(),Kf=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Hf=e=>{Kf(e.inputs);let r=On.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(hl(e.inputs,{activation:""},r));else{let n=r[r.length-2],o=ge.size(e.inputs[0].dims.slice(0,-2)),i=ge.size(e.inputs[1].dims.slice(0,-2));if(o!==1&&n===1&&i===1){let a=e.inputs[0].reshape([1,o,s]),l=e.inputs[1].reshape([1,s,t]),u=[1,o,t],p=[a,l];e.compute(mi(p,{activation:""},r,u),{inputs:p})}else e.compute(mi(e.inputs,{activation:""},r))}}}),qf,Qf,Xf,Jf,Yf,ox=Re(()=>{ft(),yt(),ar(),xt(),qf=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let n=Math.floor((r.k+r.blockSize-1)/r.blockSize),o=r.blockSize/8*r.bits,i=e[1];if(!ge.areEqual(i.dims,[r.n,n,o]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(ge.size(a)!==r.n*n)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,u=r.bits>4?r.n*n:r.n*Math.floor((n+1)/2);if(ge.size(l)!==u)throw new Error("zeroPoints input size error.")}},Qf=(e,r)=>{let t=e[0].dims,s=t.length,n=t[s-2],o=r.k,i=r.n,a=t.slice(0,s-2),l=ge.size(a),u=e[1].dims[2]/4,p=e[0].dataType,c=sr(r.k),d=sr(u),_=sr(i),f=a.concat([n,i]),E=n>1&&i/_%2===0?2:1,k=ge.size(f)/_/E,b=64,g=[],C=[l,n,o/c],x=ge.convertShape(e[1].dims).slice();x.splice(-1,1,u/d),g.push(...lt(C)),g.push(...lt(x)),g.push(...lt(e[2].dims)),e.length===4&&g.push(...lt(ge.convertShape(e[3].dims)));let v=[l,n,i/_];g.push(...lt(v));let w=y=>{let S=C.length,O=Ee("a",e[0].dataType,S,c),R=Ee("b",12,x.length,d),H=Ee("scales",e[2].dataType,e[2].dims.length),Q=[O,R,H],L=e.length===4?Ee("zero_points",12,e[3].dims.length):void 0;L&&Q.push(L);let Y=v.length,q=rt("output",e[0].dataType,Y,_),X=yr(e[0].dataType),re=(()=>{switch(c){case 1:return`array<${X}, 8>`;case 2:return`mat4x2<${X}>`;case 4:return`mat2x4<${X}>`;default:throw new Error(`${c}-component is not supported.`)}})(),te=()=>{let N=`
          // reuse a data
            var input_offset = ${O.indicesToOffset(`${O.type.indices}(batch, row, word_offset)`)};
            var a_data: ${re};
            for (var j: u32 = 0; j < ${8/c}; j++) {
              a_data[j] = ${O.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let A=0;A<_*E;A++)N+=`
            b_value = ${d===1?`b${A}_data`:`b${A}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${re}(${Array.from({length:4},(K,j)=>`${X}(b_value_lower[${j}]), ${X}(b_value_upper[${j}])`).join(", ")});
            b_dequantized_values = ${c===1?`${re}(${Array.from({length:8},(K,j)=>`(b_quantized_values[${j}] - ${L?`zero_point${A}`:"zero_point"}) * scale${A}`).join(", ")});`:`(b_quantized_values - ${re}(${Array(8).fill(`${L?`zero_point${A}`:"zero_point"}`).join(",")})) * scale${A};`};
            workgroup_shared[local_id.x * ${E} + ${Math.floor(A/_)}]${_>1?`[${A%_}]`:""} += ${Array.from({length:8/c},(K,j)=>`${c===1?`a_data[${j}] * b_dequantized_values[${j}]`:`dot(a_data[${j}], b_dequantized_values[${j}])`}`).join(" + ")};
          `;return N},he=()=>{let N=`
            var col_index = col * ${_};
            ${L?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${X}(8);`}
            `;for(let A=0;A<_*E;A++)N+=`
            let scale${A} = ${H.getByOffset("col_index * nBlocksPerCol + block")};
            ${L?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${L.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${A} = ${X}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return N},ue=()=>{let N=`col_index = col * ${_};`;for(let A=0;A<_*E;A++)N+=`
            let b${A}_data = ${R.getByIndices(`${R.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return N+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${re};
            var b_dequantized_values: ${re};`,N};return`
        var<workgroup> workgroup_shared: array<${q.type.value}, ${E*b}>;
        ${y.declareVariables(...Q,q)}
        ${y.mainStart([b,1,1])}
          let output_indices = ${q.offsetToIndices(`(global_idx / ${b}) * ${E}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${b}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/c};
            ${he()}
            for (var word: u32 = 0; word < ${u}; word += ${d}) {
              ${ue()}
              for (var i: u32 = 0; i < ${d}; i++) {
                ${te()}
                word_offset += ${8/c};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${E}) {
            var output_value: ${q.type.value} = ${q.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${b}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${E};
            }
            ${q.setByIndices(`${q.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${c};${d};${_};${E};${b}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:p}],dispatchGroup:{x:k},programUniforms:g}),getShaderSource:w}},Xf=(e,r)=>{let t=e[0].dims,s=t.length,n=t[s-2],o=r.k,i=r.n,a=t.slice(0,s-2),l=ge.size(a),u=e[1].dims[2]/4,p=e[0].dataType,c=sr(r.k),d=sr(u),_=a.concat([n,i]),f=128,E=i%8===0?8:i%4===0?4:1,k=f/E,b=k*d*8,g=b/c,C=b/r.blockSize,x=ge.size(_)/E,v=[],w=[l,n,o/c],y=ge.convertShape(e[1].dims).slice();y.splice(-1,1,u/d),v.push(...lt(w)),v.push(...lt(y)),v.push(...lt(e[2].dims)),e.length===4&&v.push(...lt(ge.convertShape(e[3].dims)));let S=[l,n,i];v.push(...lt(S));let O=R=>{let H=w.length,Q=Ee("a",e[0].dataType,H,c),L=Ee("b",12,y.length,d),Y=Ee("scales",e[2].dataType,e[2].dims.length),q=[Q,L,Y],X=e.length===4?Ee("zero_points",12,e[3].dims.length):void 0;X&&q.push(X);let re=S.length,te=rt("output",e[0].dataType,re),he=yr(e[0].dataType),ue=()=>{switch(c){case 1:return`
          let a_data0 = vec4<${he}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${he}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${he}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${he}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${c}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Q.type.value}, ${g}>;
        var<workgroup> inter_results: array<array<${te.type.value}, ${k}>, ${E}>;
        ${R.declareVariables(...q,te)}
        ${R.mainStart([k,E,1])}
          let output_indices = ${te.offsetToIndices(`workgroup_index * ${E}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${C} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${g};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${g}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Q.getByIndices(`${Q.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Q.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${C} + local_id.x;
            ${X?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${X.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${he}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${he}(8);`}
            let scale = ${Y.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${L.getByIndices(`${L.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/c};
            for (var i: u32 = 0; i < ${d}; i++) {
              ${ue()}
              let b_value = ${d===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${he}>(${Array.from({length:4},(N,A)=>`${he}(b_value_lower[${A}]), ${he}(b_value_upper[${A}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${he}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(N,A)=>`${`dot(a_data${A}, b_dequantized_values[${A}])`}`).join(" + ")};
              word_offset += ${8/c};
            }
            workgroupBarrier();
          }

          if (local_idx < ${E}) {
            var output_value: ${te.type.value} = ${te.type.value}(0);
            for (var b = 0u; b < ${k}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${te.setByIndices(`${te.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${c};${d};${k};${E}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:p}],dispatchGroup:{x},programUniforms:v}),getShaderSource:O}},Jf=(e,r)=>{qf(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Xf(e.inputs,r)):e.compute(Qf(e.inputs,r))},Yf=e=>zt(e)}),Zf,e_,t_,r_,s_,n_,o_,i_,a_,ix=Re(()=>{ft(),yt(),xt(),Zf=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},e_=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
            k = i32(${e.indicesGet("indices",n)}) - ${ot("uniforms.pads",n,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${ot("uniforms.x_shape",n,r)})) {
              break;
            }
            offset += k * i32(${ot("uniforms.x_strides",n,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},t_=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${ot("uniforms.pads",n,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${ot("uniforms.x_shape",n,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${ot("uniforms.x_shape",n,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${ot("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},r_=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${ot("uniforms.pads",n,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${ot("uniforms.x_shape",n,r)})) {
                  k = i32(${ot("uniforms.x_shape",n,r)}) - 1;
                }
                offset += k * i32(${ot("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},s_=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${ot("uniforms.pads",n,t)};
                if (k < 0)  {
                  k += i32(${ot("uniforms.x_shape",n,r)}]);
                }
                if (k >= i32(${ot("uniforms.x_shape",n,r)})) {
                  k -= i32(${ot("uniforms.x_shape",n,r)});
                }
                offset += k * i32(${ot("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},n_=(e,r,t)=>{switch(t.mode){case 0:return e_(e,r,t.pads.length);case 1:return t_(e,r,t.pads.length);case 2:return r_(e,r,t.pads.length);case 3:return s_(e,r,t.pads.length);default:throw new Error("Invalid mode")}},o_=(e,r)=>{let t=ge.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,n=ge.size(t),o=[{type:12,data:n},{type:6,data:r.pads}],i=e.length>=3&&e[2].data;r.mode===0&&o.push({type:i?e[2].dataType:1,data:r.value}),o.push(...lt(e[0].dims,t));let a=["rank"],l=u=>{let p=rt("output",e[0].dataType,t.length),c=Ee("x",e[0].dataType,s.length),d=c.type.value,_=n_(p,s.length,r),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&f.push({name:"constant_value",type:i?d:"f32"}),`
            ${u.registerUniforms(f).declareVariables(c,p)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${d}(0);
            ${_}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${i}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ge.size(t)/64)},programUniforms:o}),getShaderSource:l}},i_=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,n=e[0].dims.length,o=new Int32Array(2*n).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)o[Number(a[l])]=Number(t[l]),o[Number(a[l])+n]=Number(t[l+a.length])}else t.forEach((a,l)=>o[Number(l)]=Number(a));let i=[];return o.forEach(a=>i.push(a)),{mode:r.mode,value:s,pads:i}}else return r},a_=(e,r)=>{Zf(e.inputs);let t=i_(e.inputs,r);e.compute(o_(e.inputs,t),{inputs:[0]})}}),bo,Fl,Ol,Dl,Ll,l_,c_,zl,Bl,u_,d_,Rl,p_,h_,jl,m_,f_,__,g_,ax=Re(()=>{ds(),ft(),yt(),xt(),bo=e=>{if(Kt.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Fl=(e,r,t)=>{let s=r.format==="NHWC",n=e.dims.slice();s&&n.splice(1,0,n.pop());let o=Object.hasOwnProperty.call(r,"dilations"),i=r.kernelShape.slice(),a=r.strides.slice(),l=o?r.dilations.slice():[],u=r.pads.slice();ii.adjustPoolAttributes(t,n,i,a,l,u);let p=ii.computePoolOutputShape(t,n,a,l,i,u,r.autoPad),c=Object.assign({},r);o?Object.assign(c,{kernelShape:i,strides:a,pads:u,dilations:l,cacheKey:r.cacheKey}):Object.assign(c,{kernelShape:i,strides:a,pads:u,cacheKey:r.cacheKey});let d=p.slice();return d.push(d.splice(1,1)[0]),[c,s?d:p]},Ol=(e,r)=>{let t=r.format==="NHWC",s=ge.size(e),n=ge.size(r.kernelShape),o=[{type:12,data:s},{type:12,data:n}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let a=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],u=r.pads[r.pads.length/2-1],p=r.pads[r.pads.length-1],c=!!(u+p);o.push({type:12,data:a},{type:12,data:l},{type:12,data:u},{type:12,data:p}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let d=!1;if(r.kernelShape.length===2){let _=r.kernelShape[r.kernelShape.length-2],f=r.strides[r.strides.length-2],E=r.pads[r.pads.length/2-2],k=r.pads[r.pads.length-2];d=!!(E+k),o.push({type:12,data:_},{type:12,data:f},{type:12,data:E},{type:12,data:k}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[o,i,!0,c,d]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=ge.computeStrides(r.kernelShape);o.push({type:12,data:a},{type:12,data:r.pads},{type:12,data:r.strides}),i.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((u,p)=>u+p);return[o,i,!!l,!1,!1]}},Dl=(e,r,t,s,n,o,i,a,l,u,p,c)=>{let d=n.format==="NHWC",_=r.type.value,f=rt("output",r.type.tensor,s);if(n.kernelShape.length<=2){let E="",k="",b="",g=t-(d?2:1);if(p?E=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${g}] < 0 || xIndices[${g}]
                      >= uniforms.x_shape[${g}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${o}
                }`:E=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${o}
                }`,n.kernelShape.length===2){let C=t-(d?3:2);c?k=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${C}] < 0 || xIndices[${C}] >= uniforms.x_shape[${C}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:k=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${C}] = indices[${C}] * uniforms.sh - uniforms.phStart + j;
                `,b=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${_}(${a});
              var pad = 0;
              ${k}
              ${E}
              ${b}
              ${i}

              output[global_idx] = value;
            }`}else{if(d)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let E=n.kernelShape.length,k=n.pads.length,b="";return u?b=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${o}
              }`:b=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${o}
            `,`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${E}>;

              var value = ${_}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${E-1}u; j++) {
                  offsets[j] = offset / ${ot("uniforms.kernelStrides","j",E)};
                  offset -= offsets[j] * ${ot("uniforms.kernelStrides","j",E)};
                }
                offsets[${E-1}] = offset;

                isPad = false;
                for (var j = ${t-E}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${ot("uniforms.strides",`j - ${t-E}u`,E)}
                    + offsets[j - ${t-E}u] - ${ot("uniforms.pads","j - 2u",k)};
                  ${b}
              }
              ${i}

              output[global_idx] = value;
            }`}},Ll=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,l_=e=>`${Ll(e)};${e.countIncludePad}`,c_=e=>`${Ll(e)};${e.storageOrder};${e.dilations}`,zl=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Bl=(e,r,t,s)=>{let[n,o]=Fl(r,s,t),i=Ee("x",r.dataType,r.dims.length),a=i.type.value,l="value += x_val;",u="";n.countIncludePad?u+=`value /= ${a}(uniforms.kernelSize);`:u+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[p,c,d,_,f]=Ol(o,n);p.push(...lt(r.dims,o));let E=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${d};${_};${f}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:o,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ge.size(o)/64)},programUniforms:p}),getShaderSource:k=>Dl(k,i,r.dims.length,o.length,n,l,u,0,c,d,_,f)}},u_=e=>{let r=e.count_include_pad!==0,t=zl(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:l_(s)}},d_=(e,r)=>{bo(e.inputs),e.compute(Bl("AveragePool",e.inputs[0],!1,r))},Rl={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},p_=e=>{let r=e.format;return{format:r,...Rl,cacheKey:r}},h_=(e,r)=>{bo(e.inputs),e.compute(Bl("GlobalAveragePool",e.inputs[0],!0,r))},jl=(e,r,t,s)=>{let[n,o]=Fl(r,s,t),i=`
      value = max(x_val, value);
    `,a="",l=Ee("x",r.dataType,r.dims.length),u=["rank"],[p,c,d,_,f]=Ol(o,n);return p.push(...lt(r.dims,o)),{name:e,shaderCache:{hint:`${s.cacheKey};${d};${_};${f}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:o,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ge.size(o)/64)},programUniforms:p}),getShaderSource:E=>Dl(E,l,r.dims.length,o.length,n,i,a,r.dataType===10?-65504:-1e5,c,d,_,f)}},m_=(e,r)=>{bo(e.inputs),e.compute(jl("MaxPool",e.inputs[0],!1,r))},f_=e=>{let r=e.storage_order,t=e.dilations,s=zl(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:r,dilations:t,...s,cacheKey:""};return{...n,cacheKey:c_(n)}},__=e=>{let r=e.format;return{format:r,...Rl,cacheKey:r}},g_=(e,r)=>{bo(e.inputs),e.compute(jl("GlobalMaxPool",e.inputs[0],!0,r))}}),w_,M_,b_,y_,lx=Re(()=>{ft(),yt(),ar(),xt(),w_=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((n,o)=>o===r.axis||n===e[0].dims[o]).reduce((n,o)=>n&&o,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},M_=(e,r)=>{let t=ge.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,n=s===3,o=e[0].dims,i=e[1].dataType,a=ge.size(o),l=s===3||s===2,u=l?[Math.ceil(ge.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,c=e.length>2?e[2]:void 0,d=c?l?[Math.ceil(ge.size(c.dims)/4)]:c.dims:void 0,_=p.length===0||p.length===1&&p[0]===1,f=_===!1&&p.length===1,E=sr(a),k=_&&(!l||E===4),b=k?E:1,g=k&&!l?E:1,C=Ee("input",l?12:s,u.length,g),x=Ee("scale",i,p.length),v=c?Ee("zero_point",l?12:s,d.length):void 0,w=rt("output",i,o.length,b),y=[C,x];v&&y.push(v);let S=[u,p];c&&S.push(d);let O=[{type:12,data:a/b},{type:12,data:t},{type:12,data:r.blockSize},...lt(...S,o)],R=H=>{let Q=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${H.registerUniforms(Q).declareVariables(...y,w)}
      ${H.mainStart()}
          ${H.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${w.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${C.getByOffset("global_idx / 4")};
            let x_vec = ${n?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${b===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${C.getByOffset("global_idx")};`};

          // Set scale input
          ${_?`let scale_value= ${x.getByOffset("0")}`:f?`
            let scale_index = ${w.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${x.getByOffset("scale_index")};`:`
            var scale_indices: ${x.type.indices} = output_indices;
            let index = ${x.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${x.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${x.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${v?_?l?`
                let zero_point_input = ${v.getByOffset("0")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${v.getByOffset("0")}`:f?l?`
                let zero_point_index = ${w.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${v.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${w.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${v.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${x.indicesToOffset("scale_indices")};
                let zero_point_input = ${v.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${v.getByIndices("scale_indices")};`:`let zero_point_value = ${l?n?"i32":"u32":C.type.value}(0);`};
      // Compute and write output
      ${w.setByOffset("global_idx",`${w.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getShaderSource:R,getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(a/b/64),y:1,z:1},programUniforms:O})}},b_=(e,r)=>{w_(e.inputs,r),e.compute(M_(e.inputs,r))},y_=e=>zt({axis:e.axis,blockSize:e.blockSize})}),v_,x_,T_,cx=Re(()=>{ds(),ft(),xt(),v_=(e,r,t)=>{let s=e===r,n=e<r&&t<0,o=e>r&&t>0;if(s||n||o)throw new Error("Range these inputs' contents are invalid.")},x_=(e,r,t,s)=>{let n=Math.abs(Math.ceil((r-e)/t)),o=[n],i=n,a=[{type:12,data:i},{type:s,data:e},{type:s,data:t},...lt(o)],l=u=>{let p=rt("output",s,o.length),c=p.type.value,d=[{name:"outputSize",type:"u32"},{name:"start",type:c},{name:"delta",type:c}];return`
        ${u.registerUniforms(d).declareVariables(p)}
        ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${c}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:o,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a})}},T_=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),Kt.webgpu.validateInputContent&&v_(r,t,s),e.compute(x_(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),E_,Nl,Vl,P_,C_,S_,ux=Re(()=>{ft(),yt(),ar(),xt(),E_=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let n=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,o=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${n}bitcast<${s}>(oldValue) + (${t})${o}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${n}max(bitcast<f32>(oldValue), (${t}))${o}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${n}min(bitcast<${s}>(oldValue), (${t}))${o}`;case"mul":return`${n}(bitcast<${s}>(oldValue) * (${t}))${o}`;default:throw new Error(`Reduction ${e} is not supported.`)}},Nl=(e,r)=>`${e===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,Vl=(e,r,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${E_(e.reduction,"output[data_offset + i]","value",r)}
      }`,P_=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t,o=1,i=Math.ceil(ge.size(s)/o),a=s[s.length-1],l=ge.sizeFromDimension(t,a),u=ge.sizeFromDimension(s,0)/a,p=[{type:12,data:i},{type:12,data:a},{type:12,data:l},...lt(e[1].dims,e[2].dims,n)],c=d=>{let _=Ee("indices",e[1].dataType,e[1].dims.length),f=Ee("updates",e[2].dataType,e[2].dims.length,o),E=r.reduction!=="none"&&r.reduction!==""?Fd("output",e[0].dataType,n.length):rt("output",e[0].dataType,n.length,o);return`
      ${d.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(_,f,E)}
      ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    for (var i = 0; i < ${u}; i = i + 1) {
      for (var j = i + 1; j < ${u}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${u}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${Nl(t.length,!1)}
      }
      ${Vl(r,E.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${Nl(t.length,!0)}
  }
  ${Vl(r,E.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:p}),getShaderSource:c}},C_=e=>zt({reduction:e.reduction}),S_=(e,r)=>{e.compute(P_(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),$_,I_,k_,Ul,A_,F_,O_,D_,L_,z_,B_,R_,Wl,j_,N_,V_,U_,W_,G_,K_,dx=Re(()=>{ft(),yt(),ar(),xt(),$_=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},I_=(e,r,t)=>{r.every(n=>n>=0&&n<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((n,o)=>s[n]=e[o]),s},k_=(e,r,t,s,n,o)=>{let[i,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],u=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach(p=>o.push(p));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(p=>s.push(p)),s.length!==0&&s.length!==u&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");$_(s,r),r.axes.length>0&&I_(s,r.axes,u).forEach((p,c)=>s[c]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>n.push(Number(p))),n.length!==0&&n.length!==u&&t>=18&&n.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(n.length!==0&&n.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof n<"u"&&s.length>0&&n.length>u)throw new Error("Resize requires only of scales or sizes to be specified")},Ul=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,A_=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${Ul("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Ul("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",F_=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",O_=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),n=e.length===0?s:e.slice();return r.length>0?(r.forEach((o,i)=>{s[o]=n[i],s[i+t]=n[r.length+i]}),s):n},D_=(e,r,t,s)=>{let n=[];if(t.length>0)if(s.length>0){if(e.forEach(o=>n.push(o)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((o,i)=>n[o]=t[i])}else t.forEach(o=>n.push(o));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((o,i)=>Math.round(o*r[i]))}return n},L_=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(o=>r[o]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(o=>r[o]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let n=e.slice();return t.axes.length>0?(t.axes.forEach(o=>r[o]=s),t.axes.forEach(o=>n[o]=Math.round(e[o]*r[o]))):(r.fill(s,0,r.length),n.forEach((o,i)=>n[i]=Math.round(o*r[i]))),n},z_=(e,r,t,s,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${ot("uniforms.scales","i",s)};
        var roi_low = ${ot("uniforms.roi","i",n)};
        var roi_hi = ${ot("uniforms.roi",`i + ${r.length}`,n)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${ot("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${ot("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,B_=(e,r,t,s,n,o,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${ot("uniforms.scales","i",n)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${ot("uniforms.roi","i",o)};
          var roi_hi = ${ot("uniforms.roi",`i + ${t.length}`,o)};
          var input_shape_i = ${ot("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${ot("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,R_=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${ot("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,Wl=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",j_=(e,r,t,s,n)=>{let[o,i,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],u=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(row, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${Wl(e,l,o,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${u} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${u} = originalIndices[${i}];
      var col:${u} = originalIndices[${a}];
      ${s?`if (row < 0 || row > (${t[i]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${n};
      }`:""};
      row = max(0, min(row, ${t[i]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${o}])`:"0"};
      var x11: ${u} = getInputValue(batch, channel, row1, col1);
      var x12: ${u} = getInputValue(batch, channel, row1, col2);
      var x21: ${u} = getInputValue(batch, channel, row2, col1);
      var x22: ${u} = getInputValue(batch, channel, row2, col2);
      var dx1: ${u} = abs(row - ${u}(row1));
      var dx2: ${u} = abs(${u}(row2) - row);
      var dy1: ${u} = abs(col - ${u}(col1));
      var dy2: ${u} = abs(${u}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},N_=(e,r,t,s,n,o,i,a,l,u)=>{let p=t.length===2,[c,d]=p?[0,1]:[2,3],_=e.type.value,f=E=>{let k=E===c?"row":"col";return`
      fn ${k}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${_} {
        var output_index = ${r.indicesGet("output_indices",E)};
        var originalIdx: ${_} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[E]},
        ${s[E]}, ${t[E]}, ${o[E]}, ${o[E]} + ${t.length});
        var fractOriginalIdx: ${_} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[E]} - 1))) {
          return ${l};
        }
        var data: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${k}: ${_} = originalIdx + ${_}(i);
          if (${k} < 0 || ${k} >= ${t[E]}) {
            ${u?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${k} = max(0, min(${k}, ${t[E]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",E,`u32(${k})`)};
          data[i + 1] = ${E===c?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(c)};
    ${f(d)};
  fn getCubicInterpolationCoefs(s: ${_}) -> array<${_}, 4> {
    var absS = abs(s);
    var coeffs: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${_} = 1.0 - absS;
    var twoMinusAbsS: ${_} = 2.0 - absS;
    var onePlusAbsS: ${_} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${_}, 4>, coefs: array<${_}, 4>) -> ${_} {
    var coefsSum: ${_} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${_} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},V_=(e,r,t,s,n)=>{let[o,i,a,l,u]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Wl(e,u,o,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${i}];
      var height:${p} = originalIndices[${a}];
      var width:${p} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[i]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${n};
        }`:""};

    depth = max(0, min(depth, ${t[i]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${u}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${o}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},U_=(e,r,t,s,n,o)=>{let i=e.dims,a=O_(o,r.axes,i.length),l=D_(i,s,n,r.axes),u=s.slice();s.length===0&&(u=i.map((g,C)=>g===0?1:l[C]/g),r.keepAspectRatioPolicy!=="stretch"&&(l=L_(i,u,r)));let p=rt("output",e.dataType,l.length),c=Ee("input",e.dataType,i.length),d=ge.size(l),_=i.length===l.length&&i.every((g,C)=>g===l[C]),f=r.coordinateTransformMode==="tf_crop_and_resize",E=r.extrapolationValue,k=c.type.value,b=g=>`
      ${_?"":`
      ${A_(r.coordinateTransformMode,k)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${R_(c,i)};
              ${F_(r.nearestMode,t,k)};
              ${B_(c,p,i,l,u.length,a.length,f)};
              `;case"linear":return`
              ${z_(p,i,l,u.length,a.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${j_(c,p,i,f,E)}`;if(i.length===3||i.length===5)return`${V_(c,p,i,f,E)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${N_(c,p,i,l,u,a,r.cubicCoeffA,f,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${g.registerUniform("output_size","u32").registerUniform("scales","f32",u.length).registerUniform("roi","f32",a.length).declareVariables(c,p)}
      ${g.mainStart()}
        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${_?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${c.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${c.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${u.length>0?r.mode==="cubic"?u:u.length:""}|${n.length>0?n:""}|${a.length>0?a:""}|${_}|${r.mode==="nearest"?i.length:i}`,inputDependencies:["rank"]},getShaderSource:b,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},{type:1,data:u},{type:1,data:a},...lt(i,l)]})}},W_=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},G_=(e,r)=>{let t=[],s=[],n=[],o=W_(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");k_(e.inputs,r,o,t,s,n),e.compute(U_(e.inputs[0],r,o,t,s,n),{inputs:[0]})},K_=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,n=e.cubicCoeffA,o=e.excludeOutside!==0,i=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,u=e.nearestMode===""?"simple":e.nearestMode;return zt({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:n,excludeOutside:o,extrapolationValue:i,keepAspectRatioPolicy:a,mode:l,nearestMode:u})}}),H_,q_,Q_,px=Re(()=>{ft(),yt(),xt(),H_=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=r.dims[r.dims.length-1],o=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==o)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let i=e[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let i=e[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},q_=(e,r,t,s)=>{let n=r.simplified,o=e[0].dims,i=ge.size(o),a=o,l=i,u=o.slice(-1)[0],p=s?o.slice(0,-1).concat(1):[],c=!n&&e.length>3,d=e.length>4,_=s&&t>1,f=s&&t>2,E=t>3,k=64,b=sr(u),g=[{type:12,data:l},{type:12,data:b},{type:12,data:u},{type:1,data:r.epsilon}],C=v=>{let w=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],y=[Ee("x",e[0].dataType,e[0].dims,b),Ee("skip",e[1].dataType,e[1].dims,b),Ee("gamma",e[2].dataType,e[2].dims,b)];c&&y.push(Ee("beta",e[3].dataType,e[3].dims,b)),d&&y.push(Ee("bias",e[4].dataType,e[4].dims,b)),y.push(rt("output",e[0].dataType,a,b)),_&&y.push(rt("mean_output",1,p)),f&&y.push(rt("inv_std_output",1,p)),E&&y.push(rt("input_skip_bias_sum",e[0].dataType,a,b));let S=yr(e[0].dataType),O=yr(1,b);return`

      ${v.registerUniforms(w).declareVariables(...y)}
      var<workgroup> sum_shared : array<${O}, ${k}>;
      var<workgroup> sum_squared_shared : array<${O}, ${k}>;

      ${v.mainStart([k,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${k};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${k};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${k-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${d?"bias[offset1d + i]":S+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${E?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Ln(S,b,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${k};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${js("sum",b)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${js("square_sum",b)} / f32(uniforms.hidden_size) ${n?"":"- mean * mean"} + uniforms.epsilon);
        ${_?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${n?"":`- ${S}(mean)`}) *
            ${S}(inv_std_dev) * gamma[offset1d + i]
            ${c?"+ beta[offset1d + i]":""};
        }
      }`},x=[{dims:a,dataType:e[0].dataType}];return t>1&&x.push({dims:p,dataType:1}),t>2&&x.push({dims:p,dataType:1}),t>3&&x.push({dims:o,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${b};${_};${f};${E}`,inputDependencies:e.map((v,w)=>"type")},getShaderSource:C,getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(l/u)},programUniforms:g})}},Q_=(e,r)=>{H_(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(q_(e.inputs,r,e.outputCount,!1),{outputs:t})}}),X_,yo,J_,Gl,Y_,Z_,eg,tg,hx=Re(()=>{ft(),yt(),ar(),xt(),X_=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},yo=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},J_=(e,r)=>{if(e.length>1){let t=yo(e,1),s=yo(e,2),n=yo(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),zt({starts:t,ends:s,axes:n})}else return r},Gl=(e,r,t,s,n)=>{let o=e;return e<0&&(o+=t[s[r]]),n[r]<0?Math.max(0,Math.min(o,t[s[r]]-1)):Math.max(0,Math.min(o,t[s[r]]))},Y_=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${ot("uniforms.input_shape","i",t.length)};
            let steps_i = ${ot("uniforms.steps","i",t.length)};
            let signs_i = ${ot("uniforms.signs","i",t.length)};
            let starts_i = ${ot("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Z_=(e,r)=>{let t=e[0].dims,s=ge.size(t),n=r.axes.length>0?ge.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],o=yo(e,4);o.forEach(b=>b!==0||(()=>{throw new Error("step cannot be 0")})),o.length===0&&(o=Array(n.length).fill(1));let i=r.starts.map((b,g)=>Gl(b,g,t,n,o)),a=r.ends.map((b,g)=>Gl(b,g,t,n,o));if(n.length!==i.length||n.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==t.length)for(let b=0;b<t.length;++b)n.includes(b)||(i.splice(b,0,0),a.splice(b,0,t[b]),o.splice(b,0,1));let l=o.map(b=>Math.sign(b));o.forEach((b,g,C)=>{if(b<0){let x=(a[g]-i[g])/b,v=i[g],w=v+x*o[g];i[g]=w,a[g]=v,C[g]=-b}});let u=t.slice(0);n.forEach((b,g)=>{u[b]=Math.ceil((a[b]-i[b])/o[b])});let p={dims:u,dataType:e[0].dataType},c=rt("output",e[0].dataType,u.length),d=Ee("input",e[0].dataType,e[0].dims.length),_=ge.size(u),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:o.length}],E=[{type:12,data:_},{type:12,data:i},{type:6,data:l},{type:12,data:o},...lt(e[0].dims,u)],k=b=>`
      ${b.registerUniforms(f).declareVariables(d,c)}
        ${Y_(d,c,t)}
        ${b.mainStart()}
          ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${c.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${c.setByOffset("global_idx",d.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${o.length}`,inputDependencies:["rank"]},getShaderSource:k,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:E})}},eg=(e,r)=>{X_(e.inputs,r);let t=J_(e.inputs,r);e.compute(Z_(e.inputs,t),{inputs:[0]})},tg=e=>{let r=e.starts,t=e.ends,s=e.axes;return zt({starts:r,ends:t,axes:s})}}),rg,sg,ng,og,mx=Re(()=>{ft(),yt(),ar(),Ns(),xt(),rg=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},sg=(e,r)=>{let t=e.inputs[0],s=t.dims,n=ge.size(s),o=s.length,i=ge.normalizeAxis(r.axis,o),a=i<s.length-1,l,u=[];a?(u=Array.from({length:o},(y,S)=>S),u[i]=o-1,u[o-1]=i,l=e.compute(Kr(t,u),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,c=p[o-1],d=n/c,_=sr(c),f=c/_,E=64;d===1&&(E=256);let k=(y,S)=>S===4?`max(max(${y}.x, ${y}.y), max(${y}.z, ${y}.w))`:S===2?`max(${y}.x, ${y}.y)`:S===3?`max(max(${y}.x, ${y}.y), ${y}.z)`:y,b=Ee("x",l.dataType,l.dims,_),g=rt("result",l.dataType,l.dims,_),C=b.type.value,x=yr(l.dataType)==="f32"?`var threadMax = ${C}(-3.402823e+38f);`:`var threadMax = ${C}(-65504.0h);`,v=y=>`
      var<workgroup> rowMaxShared : ${C};
      var<workgroup> rowSumShared : ${C};
      var<workgroup> threadShared : array<${C}, ${E}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${C} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${C}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${y.registerUniform("packedCols","i32").declareVariables(b,g)}
      ${y.mainStart(E)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${E};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${x}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${C}(${k("threadShared[0]",_)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${C}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${C}(${js("threadShared[0]",_)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,w=e.compute({name:"Softmax",shaderCache:{hint:`${_};${E}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:d},programUniforms:[{type:6,data:f}]}),getShaderSource:v},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(Kr(w,u),{inputs:[w]})},ng=(e,r)=>{rg(e.inputs),sg(e,r)},og=e=>zt({axis:e.axis})}),Kl,ig,ag,lg,cg,fx=Re(()=>{ft(),yt(),xt(),Kl=e=>Array.from(e.getBigInt64Array(),Number),ig=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Kl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ag=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},lg=(e,r)=>{let t=e[0].dims,s=r??Kl(e[1]),n=ag(t,s),o=ge.size(n),i=e[0].dataType,a=Ee("input",i,t.length),l=rt("output",i,n.length),u=p=>`
      const inputShape = ${a.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(a,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...lt(e[0].dims,n)]}),getShaderSource:u}},cg=e=>{ig(e.inputs),e.compute(lg(e.inputs),{inputs:[0]})}}),ug,dg,pg,_x=Re(()=>{ft(),yt(),xt(),ug=(e,r,t,s,n)=>{let o=rt("output_data",n,t.length,4),i=Ee("a_data",r[1].dataType,r[1].dims.length,4),a=Ee("b_data",r[2].dataType,r[2].dims.length,4),l=Ee("c_data",r[0].dataType,r[0].dims.length,4),u,p=(c,d,_)=>`select(${d}, ${c}, ${_})`;if(!s)u=o.setByOffset("global_idx",p(i.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let c=(d,_,f="")=>{let E=`a_data[index_a${_}][component_a${_}]`,k=`b_data[index_b${_}][component_b${_}]`,b=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`
            let output_indices${_} = ${o.offsetToIndices(`global_idx * 4u + ${_}u`)};
            let offset_a${_} = ${i.broadcastedIndicesToOffset(`output_indices${_}`,o)};
            let offset_b${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,o)};
            let offset_c${_} = ${l.broadcastedIndicesToOffset(`output_indices${_}`,o)};
            let index_a${_} = offset_a${_} / 4u;
            let index_b${_} = offset_b${_} / 4u;
            let index_c${_} = offset_c${_} / 4u;
            let component_a${_} = offset_a${_} % 4u;
            let component_b${_} = offset_b${_} % 4u;
            let component_c${_} = offset_c${_} % 4u;
            ${d}[${_}] = ${f}(${p(E,k,b)});
          `};n===9?u=`
            var data = vec4<u32>(0);
            ${c("data",0,"u32")}
            ${c("data",1,"u32")}
            ${c("data",2,"u32")}
            ${c("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:u=`
            ${c("output_data[global_idx]",0)}
            ${c("output_data[global_idx]",1)}
            ${c("output_data[global_idx]",2)}
            ${c("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,i,a,o)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${u}
      }`},dg=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,n=e[1].dataType,o=!(ge.areEqual(r,t)&&ge.areEqual(t,s)),i=r,a=ge.size(r);if(o){let u=On.calcShape(On.calcShape(r,t,!1),s,!1);if(!u)throw new Error("Can't perform where op on the given tensors");i=u,a=ge.size(i)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:u=>ug(u,e,i,o,n),getRunData:()=>({outputs:[{dims:i,dataType:n}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...lt(s,r,t,i)]})}},pg=e=>{e.compute(dg(e.inputs))}}),hg,gx=Re(()=>{kv(),il(),Av(),Fv(),Ov(),Dv(),Lv(),Nv(),Uv(),Wv(),Gv(),Kv(),Hv(),qv(),Qv(),Xv(),Jv(),Yv(),Zv(),ex(),tx(),rx(),sx(),nx(),ox(),Ef(),ix(),ax(),lx(),cx(),ux(),sl(),dx(),Df(),px(),hx(),mx(),Af(),fx(),Ns(),ul(),_x(),hg=new Map([["Abs",[Kp]],["Acos",[Hp]],["Acosh",[qp]],["Add",[Dh]],["ArgMax",[kp,ol]],["ArgMin",[Ip,ol]],["Asin",[Qp]],["Asinh",[Xp]],["Atan",[Jp]],["Atanh",[Yp]],["Attention",[zp]],["AveragePool",[d_,u_]],["BatchNormalization",[Np]],["BiasAdd",[Wp]],["BiasSplitGelu",[Ah]],["Cast",[eh,Zp]],["Ceil",[sh]],["Clip",[rh]],["Concat",[Qh,Xh]],["Conv",[xl,yl]],["ConvTranspose",[xm,bm]],["Cos",[nh]],["Cosh",[oh]],["CumSum",[Em,Pm]],["DepthToSpace",[Im,km]],["DequantizeLinear",[b_,y_]],["Div",[Lh]],["Einsum",[zm,Bm]],["Elu",[ih,fo]],["Equal",[zh]],["Erf",[ah]],["Exp",[lh]],["Expand",[Vm]],["FastGelu",[Wm]],["Floor",[ch]],["FusedConv",[xl,yl]],["Gather",[qm,Hm]],["GatherElements",[of,nf]],["GatherBlockQuantized",[ef,tf]],["GatherND",[Xm,Jm]],["Gelu",[uh]],["Gemm",[uf,cf]],["GlobalAveragePool",[h_,p_]],["GlobalMaxPool",[g_,__]],["Greater",[Nh]],["GreaterOrEqual",[Uh]],["GridSample",[Mf,bf]],["GroupQueryAttention",[Rf]],["HardSigmoid",[wh,gh]],["InstanceNormalization",[Vf]],["LayerNormalization",[Gf]],["LeakyRelu",[dh,fo]],["Less",[Vh]],["LessOrEqual",[Wh]],["Log",[Ph]],["MatMul",[Hf]],["MatMulNBits",[Jf,Yf]],["MaxPool",[m_,f_]],["Mul",[Bh]],["MultiHeadAttention",[Tf,vf]],["Neg",[hh]],["Not",[ph]],["Pad",[a_]],["Pow",[Rh]],["QuickGelu",[$h,fo]],["Range",[T_]],["Reciprocal",[mh]],["ReduceMin",[Ep]],["ReduceMean",[bp]],["ReduceMax",[Tp]],["ReduceSum",[Cp]],["ReduceProd",[Pp]],["ReduceL1",[yp]],["ReduceL2",[vp]],["ReduceLogSum",[$p]],["ReduceLogSumExp",[xp]],["ReduceSumSquare",[Sp]],["Relu",[fh]],["Resize",[G_,K_]],["RotaryEmbedding",[Of]],["ScatterND",[S_,C_]],["Sigmoid",[_h]],["Sin",[Mh]],["Sinh",[bh]],["Slice",[eg,tg]],["SkipLayerNormalization",[Q_]],["Split",[If,kf]],["Sqrt",[yh]],["Softmax",[ng,og]],["Sub",[jh]],["Tan",[vh]],["Tanh",[xh]],["ThresholdedRelu",[Eh,fo]],["Tile",[cg]],["Transpose",[Nd,Vd]],["Where",[pg]]])}),mg,wx=Re(()=>{ds(),Fs(),xt(),mg=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,n){us(e.programInfo.name);let o=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let u of r)a.push({binding:a.length,resource:{buffer:u.buffer}});for(let u of t)a.push({binding:a.length,resource:{buffer:u.buffer}});n&&a.push({binding:a.length,resource:n});let l=o.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let u={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(u)}i.setPipeline(e.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Zr(e.programInfo.name)}dispose(){}build(e,r){us(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(u=>{t.features.has(u.feature)&&s.push(`enable ${u.extension};`)});let n=Dd(r,this.backend.device.limits),o=e.getShaderSource(n),i=`${s.join(`
`)}
${n.additionalImplementations}
${o}`,a=t.createShaderModule({code:i,label:e.name});kt("verbose",()=>`[WebGPU] ${e.name} shader code: ${i}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return Zr(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:n.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,n=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=n&&t<=n&&s<=n)return[r,t,s];let o=r*t*s,i=Math.ceil(Math.sqrt(o));if(i>n){if(i=Math.ceil(Math.cbrt(o)),i>n)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),fg={};An(fg,{WebGpuBackend:()=>Mg});var _g,gg,wg,Mg,Mx=Re(()=>{ds(),ft(),Fs(),yd(),$v(),gx(),wx(),_g=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let n=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${n}`);break}case"rank":{let o=e[s].dims.length;t.push(`${n};${o}`);break}case"dims":{let o=e[s].dims.join(",");t.push(`${n};${o}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},gg=(e,r,t)=>{let s=e.name;return e.shaderCache?.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${_g(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,s},wg=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Mg=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},n=o=>r.features.has(o)&&t.push(o)&&!0;n("chromium-experimental-timestamp-query-inside-passes")||n("timestamp-query"),n("shader-f16"),n("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new wg(r.info||await r.requestAdapterInfo()),this.gpuDataManager=kd(this),this.programManager=new mg(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Na(e.logLevel,!!e.debug),this.device.onuncapturederror=o=>{o.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${o.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;us(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let s=0;s<r.length/2;s++){let n=t[s],o=n.kernelId,i=this.kernels.get(o),a=i.kernelType,l=i.kernelName,u=n.programName,p=n.inputTensorViews,c=n.outputTensorViews,d=r[s*2],_=r[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=d);let f=Number(d-this.queryTimeBase),E=Number(_-this.queryTimeBase);if(!Number.isSafeInteger(f)||!Number.isSafeInteger(E))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map(k=>({dims:k.dims,dataType:As(k.dataType)})),outputsMetadata:c.map(k=>({dims:k.dims,dataType:As(k.dataType)})),kernelId:o,kernelType:a,kernelName:l,programName:u,startTime:f,endTime:E});else{let k="";p.forEach((g,C)=>{k+=`input[${C}]: [${g.dims}] | ${As(g.dataType)}, `});let b="";c.forEach((g,C)=>{b+=`output[${C}]: [${g.dims}] | ${As(g.dataType)}, `}),console.log(`[profiling] kernel "${o}|${a}|${l}|${u}" ${k}${b}execution time: ${E-f} ns`)}co("GPU",`${u}::${d}::${_}`)}e.unmap(),this.pendingQueries.delete(e)}),Zr()}run(e,r,t,s,n,o){us(e.name);let i=[];for(let g=0;g<r.length;++g){let C=r[g].data;if(C===0)continue;let x=this.gpuDataManager.get(C);if(!x)throw new Error(`no GPU data for input: ${C}`);i.push(x)}let{outputs:a,dispatchGroup:l,programUniforms:u}=e.getRunData(r),p=t.length===0?a.map((g,C)=>C):t;if(p.length!==a.length)throw new Error(`Output size ${p.length} must be equal to ${a.length}.`);let c=[],d=[];for(let g=0;g<a.length;++g){if(!Number.isInteger(p[g])||p[g]<-3||p[g]>=o)throw new Error(`Invalid output index: ${p[g]}`);if(p[g]===-3)continue;let C=p[g]===-1,x=p[g]===-2,v=C||x?n(a[g].dataType,a[g].dims):s(p[g],a[g].dataType,a[g].dims);if(c.push(v),v.data===0)continue;let w=this.gpuDataManager.get(v.data);if(!w)throw new Error(`no GPU data for output: ${v.data}`);if(C&&this.temporaryData.push(w),x){let y=this.kernelPersistentData.get(this.currentKernelId);y||(y=[],this.kernelPersistentData.set(this.currentKernelId,y)),y.push(w)}d.push(w)}if(i.length!==r.length||d.length!==c.length){if(d.length===0)return Zr(e.name),c;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(u){let g=0,C=[];u.forEach(y=>{let S=typeof y.data=="number"?[y.data]:y.data;if(S.length===0)return;let O=y.type===10?2:4,R,H;y.type===10?(H=S.length>4?16:S.length>2?8:S.length*O,R=S.length>4?16:O*S.length):(H=S.length<=2?S.length*O:16,R=16),g=Math.ceil(g/H)*H,C.push(g);let Q=y.type===10?8:4;g+=S.length>4?Math.ceil(S.length/Q)*R:S.length*O});let x=16;g=Math.ceil(g/x)*x;let v=new ArrayBuffer(g);u.forEach((y,S)=>{let O=C[S],R=typeof y.data=="number"?[y.data]:y.data;if(y.type===6)new Int32Array(v,O,R.length).set(R);else if(y.type===12)new Uint32Array(v,O,R.length).set(R);else if(y.type===10)new Uint16Array(v,O,R.length).set(R);else if(y.type===1)new Float32Array(v,O,R.length).set(R);else throw new Error(`Unsupported uniform type: ${As(y.type)}`)});let w=this.gpuDataManager.create(g,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(w.buffer,0,v,0,g),this.gpuDataManager.release(w.id),_={offset:0,size:g,buffer:w.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),E=f[1]===1&&f[2]===1,k=gg(e,r,E),b=this.programManager.getArtifact(k);if(b||(b=this.programManager.build(e,f),this.programManager.setArtifact(k,b),kt("info",()=>`[artifact] key: ${k}, programName: ${e.name}`)),u&&b.uniformVariablesInfo){if(u.length!==b.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${b.uniformVariablesInfo.length}, got ${u.length} in program "${b.programInfo.name}".`);for(let g=0;g<u.length;g++){let C=u[g],x=C.type,v=typeof C.data=="number"?1:C.data.length,[w,y]=b.uniformVariablesInfo[g];if(x!==w||v!==y)throw new Error(`Uniform variable ${g} mismatch: expect type ${w} with size ${y}, got type ${x} with size ${v} in program "${b.programInfo.name}".`)}}if(kt("info",()=>`[ProgramManager] run "${e.name}" (key=${k}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let g={kernelId:this.currentKernelId,programName:b.programInfo.name,inputTensorViews:r,outputTensorViews:c};this.pendingKernels.push(g),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(g)}return this.programManager.run(b,i,d,f,_),Zr(e.name),c}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let n=hg.get(e);if(!n)throw new Error(`kernel not implemented: ${e}`);let o={kernelType:e,kernelName:s,kernelEntry:n[0],attributes:[n[1],t]};this.kernels.set(r,o)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let n=s.kernelType,o=s.kernelName,i=s.kernelEntry,a=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${n}] ${o}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),kt("info",()=>`[WebGPU] Start to run kernel "[${n}] ${o}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(r,a[1]),0}catch(u){return t.push(Promise.resolve(`[WebGPU] Kernel "[${n}] ${o}" failed. ${u}`)),1}finally{l&&t.push(this.device.popErrorScope().then(u=>u?`GPU validation error for kernel "[${n}] ${o}": ${u.message}`:null));for(let u of this.temporaryData)this.gpuDataManager.release(u.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let n=this.sessionExternalDataMapping.get(e);n||(n=new Map,this.sessionExternalDataMapping.set(e,n));let o=n.get(r),i=this.gpuDataManager.registerExternalBuffer(t,s,o);return n.set(r,[i,t]),i}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await Ya(this,e,r);return Va(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){kt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){kt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){kt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let n=this.getComputePassEncoder(),o=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),n.setPipeline(o.computePipeline),n.setBindGroup(0,o.bindGroup),n.dispatchWorkgroups(...o.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),bg={};An(bg,{init:()=>vg});var Mi,yg,vg,bx=Re(()=>{ft(),Fs(),yt(),Sv(),Mi=class U0{constructor(r,t,s,n){this.module=r,this.dataType=t,this.data=s,this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=ge.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=ge.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=ge.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=ge.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(ge.size(r)!==ge.size(this.dims))throw new Error("Invalid new shape");return new U0(this.module,this.dataType,this.data,r)}},yg=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,n=t/e.PTR_SIZE,o=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*n++,o));let i=Number(e.getValue(s*n++,o));this.outputCount=Number(e.getValue(s*n++,o)),this.customDataOffset=Number(e.getValue(s*n++,"*")),this.customDataSize=Number(e.getValue(s*n++,o));let a=[];for(let l=0;l<i;l++){let u=Number(e.getValue(s*n++,o)),p=Number(e.getValue(s*n++,"*")),c=Number(e.getValue(s*n++,o)),d=[];for(let _=0;_<c;_++)d.push(Number(e.getValue(s*n++,o)));a.push(new Mi(e,u,p,d))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){let t=r?.inputs?.map(i=>typeof i=="number"?this.inputs[i]:i)??this.inputs,s=r?.outputs??[],n=(i,a,l)=>new Mi(this.module,a,this.output(i,l),l),o=(i,a)=>{let l=en(i,a);if(!l)throw new Error(`Unsupported data type: ${i}`);let u=l>0?this.backend.gpuDataManager.create(l).id:0;return new Mi(this.module,i,u,a)};return this.backend.run(e,t,s,n,o,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,n=s===4?"i32":"i64",o=this.module.stackAlloc((1+r.length)*s);this.module.setValue(o,r.length,n);for(let i=0;i<r.length;i++)this.module.setValue(o+s*(i+1),r[i],n);return this.module._JsepOutput(this.opKernelContext,e,o)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},vg=async(e,r,t,s)=>{let n=r.jsepInit;if(!n)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let o=(Mx(),io(fg)).WebGpuBackend,i=new o;await i.initialize(t,s),n("webgpu",[i,a=>i.alloc(Number(a)),a=>i.free(a),(a,l,u,p=!1)=>{if(p)kt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(l)}, size=${Number(u)}`),i.memcpy(Number(a),Number(l));else{kt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(l)}, size=${Number(u)}`);let c=r.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(u));i.upload(Number(l),c)}},async(a,l,u)=>{kt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${l}, size=${u}`),await i.download(Number(a),()=>r.HEAPU8.subarray(Number(l)>>>0,Number(l+u)>>>0))},(a,l,u)=>i.createKernel(a,Number(l),u,r.UTF8ToString(r._JsepGetNodeName(Number(l)))),a=>i.releaseKernel(a),(a,l,u,p)=>{kt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${a}, contextDataOffset=${l}`);let c=new yg(r,i,Number(l));return i.computeKernel(Number(a),c,p)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay()])}else{let o=new Cd(t);n("webnn",[o,()=>o.reserveTensorId(),i=>o.releaseTensorId(i),async(i,a,l,u,p)=>o.ensureTensor(i,a,l,u,p),(i,a)=>{o.uploadTensor(i,a)},async(i,a)=>o.downloadTensor(i,a)])}}}),xg,Hl,ql,Vs,Tg,Ql,bi,Xl,Jl,Yl,Zl,ec,tc,Eg=Re(()=>{Ev(),Pv(),ft(),Zs(),Da(),dd(),xg=(e,r)=>{Ut()._OrtInit(e,r)!==0&&jt("Can't initialize onnxruntime.")},Hl=async e=>{xg(e.wasm.numThreads,oi(e.logLevel))},ql=async(e,r)=>{Ut().asyncInit?.();{let t=(bx(),io(bg)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(n!==void 0&&n!=="low-power"&&n!=="high-performance")throw new Error(`Invalid powerPreference setting: "${n}"`);let o=e.webgpu.forceFallbackAdapter;if(o!==void 0&&typeof o!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${o}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:o}),!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await t("webgpu",Ut(),e,s)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await t("webnn",Ut(),e)}}},Vs=new Map,Tg=e=>{let r=Ut(),t=r.stackSave();try{let s=r.PTR_SIZE,n=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,n,n+s)!==0&&jt("Can't get session input/output count.");let o=s===4?"i32":"i64";return[Number(r.getValue(n,o)),Number(r.getValue(n+s,o))]}finally{r.stackRestore(t)}},Ql=(e,r)=>{let t=Ut(),s=t.stackSave(),n=0;try{let o=t.PTR_SIZE,i=t.stackAlloc(2*o);t._OrtGetInputOutputMetadata(e,r,i,i+o)!==0&&jt("Can't get session input/output metadata.");let a=Number(t.getValue(i,"*"));n=Number(t.getValue(i+o,"*"));let l=t.HEAP32[n/4];if(l===0)return[a,0];let u=t.HEAPU32[n/4+1],p=[];for(let c=0;c<u;c++){let d=Number(t.getValue(n+8+c*o,"*"));p.push(d!==0?t.UTF8ToString(d):Number(t.getValue(n+8+(c+u)*o,"*")))}return[a,l,p]}finally{t.stackRestore(s),n!==0&&t._OrtFree(n)}},bi=e=>{let r=Ut(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Xl=async(e,r)=>{let t,s,n=Ut();Array.isArray(e)?[t,s]=e:e.buffer===n.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=bi(e);let o=0,i=0,a=0,l=[],u=[],p=[];try{if([i,l]=await ud(r),r?.externalData&&n.mountExternalData){let x=[];for(let v of r.externalData){let w=typeof v=="string"?v:v.path;x.push(ja(typeof v=="string"?v:v.data).then(y=>{n.mountExternalData(w,y)}))}await Promise.all(x)}for(let x of r?.executionProviders??[])if((typeof x=="string"?x:x.name)==="webnn"){if(n.shouldTransferToMLTensor=!1,typeof x!="string"){let v=x,w=v?.context,y=v?.gpuDevice,S=v?.deviceType,O=v?.powerPreference;w?n.currentContext=w:y?n.currentContext=await n.webnnCreateMLContext(y):n.currentContext=await n.webnnCreateMLContext({deviceType:S,powerPreference:O})}else n.currentContext=await n.webnnCreateMLContext();break}o=await n._OrtCreateSession(t,s,i),n.webgpuOnCreateSession?.(o),o===0&&jt("Can't create a session."),n.jsepOnCreateSession?.(),n.currentContext&&(n.webnnRegisterMLContext(o,n.currentContext),n.currentContext=void 0,n.shouldTransferToMLTensor=!0);let[c,d]=Tg(o),_=!!r?.enableGraphCapture,f=[],E=[],k=[],b=[],g=[];for(let x=0;x<c;x++){let[v,w,y]=Ql(o,x);v===0&&jt("Can't get an input name."),u.push(v);let S=n.UTF8ToString(v);f.push(S),k.push(w===0?{name:S,isTensor:!1}:{name:S,isTensor:!0,type:As(w),shape:y})}for(let x=0;x<d;x++){let[v,w,y]=Ql(o,x+c);v===0&&jt("Can't get an output name."),p.push(v);let S=n.UTF8ToString(v);E.push(S),b.push(w===0?{name:S,isTensor:!1}:{name:S,isTensor:!0,type:As(w),shape:y});{if(_&&r?.preferredOutputLocation===void 0){g.push("gpu-buffer");continue}let O=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[S]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer"&&O!=="ml-tensor")throw new Error(`Not supported preferred output location: ${O}.`);if(_&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);g.push(O)}}let C=null;return g.some(x=>x==="gpu-buffer"||x==="ml-tensor")&&(a=n._OrtCreateBinding(o),a===0&&jt("Can't create IO binding."),C={handle:a,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map(x=>Ra(x))}),Vs.set(o,[o,u,p,C,_,!1]),[o,f,E,k,b]}catch(c){throw u.forEach(d=>n._OrtFree(d)),p.forEach(d=>n._OrtFree(d)),a!==0&&n._OrtReleaseBinding(a)!==0&&jt("Can't release IO binding."),o!==0&&n._OrtReleaseSession(o)!==0&&jt("Can't release session."),c}finally{n._free(t),i!==0&&n._OrtReleaseSessionOptions(i)!==0&&jt("Can't release session options."),l.forEach(c=>n._free(c)),n.unmountExternalData?.()}},Jl=e=>{let r=Ut(),t=Vs.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,n,o,i,a]=t;i&&(a&&r._OrtClearBoundOutputs(i.handle)!==0&&jt("Can't clear bound outputs."),r._OrtReleaseBinding(i.handle)!==0&&jt("Can't release IO binding.")),r.jsepOnReleaseSession?.(e),r.webnnOnReleaseSession?.(e),r.webgpuOnReleaseSession?.(e),n.forEach(l=>r._OrtFree(l)),o.forEach(l=>r._OrtFree(l)),r._OrtReleaseSession(s)!==0&&jt("Can't release session."),Vs.delete(e)},Yl=async(e,r,t,s,n,o,i=!1)=>{if(!e){r.push(0);return}let a=Ut(),l=a.PTR_SIZE,u=e[0],p=e[1],c=e[3],d=c,_,f;if(u==="string"&&(c==="gpu-buffer"||c==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(i&&c!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${o} when enableGraphCapture is true.`);if(c==="gpu-buffer"){let b=e[2].gpuBuffer;f=en(Fn(u),p);{let g=a.jsepRegisterBuffer;if(!g)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');_=g(s,o,b,f)}}else if(c==="ml-tensor"){let b=e[2].mlTensor;f=en(Fn(u),p);let g=a.webnnRegisterMLTensor;if(!g)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');_=g(s,b,Fn(u),p)}else{let b=e[2];if(Array.isArray(b)){f=l*b.length,_=a._malloc(f),t.push(_);for(let g=0;g<b.length;g++){if(typeof b[g]!="string")throw new TypeError(`tensor data at index ${g} is not a string`);a.setValue(_+g*l,ps(b[g],t),"*")}}else{let g=a.webnnIsGraphInput;if(u!=="string"&&g){let C=a.UTF8ToString(n);if(g(s,C)){let x=Fn(u);f=en(x,p),d="ml-tensor";let v=a.webnnCreateTemporaryTensor,w=a.webnnUploadTensor;if(!v||!w)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let y=await v(s,x,p);w(y,new Uint8Array(b.buffer,b.byteOffset,b.byteLength)),_=y}else f=b.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,f),_)}else f=b.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,f),_)}}let E=a.stackSave(),k=a.stackAlloc(4*p.length);try{p.forEach((g,C)=>a.setValue(k+C*l,g,l===4?"i32":"i64"));let b=a._OrtCreateTensor(Fn(u),_,f,k,p.length,Ra(d));b===0&&jt(`Can't create tensor for input/output. session=${s}, index=${o}.`),r.push(b)}finally{a.stackRestore(E)}},Zl=async(e,r,t,s,n,o)=>{let i=Ut(),a=i.PTR_SIZE,l=Vs.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let u=l[0],p=l[1],c=l[2],d=l[3],_=l[4],f=l[5],E=r.length,k=s.length,b=0,g=[],C=[],x=[],v=[],w=i.stackSave(),y=i.stackAlloc(E*a),S=i.stackAlloc(E*a),O=i.stackAlloc(k*a),R=i.stackAlloc(k*a);try{[b,g]=od(o);for(let L=0;L<E;L++)await Yl(t[L],C,v,e,p[r[L]],r[L],_);for(let L=0;L<k;L++)await Yl(n[L],x,v,e,c[s[L]],E+s[L],_);for(let L=0;L<E;L++)i.setValue(y+L*a,C[L],"*"),i.setValue(S+L*a,p[r[L]],"*");for(let L=0;L<k;L++)i.setValue(O+L*a,x[L],"*"),i.setValue(R+L*a,c[s[L]],"*");if(d&&!f){let{handle:L,outputPreferredLocations:Y,outputPreferredLocationsEncoded:q}=d;if(p.length!==E)throw new Error(`input count from feeds (${E}) is expected to be always equal to model's input count (${p.length}).`);for(let X=0;X<E;X++){let re=r[X];await i._OrtBindInput(L,p[re],C[X])!==0&&jt(`Can't bind input[${X}] for session=${e}.`)}for(let X=0;X<k;X++){let re=s[X];n[X]?.[3]?i._OrtBindOutput(L,c[re],x[X],0)!==0&&jt(`Can't bind pre-allocated output[${X}] for session=${e}.`):i._OrtBindOutput(L,c[re],0,q[re])!==0&&jt(`Can't bind output[${X}] to ${Y[X]} for session=${e}.`)}Vs.set(e,[u,p,c,d,_,!0])}i.jsepOnRunStart?.(u),i.webnnOnRunStart?.(u);let H;d?H=await i._OrtRunWithBinding(u,d.handle,k,O,b):H=await i._OrtRun(u,S,y,E,R,k,O,b),H!==0&&jt("failed to call OrtRun().");let Q=[];for(let L=0;L<k;L++){let Y=Number(i.getValue(O+L*a,"*"));if(Y===x[L]){Q.push(n[L]);continue}let q=i.stackSave(),X=i.stackAlloc(4*a),re=!1,te,he=0;try{i._OrtGetTensorData(Y,X,X+a,X+2*a,X+3*a)!==0&&jt(`Can't access output tensor data on index ${L}.`);let ue=a===4?"i32":"i64",N=Number(i.getValue(X,ue));he=i.getValue(X+a,"*");let A=i.getValue(X+a*2,"*"),K=Number(i.getValue(X+a*3,ue)),j=[];for(let ve=0;ve<K;ve++)j.push(Number(i.getValue(A+ve*a,ue)));i._OrtFree(A)!==0&&jt("Can't free memory for tensor dims.");let ae=j.reduce((ve,Ie)=>ve*Ie,1);te=As(N);let Ae=d?.outputPreferredLocations[s[L]];if(te==="string"){if(Ae==="gpu-buffer"||Ae==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let ve=[];for(let Ie=0;Ie<ae;Ie++){let Ve=i.getValue(he+Ie*a,"*"),de=i.getValue(he+(Ie+1)*a,"*"),G=Ie===ae-1?void 0:de-Ve;ve.push(i.UTF8ToString(Ve,G))}Q.push([te,j,ve,"cpu"])}else if(Ae==="gpu-buffer"&&ae>0){let ve=i.jsepGetBuffer;if(!ve)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Ie=ve(he),Ve=en(N,ae);if(Ve===void 0||!za(te))throw new Error(`Unsupported data type: ${te}`);re=!0,Q.push([te,j,{gpuBuffer:Ie,download:i.jsepCreateDownloader(Ie,Ve,te),dispose:()=>{i._OrtReleaseTensor(Y)!==0&&jt("Can't release tensor.")}},"gpu-buffer"])}else if(Ae==="ml-tensor"&&ae>0){let ve=i.webnnEnsureTensor,Ie=i.webnnIsInt64Supported;if(!ve||!Ie)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(en(N,ae)===void 0||!Ba(te))throw new Error(`Unsupported data type: ${te}`);if(te==="int64"&&!Ie(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let Ve=await ve(e,he,N,j,!1);re=!0,Q.push([te,j,{mlTensor:Ve,download:i.webnnCreateMLTensorDownloader(he,te),dispose:()=>{i.webnnReleaseTensorId(he),i._OrtReleaseTensor(Y)}},"ml-tensor"])}else{let ve=La(te),Ie=new ve(ae);new Uint8Array(Ie.buffer,Ie.byteOffset,Ie.byteLength).set(i.HEAPU8.subarray(he,he+Ie.byteLength)),Q.push([te,j,Ie,"cpu"])}}finally{i.stackRestore(q),te==="string"&&he&&i._free(he),re||i._OrtReleaseTensor(Y),i.webnnOnRunEnd?.(u)}}return d&&!_&&(i._OrtClearBoundOutputs(d.handle)!==0&&jt("Can't clear bound outputs."),Vs.set(e,[u,p,c,d,_,!1])),Q}finally{i.stackRestore(w),C.forEach(H=>i._OrtReleaseTensor(H)),x.forEach(H=>i._OrtReleaseTensor(H)),v.forEach(H=>i._free(H)),b!==0&&i._OrtReleaseRunOptions(b),g.forEach(H=>i._free(H))}},ec=e=>{let r=Ut(),t=Vs.get(e);if(!t)throw new Error("invalid session id");let s=t[0],n=r._OrtEndProfiling(s);n===0&&jt("Can't get an profile file name."),r._OrtFree(n)},tc=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),Us,es,zn,vo,xo,yi,rc,vi,ln,cn,Pg,Cg,Sg,$g,Ig,kg,Ag,Fg,Og=Re(()=>{ds(),Eg(),Zs(),ka(),Us=()=>!!Kt.wasm.proxy&&typeof document<"u",zn=!1,vo=!1,xo=!1,vi=new Map,ln=(e,r)=>{let t=vi.get(e);t?t.push(r):vi.set(e,[r])},cn=()=>{if(zn||!vo||xo||!es)throw new Error("worker not ready")},Pg=e=>{switch(e.data.type){case"init-wasm":zn=!1,e.data.err?(xo=!0,rc[1](e.data.err)):(vo=!0,rc[0]()),yi&&(URL.revokeObjectURL(yi),yi=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=vi.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},Cg=async()=>{if(!vo){if(zn)throw new Error("multiple calls to 'initWasm()' detected.");if(xo)throw new Error("previous call to 'initWasm()' failed.");if(zn=!0,Us())return new Promise((e,r)=>{es?.terminate(),ed().then(([t,s])=>{try{es=s,es.onerror=o=>r(o),es.onmessage=Pg,rc=[e,r];let n={type:"init-wasm",in:Kt};!n.in.wasm.wasmPaths&&(t||Ca)&&(n.in.wasm.wasmPaths={wasm:new URL(""+new URL("ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",self.location.href).href,self.location.href).href}),es.postMessage(n),yi=t}catch(n){r(n)}},r)});try{await Oa(Kt.wasm),await Hl(Kt),vo=!0}catch(e){throw xo=!0,e}finally{zn=!1}}},Sg=async e=>{if(Us())return cn(),new Promise((r,t)=>{ln("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:Kt}};es.postMessage(s)});await ql(Kt,e)},$g=async e=>Us()?(cn(),new Promise((r,t)=>{ln("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};es.postMessage(s,[e.buffer])})):bi(e),Ig=async(e,r)=>{if(Us()){if(r?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return cn(),new Promise((t,s)=>{ln("create",[t,s]);let n={type:"create",in:{model:e,options:{...r}}},o=[];e instanceof Uint8Array&&o.push(e.buffer),es.postMessage(n,o)})}else return Xl(e,r)},kg=async e=>{if(Us())return cn(),new Promise((r,t)=>{ln("release",[r,t]);let s={type:"release",in:e};es.postMessage(s)});Jl(e)},Ag=async(e,r,t,s,n,o)=>{if(Us()){if(t.some(i=>i[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(n.some(i=>i))throw new Error("pre-allocated output tensor is not supported for proxy.");return cn(),new Promise((i,a)=>{ln("run",[i,a]);let l=t,u={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:o}};es.postMessage(u,tc(l))})}else return Zl(e,r,t,s,n,o)},Fg=async e=>{if(Us())return cn(),new Promise((r,t)=>{ln("end-profiling",[r,t]);let s={type:"end-profiling",in:e};es.postMessage(s)});ec(e)}}),sc,Dg,Lg,yx=Re(()=>{ds(),Og(),ft(),ya(),dd(),sc=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},Dg=e=>{switch(e[3]){case"cpu":return new cs(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!za(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:n}=e[2];return cs.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:n})}case"ml-tensor":{let r=e[0];if(!Ba(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:n}=e[2];return cs.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:n})}default:throw new Error(`invalid data location: ${e[3]}`)}},Lg=class{async fetchModelAndCopyToWasmMemory(e){return $g(await ja(e))}async loadModel(e,r){us();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await Ig(t,r),Zr()}async dispose(){return kg(this.sessionId)}async run(e,r,t){us();let s=[],n=[];Object.entries(e).forEach(c=>{let d=c[0],_=c[1],f=this.inputNames.indexOf(d);if(f===-1)throw new Error(`invalid input '${d}'`);s.push(_),n.push(f)});let o=[],i=[];Object.entries(r).forEach(c=>{let d=c[0],_=c[1],f=this.outputNames.indexOf(d);if(f===-1)throw new Error(`invalid output '${d}'`);o.push(_),i.push(f)});let a=s.map((c,d)=>sc(c,()=>`input "${this.inputNames[n[d]]}"`)),l=o.map((c,d)=>c?sc(c,()=>`output "${this.outputNames[i[d]]}"`):null),u=await Ag(this.sessionId,n,a,i,l,t),p={};for(let c=0;c<u.length;c++)p[this.outputNames[i[c]]]=o[c]??Dg(u[c]);return Zr(),p}startProfiling(){}endProfiling(){Fg(this.sessionId)}}}),zg={};An(zg,{OnnxruntimeWebAssemblyBackend:()=>oc,initializeFlags:()=>nc,wasmBackend:()=>Bg});var nc,oc,Bg,vx=Re(()=>{ds(),Og(),yx(),nc=()=>{(typeof Kt.wasm.initTimeout!="number"||Kt.wasm.initTimeout<0)&&(Kt.wasm.initTimeout=0);let e=Kt.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),Kt.wasm.simd=!1),typeof Kt.wasm.proxy!="boolean"&&(Kt.wasm.proxy=!1),typeof Kt.wasm.trace!="boolean"&&(Kt.wasm.trace=!1),typeof Kt.wasm.numThreads!="number"||!Number.isInteger(Kt.wasm.numThreads)||Kt.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)Kt.wasm.numThreads=1;else{let r=typeof navigator>"u"?lv("node:os").cpus().length:navigator.hardwareConcurrency;Kt.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},oc=class{async init(e){nc(),await Cg(),await Sg(e)}async createInferenceSessionHandler(e,r){let t=new Lg;return await t.loadModel(e,r),t}},Bg=new oc});ds(),ds(),ds();var xx="1.22.0-dev.20250409-89f8206ba4",Tx=Uu;{let e=(vx(),io(zg)).wasmBackend;Js("webgpu",e,5),Js("webnn",e,5),Js("cpu",e,10),Js("wasm",e,10)}Object.defineProperty(Kt.versions,"web",{value:xx,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ex=Object.freeze({__proto__:null,get InferenceSession(){return ba},get TRACE(){return co},get TRACE_FUNC_BEGIN(){return us},get TRACE_FUNC_END(){return Zr},get Tensor(){return cs},default:Tx,get env(){return Kt},get registerBackend(){return Js}}),ic={},Px={"onnxruntime-common":e=>{e.exports=nv},"onnxruntime-web":e=>{e.exports=Ex},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>je,Interpreter:()=>Ke,Template:()=>ts,parse:()=>K,tokenize:()=>c});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndSet:"EndSet",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro",Break:"Break",Continue:"Continue"}),n=Object.freeze({set:s.Set,for:s.For,in:s.In,is:s.Is,if:s.If,else:s.Else,endset:s.EndSet,endif:s.EndIf,elif:s.ElseIf,endfor:s.EndFor,and:s.And,or:s.Or,not:s.Not,"not in":s.NotIn,macro:s.Macro,endmacro:s.EndMacro,break:s.Break,continue:s.Continue,true:s.BooleanLiteral,false:s.BooleanLiteral,none:s.NullLiteral,True:s.BooleanLiteral,False:s.BooleanLiteral,None:s.NullLiteral}),o=class{constructor(z,ne){this.value=z,this.type=ne}};function i(z){return/\w/.test(z)}function a(z){return/[0-9]/.test(z)}var l=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],u=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function p(z,ne={}){return z.endsWith(`
`)&&(z=z.slice(0,-1)),z=z.replace(/{#.*?#}/gs,"{##}"),ne.lstrip_blocks&&(z=z.replace(/^[ \t]*({[#%])/gm,"$1")),ne.trim_blocks&&(z=z.replace(/([#%]})\n/g,"$1")),z.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function c(z,ne={}){const B=[],ee=p(z,ne);let me=0;const Oe=be=>{let dt="";for(;be(ee[me]);){if(ee[me]==="\\"){if(++me,me>=ee.length)throw new SyntaxError("Unexpected end of input");const et=ee[me++],tt=u.get(et);if(tt===void 0)throw new SyntaxError(`Unexpected escaped character: ${et}`);dt+=tt;continue}if(dt+=ee[me++],me>=ee.length)throw new SyntaxError("Unexpected end of input")}return dt};e:for(;me<ee.length;){const be=B.at(-1)?.type;if(be===void 0||be===s.CloseStatement||be===s.CloseExpression){let et="";for(;me<ee.length&&!(ee[me]==="{"&&(ee[me+1]==="%"||ee[me+1]==="{"));)et+=ee[me++];if(et.length>0){B.push(new o(et,s.Text));continue}}Oe(et=>/\s/.test(et));const dt=ee[me];if(dt==="-"||dt==="+"){const et=B.at(-1)?.type;if(et===s.Text||et===void 0)throw new SyntaxError(`Unexpected character: ${dt}`);switch(et){case s.Identifier:case s.NumericLiteral:case s.BooleanLiteral:case s.NullLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++me;const tt=Oe(a);B.push(new o(`${dt}${tt}`,tt.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[et,tt]of l)if(ee.slice(me,me+et.length)===et){B.push(new o(et,tt)),me+=et.length;continue e}if(dt==="'"||dt==='"'){++me;const et=Oe(tt=>tt!==dt);B.push(new o(et,s.StringLiteral)),++me;continue}if(a(dt)){const et=Oe(a);B.push(new o(et,s.NumericLiteral));continue}if(i(dt)){const et=Oe(i),tt=Object.hasOwn(n,et)?n[et]:s.Identifier;tt===s.In&&B.at(-1)?.type===s.Not?(B.pop(),B.push(new o("not in",s.NotIn))):B.push(new o(et,tt));continue}throw new SyntaxError(`Unexpected character: ${dt}`)}return B}var d=class{constructor(){Z(this,"type","Statement")}},_=class extends d{constructor(ne){super();Z(this,"type","Program");this.body=ne}},f=class extends d{constructor(ne,B,ee){super();Z(this,"type","If");this.test=ne,this.body=B,this.alternate=ee}},E=class extends d{constructor(ne,B,ee,me){super();Z(this,"type","For");this.loopvar=ne,this.iterable=B,this.body=ee,this.defaultBlock=me}},k=class extends d{constructor(){super(...arguments);Z(this,"type","Break")}},b=class extends d{constructor(){super(...arguments);Z(this,"type","Continue")}},g=class extends d{constructor(ne,B,ee){super();Z(this,"type","Set");this.assignee=ne,this.value=B,this.body=ee}},C=class extends d{constructor(ne,B,ee){super();Z(this,"type","Macro");this.name=ne,this.args=B,this.body=ee}},x=class extends d{constructor(){super(...arguments);Z(this,"type","Expression")}},v=class extends x{constructor(ne,B,ee){super();Z(this,"type","MemberExpression");this.object=ne,this.property=B,this.computed=ee}},w=class extends x{constructor(ne,B){super();Z(this,"type","CallExpression");this.callee=ne,this.args=B}},y=class extends x{constructor(ne){super();Z(this,"type","Identifier");this.value=ne}},S=class extends x{constructor(ne){super();Z(this,"type","Literal");this.value=ne}},O=class extends S{constructor(){super(...arguments);Z(this,"type","NumericLiteral")}},R=class extends S{constructor(){super(...arguments);Z(this,"type","StringLiteral")}},H=class extends S{constructor(){super(...arguments);Z(this,"type","BooleanLiteral")}},Q=class extends S{constructor(){super(...arguments);Z(this,"type","NullLiteral")}},L=class extends S{constructor(){super(...arguments);Z(this,"type","ArrayLiteral")}},Y=class extends S{constructor(){super(...arguments);Z(this,"type","TupleLiteral")}},q=class extends S{constructor(){super(...arguments);Z(this,"type","ObjectLiteral")}},X=class extends x{constructor(ne,B,ee){super();Z(this,"type","BinaryExpression");this.operator=ne,this.left=B,this.right=ee}},re=class extends x{constructor(ne,B){super();Z(this,"type","FilterExpression");this.operand=ne,this.filter=B}},te=class extends x{constructor(ne,B){super();Z(this,"type","SelectExpression");this.iterable=ne,this.test=B}},he=class extends x{constructor(ne,B,ee){super();Z(this,"type","TestExpression");this.operand=ne,this.negate=B,this.test=ee}},ue=class extends x{constructor(ne,B){super();Z(this,"type","UnaryExpression");this.operator=ne,this.argument=B}},N=class extends x{constructor(ne=void 0,B=void 0,ee=void 0){super();Z(this,"type","SliceExpression");this.start=ne,this.stop=B,this.step=ee}},A=class extends x{constructor(ne,B){super();Z(this,"type","KeywordArgumentExpression");this.key=ne,this.value=B}};function K(z){const ne=new _([]);let B=0;function ee(Le,qe){const ct=z[B++];if(!ct||ct.type!==Le)throw new Error(`Parser Error: ${qe}. ${ct.type} !== ${Le}.`);return ct}function me(){switch(z[B].type){case s.Text:return dt();case s.OpenStatement:return et();case s.OpenExpression:return tt();default:throw new SyntaxError(`Unexpected token type: ${z[B].type}`)}}function Oe(...Le){return B+Le.length<=z.length&&Le.some((qe,ct)=>qe!==z[B+ct].type)}function be(...Le){return B+Le.length<=z.length&&Le.every((qe,ct)=>qe===z[B+ct].type)}function dt(){return new R(ee(s.Text,"Expected text token").value)}function et(){ee(s.OpenStatement,"Expected opening statement token");let Le;switch(z[B].type){case s.Set:++B,Le=Zt(),ee(s.CloseStatement,"Expected closing statement token");break;case s.If:++B,Le=$t(),ee(s.OpenStatement,"Expected {% token"),ee(s.EndIf,"Expected endif token"),ee(s.CloseStatement,"Expected %} token");break;case s.Macro:++B,Le=nr(),ee(s.OpenStatement,"Expected {% token"),ee(s.EndMacro,"Expected endmacro token"),ee(s.CloseStatement,"Expected %} token");break;case s.For:++B,Le=Or(),ee(s.OpenStatement,"Expected {% token"),ee(s.EndFor,"Expected endfor token"),ee(s.CloseStatement,"Expected %} token");break;case s.Break:++B,ee(s.CloseStatement,"Expected closing statement token"),Le=new k;break;case s.Continue:++B,ee(s.CloseStatement,"Expected closing statement token"),Le=new b;break;default:throw new SyntaxError(`Unknown statement type: ${z[B].type}`)}return Le}function tt(){ee(s.OpenExpression,"Expected opening expression token");const Le=Ht();return ee(s.CloseExpression,"Expected closing expression token"),Le}function Zt(){const Le=Ht();if(be(s.Equals)){++B;const qe=Ht();return new g(Le,qe,[])}else{const qe=[];for(ee(s.CloseStatement,"Expected %} token");!(z[B]?.type===s.OpenStatement&&z[B+1]?.type===s.EndSet);){const ct=me();qe.push(ct)}return ee(s.OpenStatement,"Expected {% token"),ee(s.EndSet,"Expected endset token"),new g(Le,null,qe)}}function $t(){const Le=Ht();ee(s.CloseStatement,"Expected closing statement token");const qe=[],ct=[];for(;!(z[B]?.type===s.OpenStatement&&(z[B+1]?.type===s.ElseIf||z[B+1]?.type===s.Else||z[B+1]?.type===s.EndIf));)qe.push(me());if(z[B]?.type===s.OpenStatement&&z[B+1]?.type!==s.EndIf)if(++B,be(s.ElseIf))ee(s.ElseIf,"Expected elseif token"),ct.push($t());else for(ee(s.Else,"Expected else token"),ee(s.CloseStatement,"Expected closing statement token");!(z[B]?.type===s.OpenStatement&&z[B+1]?.type===s.EndIf);)ct.push(me());return new f(Le,qe,ct)}function nr(){const Le=Nr();if(Le.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const qe=Ms();ee(s.CloseStatement,"Expected closing statement token");const ct=[];for(;Oe(s.OpenStatement,s.EndMacro);)ct.push(me());return new C(Le,qe,ct)}function Wt(Le=!1){const qe=Le?Nr:Ht,ct=[qe()],fr=be(s.Comma);for(;fr&&(++B,ct.push(qe()),!!be(s.Comma)););return fr?new Y(ct):ct[0]}function Or(){const Le=Wt(!0);if(!(Le instanceof y||Le instanceof Y))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Le.type} instead`);ee(s.In,"Expected `in` keyword following loop variable");const qe=Ht();ee(s.CloseStatement,"Expected closing statement token");const ct=[];for(;Oe(s.OpenStatement,s.EndFor)&&Oe(s.OpenStatement,s.Else);)ct.push(me());const fr=[];if(be(s.OpenStatement,s.Else))for(++B,++B,ee(s.CloseStatement,"Expected closing statement token");Oe(s.OpenStatement,s.EndFor);)fr.push(me());return new E(Le,qe,ct,fr)}function Ht(){return kr()}function kr(){const Le=rs();if(be(s.If)){++B;const qe=rs();if(be(s.Else)){++B;const ct=rs();return new f(qe,[Le],[ct])}else return new te(Le,qe)}return Le}function rs(){let Le=ws();for(;be(s.Or);){const qe=z[B];++B;const ct=ws();Le=new X(qe,Le,ct)}return Le}function ws(){let Le=ss();for(;be(s.And);){const qe=z[B];++B;const ct=ss();Le=new X(qe,Le,ct)}return Le}function ss(){let Le;for(;be(s.Not);){const qe=z[B];++B;const ct=ss();Le=new ue(qe,ct)}return Le??Ps()}function Ps(){let Le=jr();for(;be(s.ComparisonBinaryOperator)||be(s.In)||be(s.NotIn);){const qe=z[B];++B;const ct=jr();Le=new X(qe,Le,ct)}return Le}function jr(){let Le=ns();for(;be(s.AdditiveBinaryOperator);){const qe=z[B];++B;const ct=ns();Le=new X(qe,Le,ct)}return Le}function Cs(){const Le=er(Nr());return be(s.OpenParen)?Hr(Le):Le}function Hr(Le){let qe=new w(Le,Ms());return qe=er(qe),be(s.OpenParen)&&(qe=Hr(qe)),qe}function Ms(){ee(s.OpenParen,"Expected opening parenthesis for arguments list");const Le=Dr();return ee(s.CloseParen,"Expected closing parenthesis for arguments list"),Le}function Dr(){const Le=[];for(;!be(s.CloseParen);){let qe=Ht();if(be(s.Equals)){if(++B,!(qe instanceof y))throw new SyntaxError("Expected identifier for keyword argument");const ct=Ht();qe=new A(qe,ct)}Le.push(qe),be(s.Comma)&&++B}return Le}function Ds(){const Le=[];let qe=!1;for(;!be(s.CloseSquareBracket);)be(s.Colon)?(Le.push(void 0),++B,qe=!0):(Le.push(Ht()),be(s.Colon)&&(++B,qe=!0));if(Le.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(qe){if(Le.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new N(...Le)}return Le[0]}function er(Le){for(;be(s.Dot)||be(s.OpenSquareBracket);){const qe=z[B];++B;let ct;const fr=qe.type!==s.Dot;if(fr)ct=Ds(),ee(s.CloseSquareBracket,"Expected closing square bracket");else if(ct=Nr(),ct.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Le=new v(Le,ct,fr)}return Le}function ns(){let Le=os();for(;be(s.MultiplicativeBinaryOperator);){const qe=z[B];++B;const ct=os();Le=new X(qe,Le,ct)}return Le}function os(){let Le=Ar();for(;be(s.Is);){++B;const qe=be(s.Not);qe&&++B;let ct=Nr();if(ct instanceof H?ct=new y(ct.value.toString()):ct instanceof Q&&(ct=new y("none")),!(ct instanceof y))throw new SyntaxError("Expected identifier for the test");Le=new he(Le,qe,ct)}return Le}function Ar(){let Le=Cs();for(;be(s.Pipe);){++B;let qe=Nr();if(!(qe instanceof y))throw new SyntaxError("Expected identifier for the filter");be(s.OpenParen)&&(qe=Hr(qe)),Le=new re(Le,qe)}return Le}function Nr(){const Le=z[B];switch(Le.type){case s.NumericLiteral:return++B,new O(Number(Le.value));case s.StringLiteral:return++B,new R(Le.value);case s.BooleanLiteral:return++B,new H(Le.value.toLowerCase()==="true");case s.NullLiteral:return++B,new Q(null);case s.Identifier:return++B,new y(Le.value);case s.OpenParen:{++B;const qe=Wt();if(z[B].type!==s.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${z[B].type} instead`);return++B,qe}case s.OpenSquareBracket:{++B;const qe=[];for(;!be(s.CloseSquareBracket);)qe.push(Ht()),be(s.Comma)&&++B;return++B,new L(qe)}case s.OpenCurlyBracket:{++B;const qe=new Map;for(;!be(s.CloseCurlyBracket);){const ct=Ht();ee(s.Colon,"Expected colon between key and value in object literal");const fr=Ht();qe.set(ct,fr),be(s.Comma)&&++B}return++B,new q(qe)}default:throw new SyntaxError(`Unexpected token: ${Le.type}`)}}for(;B<z.length;)ne.body.push(me());return ne}function j(z,ne,B=1){ne===void 0&&(ne=z,z=0);const ee=[];for(let me=z;me<ne;me+=B)ee.push(me);return ee}function ae(z,ne,B,ee=1){const me=Math.sign(ee);me>=0?(ne=(ne??(ne=0))<0?Math.max(z.length+ne,0):Math.min(ne,z.length),B=(B??(B=z.length))<0?Math.max(z.length+B,0):Math.min(B,z.length)):(ne=(ne??(ne=z.length-1))<0?Math.max(z.length+ne,-1):Math.min(ne,z.length-1),B=(B??(B=-1))<-1?Math.max(z.length+B,-1):Math.min(B,z.length-1));const Oe=[];for(let be=ne;me*be<me*B;be+=ee)Oe.push(z[be]);return Oe}function Ae(z){return z.replace(/\b\w/g,ne=>ne.toUpperCase())}var ve=class extends Error{},Ie=class extends Error{},Ve=class{constructor(z=void 0){Z(this,"type","RuntimeValue");Z(this,"value");Z(this,"builtins",new Map);this.value=z}__bool__(){return new le(!!this.value)}},de=class extends Ve{constructor(){super(...arguments);Z(this,"type","NumericValue")}},G=class extends Ve{constructor(){super(...arguments);Z(this,"type","StringValue");Z(this,"builtins",new Map([["upper",new Pe(()=>new G(this.value.toUpperCase()))],["lower",new Pe(()=>new G(this.value.toLowerCase()))],["strip",new Pe(()=>new G(this.value.trim()))],["title",new Pe(()=>new G(Ae(this.value)))],["length",new de(this.value.length)],["rstrip",new Pe(()=>new G(this.value.trimEnd()))],["lstrip",new Pe(()=>new G(this.value.trimStart()))],["startswith",new Pe(ne=>{if(ne.length===0)throw new Error("startswith() requires at least one argument");const B=ne[0];if(!(B instanceof G))throw new Error("startswith() argument must be a string");return new le(this.value.startsWith(B.value))})],["endswith",new Pe(ne=>{if(ne.length===0)throw new Error("endswith() requires at least one argument");const B=ne[0];if(!(B instanceof G))throw new Error("endswith() argument must be a string");return new le(this.value.endsWith(B.value))})],["split",new Pe(ne=>{const B=ne[0]??new Se;if(!(B instanceof G||B instanceof Se))throw new Error("sep argument must be a string or null");const ee=ne[1]??new de(-1);if(!(ee instanceof de))throw new Error("maxsplit argument must be a number");let me=[];if(B instanceof Se){const Oe=this.value.trimStart();for(const{0:be,index:dt}of Oe.matchAll(/\S+/g)){if(ee.value!==-1&&me.length>=ee.value&&dt!==void 0){me.push(be+Oe.slice(dt+be.length));break}me.push(be)}}else{if(B.value==="")throw new Error("empty separator");me=this.value.split(B.value),ee.value!==-1&&me.length>ee.value&&me.push(me.splice(ee.value).join(B.value))}return new Me(me.map(Oe=>new G(Oe)))})]]))}},le=class extends Ve{constructor(){super(...arguments);Z(this,"type","BooleanValue")}},W=class extends Ve{constructor(){super(...arguments);Z(this,"type","ObjectValue");Z(this,"builtins",new Map([["get",new Pe(([ne,B])=>{if(!(ne instanceof G))throw new Error(`Object key must be a string: got ${ne.type}`);return this.value.get(ne.value)??B??new Se})],["items",new Pe(()=>new Me(Array.from(this.value.entries()).map(([ne,B])=>new Me([new G(ne),B]))))]]))}__bool__(){return new le(this.value.size>0)}},we=class extends W{constructor(){super(...arguments);Z(this,"type","KeywordArgumentsValue")}},Me=class extends Ve{constructor(){super(...arguments);Z(this,"type","ArrayValue");Z(this,"builtins",new Map([["length",new de(this.value.length)]]))}__bool__(){return new le(this.value.length>0)}},Ce=class extends Me{constructor(){super(...arguments);Z(this,"type","TupleValue")}},Pe=class extends Ve{constructor(){super(...arguments);Z(this,"type","FunctionValue")}},Se=class extends Ve{constructor(){super(...arguments);Z(this,"type","NullValue")}},Fe=class extends Ve{constructor(){super(...arguments);Z(this,"type","UndefinedValue")}},je=class{constructor(z){Z(this,"variables",new Map([["namespace",new Pe(z=>{if(z.length===0)return new W(new Map);if(z.length!==1||!(z[0]instanceof W))throw new Error("`namespace` expects either zero arguments or a single object argument");return z[0]})]]));Z(this,"tests",new Map([["boolean",z=>z.type==="BooleanValue"],["callable",z=>z instanceof Pe],["odd",z=>{if(z.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${z.type}`);return z.value%2!==0}],["even",z=>{if(z.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${z.type}`);return z.value%2===0}],["false",z=>z.type==="BooleanValue"&&!z.value],["true",z=>z.type==="BooleanValue"&&z.value],["none",z=>z.type==="NullValue"],["string",z=>z.type==="StringValue"],["number",z=>z.type==="NumericValue"],["integer",z=>z.type==="NumericValue"&&Number.isInteger(z.value)],["iterable",z=>z.type==="ArrayValue"||z.type==="StringValue"],["mapping",z=>z.type==="ObjectValue"],["lower",z=>{const ne=z.value;return z.type==="StringValue"&&ne===ne.toLowerCase()}],["upper",z=>{const ne=z.value;return z.type==="StringValue"&&ne===ne.toUpperCase()}],["none",z=>z.type==="NullValue"],["defined",z=>z.type!=="UndefinedValue"],["undefined",z=>z.type==="UndefinedValue"],["equalto",(z,ne)=>z.value===ne.value],["eq",(z,ne)=>z.value===ne.value]]));this.parent=z}set(z,ne){return this.declareVariable(z,Ue(ne))}declareVariable(z,ne){if(this.variables.has(z))throw new SyntaxError(`Variable already declared: ${z}`);return this.variables.set(z,ne),ne}setVariable(z,ne){return this.variables.set(z,ne),ne}resolve(z){if(this.variables.has(z))return this;if(this.parent)return this.parent.resolve(z);throw new Error(`Unknown variable: ${z}`)}lookupVariable(z){try{return this.resolve(z).variables.get(z)??new Fe}catch{return new Fe}}},Ke=class{constructor(z){Z(this,"global");this.global=z??new je}run(z){return this.evaluate(z,this.global)}evaluateBinaryExpression(z,ne){const B=this.evaluate(z.left,ne);switch(z.operator.value){case"and":return B.__bool__().value?this.evaluate(z.right,ne):B;case"or":return B.__bool__().value?B:this.evaluate(z.right,ne)}const ee=this.evaluate(z.right,ne);switch(z.operator.value){case"==":return new le(B.value==ee.value);case"!=":return new le(B.value!=ee.value)}if(B instanceof Fe||ee instanceof Fe)throw new Error("Cannot perform operation on undefined values");if(B instanceof Se||ee instanceof Se)throw new Error("Cannot perform operation on null values");if(B instanceof de&&ee instanceof de)switch(z.operator.value){case"+":return new de(B.value+ee.value);case"-":return new de(B.value-ee.value);case"*":return new de(B.value*ee.value);case"/":return new de(B.value/ee.value);case"%":return new de(B.value%ee.value);case"<":return new le(B.value<ee.value);case">":return new le(B.value>ee.value);case">=":return new le(B.value>=ee.value);case"<=":return new le(B.value<=ee.value)}else if(B instanceof Me&&ee instanceof Me)switch(z.operator.value){case"+":return new Me(B.value.concat(ee.value))}else if(ee instanceof Me){const me=ee.value.find(Oe=>Oe.value===B.value)!==void 0;switch(z.operator.value){case"in":return new le(me);case"not in":return new le(!me)}}if(B instanceof G||ee instanceof G)switch(z.operator.value){case"+":return new G(B.value.toString()+ee.value.toString())}if(B instanceof G&&ee instanceof G)switch(z.operator.value){case"in":return new le(ee.value.includes(B.value));case"not in":return new le(!ee.value.includes(B.value))}if(B instanceof G&&ee instanceof W)switch(z.operator.value){case"in":return new le(ee.value.has(B.value));case"not in":return new le(!ee.value.has(B.value))}throw new SyntaxError(`Unknown operator "${z.operator.value}" between ${B.type} and ${ee.type}`)}evaluateArguments(z,ne){const B=[],ee=new Map;for(const me of z)if(me.type==="KeywordArgumentExpression"){const Oe=me;ee.set(Oe.key.value,this.evaluate(Oe.value,ne))}else{if(ee.size>0)throw new Error("Positional arguments must come before keyword arguments");B.push(this.evaluate(me,ne))}return[B,ee]}evaluateFilterExpression(z,ne){const B=this.evaluate(z.operand,ne);if(z.filter.type==="Identifier"){const ee=z.filter;if(ee.value==="tojson")return new G(ke(B));if(B instanceof Me)switch(ee.value){case"list":return B;case"first":return B.value[0];case"last":return B.value[B.value.length-1];case"length":return new de(B.value.length);case"reverse":return new Me(B.value.reverse());case"sort":return new Me(B.value.sort((me,Oe)=>{if(me.type!==Oe.type)throw new Error(`Cannot compare different types: ${me.type} and ${Oe.type}`);switch(me.type){case"NumericValue":return me.value-Oe.value;case"StringValue":return me.value.localeCompare(Oe.value);default:throw new Error(`Cannot compare type: ${me.type}`)}}));case"join":return new G(B.value.map(me=>me.value).join(""));case"string":return new G(ke(B));default:throw new Error(`Unknown ArrayValue filter: ${ee.value}`)}else if(B instanceof G)switch(ee.value){case"length":return new de(B.value.length);case"upper":return new G(B.value.toUpperCase());case"lower":return new G(B.value.toLowerCase());case"title":return new G(Ae(B.value));case"capitalize":return new G(B.value.charAt(0).toUpperCase()+B.value.slice(1));case"trim":return new G(B.value.trim());case"indent":return new G(B.value.split(`
`).map((me,Oe)=>Oe===0||me.length===0?me:"    "+me).join(`
`));case"join":case"string":return B;default:throw new Error(`Unknown StringValue filter: ${ee.value}`)}else if(B instanceof de)switch(ee.value){case"abs":return new de(Math.abs(B.value));default:throw new Error(`Unknown NumericValue filter: ${ee.value}`)}else if(B instanceof W)switch(ee.value){case"items":return new Me(Array.from(B.value.entries()).map(([me,Oe])=>new Me([new G(me),Oe])));case"length":return new de(B.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ee.value}`)}throw new Error(`Cannot apply filter "${ee.value}" to type: ${B.type}`)}else if(z.filter.type==="CallExpression"){const ee=z.filter;if(ee.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ee.callee.type}`);const me=ee.callee.value;if(me==="tojson"){const[,Oe]=this.evaluateArguments(ee.args,ne),be=Oe.get("indent")??new Se;if(!(be instanceof de||be instanceof Se))throw new Error("If set, indent must be a number");return new G(ke(B,be.value))}else if(me==="join"){let Oe;if(B instanceof G)Oe=Array.from(B.value);else if(B instanceof Me)Oe=B.value.map(tt=>tt.value);else throw new Error(`Cannot apply filter "${me}" to type: ${B.type}`);const[be,dt]=this.evaluateArguments(ee.args,ne),et=be.at(0)??dt.get("separator")??new G("");if(!(et instanceof G))throw new Error("separator must be a string");return new G(Oe.join(et.value))}if(B instanceof Me){switch(me){case"selectattr":case"rejectattr":{const Oe=me==="selectattr";if(B.value.some($t=>!($t instanceof W)))throw new Error(`\`${me}\` can only be applied to array of objects`);if(ee.args.some($t=>$t.type!=="StringLiteral"))throw new Error(`arguments of \`${me}\` must be strings`);const[be,dt,et]=ee.args.map($t=>this.evaluate($t,ne));let tt;if(dt){const $t=ne.tests.get(dt.value);if(!$t)throw new Error(`Unknown test: ${dt.value}`);tt=$t}else tt=(...$t)=>$t[0].__bool__().value;const Zt=B.value.filter($t=>{const nr=$t.value.get(be.value),Wt=nr?tt(nr,et):!1;return Oe?Wt:!Wt});return new Me(Zt)}case"map":{const[,Oe]=this.evaluateArguments(ee.args,ne);if(Oe.has("attribute")){const be=Oe.get("attribute");if(!(be instanceof G))throw new Error("attribute must be a string");const dt=Oe.get("default"),et=B.value.map(tt=>{if(!(tt instanceof W))throw new Error("items in map must be an object");return tt.value.get(be.value)??dt??new Fe});return new Me(et)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${me}`)}else if(B instanceof G){switch(me){case"indent":{const[Oe,be]=this.evaluateArguments(ee.args,ne),dt=Oe.at(0)??be.get("width")??new de(4);if(!(dt instanceof de))throw new Error("width must be a number");const et=Oe.at(1)??be.get("first")??new le(!1),tt=Oe.at(2)??be.get("blank")??new le(!1),Zt=B.value.split(`
`),$t=" ".repeat(dt.value),nr=Zt.map((Wt,Or)=>!et.value&&Or===0||!tt.value&&Wt.length===0?Wt:$t+Wt);return new G(nr.join(`
`))}}throw new Error(`Unknown StringValue filter: ${me}`)}else throw new Error(`Cannot apply filter "${me}" to type: ${B.type}`)}throw new Error(`Unknown filter: ${z.filter.type}`)}evaluateTestExpression(z,ne){const B=this.evaluate(z.operand,ne),ee=ne.tests.get(z.test.value);if(!ee)throw new Error(`Unknown test: ${z.test.value}`);const me=ee(B);return new le(z.negate?!me:me)}evaluateUnaryExpression(z,ne){const B=this.evaluate(z.argument,ne);switch(z.operator.value){case"not":return new le(!B.value);default:throw new SyntaxError(`Unknown operator: ${z.operator.value}`)}}evalProgram(z,ne){return this.evaluateBlock(z.body,ne)}evaluateBlock(z,ne){let B="";for(const ee of z){const me=this.evaluate(ee,ne);me.type!=="NullValue"&&me.type!=="UndefinedValue"&&(B+=me.value)}return new G(B)}evaluateIdentifier(z,ne){return ne.lookupVariable(z.value)}evaluateCallExpression(z,ne){const[B,ee]=this.evaluateArguments(z.args,ne);ee.size>0&&B.push(new we(ee));const me=this.evaluate(z.callee,ne);if(me.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${me.type}`);return me.value(B,ne)}evaluateSliceExpression(z,ne,B){if(!(z instanceof Me||z instanceof G))throw new Error("Slice object must be an array or string");const ee=this.evaluate(ne.start,B),me=this.evaluate(ne.stop,B),Oe=this.evaluate(ne.step,B);if(!(ee instanceof de||ee instanceof Fe))throw new Error("Slice start must be numeric or undefined");if(!(me instanceof de||me instanceof Fe))throw new Error("Slice stop must be numeric or undefined");if(!(Oe instanceof de||Oe instanceof Fe))throw new Error("Slice step must be numeric or undefined");return z instanceof Me?new Me(ae(z.value,ee.value,me.value,Oe.value)):new G(ae(Array.from(z.value),ee.value,me.value,Oe.value).join(""))}evaluateMemberExpression(z,ne){const B=this.evaluate(z.object,ne);let ee;if(z.computed){if(z.property.type==="SliceExpression")return this.evaluateSliceExpression(B,z.property,ne);ee=this.evaluate(z.property,ne)}else ee=new G(z.property.value);let me;if(B instanceof W){if(!(ee instanceof G))throw new Error(`Cannot access property with non-string: got ${ee.type}`);me=B.value.get(ee.value)??B.builtins.get(ee.value)}else if(B instanceof Me||B instanceof G)if(ee instanceof de)me=B.value.at(ee.value),B instanceof G&&(me=new G(B.value.at(ee.value)));else if(ee instanceof G)me=B.builtins.get(ee.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ee.type}`);else{if(!(ee instanceof G))throw new Error(`Cannot access property with non-string: got ${ee.type}`);me=B.builtins.get(ee.value)}return me instanceof Ve?me:new Fe}evaluateSet(z,ne){const B=z.value?this.evaluate(z.value,ne):this.evaluateBlock(z.body,ne);if(z.assignee.type==="Identifier"){const ee=z.assignee.value;ne.setVariable(ee,B)}else if(z.assignee.type==="MemberExpression"){const ee=z.assignee,me=this.evaluate(ee.object,ne);if(!(me instanceof W))throw new Error("Cannot assign to member of non-object");if(ee.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");me.value.set(ee.property.value,B)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(z.assignee)}`);return new Se}evaluateIf(z,ne){const B=this.evaluate(z.test,ne);return this.evaluateBlock(B.__bool__().value?z.body:z.alternate,ne)}evaluateFor(z,ne){const B=new je(ne);let ee,me;if(z.iterable.type==="SelectExpression"){const tt=z.iterable;me=this.evaluate(tt.iterable,B),ee=tt.test}else me=this.evaluate(z.iterable,B);if(!(me instanceof Me))throw new Error(`Expected iterable type in for loop: got ${me.type}`);const Oe=[],be=[];for(let tt=0;tt<me.value.length;++tt){const Zt=new je(B),$t=me.value[tt];let nr;if(z.loopvar.type==="Identifier")nr=Wt=>Wt.setVariable(z.loopvar.value,$t);else if(z.loopvar.type==="TupleLiteral"){const Wt=z.loopvar;if($t.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${$t.type}`);const Or=$t;if(Wt.value.length!==Or.value.length)throw new Error(`Too ${Wt.value.length>Or.value.length?"few":"many"} items to unpack`);nr=Ht=>{for(let kr=0;kr<Wt.value.length;++kr){if(Wt.value[kr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Wt.value[kr].type}`);Ht.setVariable(Wt.value[kr].value,Or.value[kr])}}}else throw new Error(`Invalid loop variable(s): ${z.loopvar.type}`);ee&&(nr(Zt),!this.evaluate(ee,Zt).__bool__().value)||(Oe.push($t),be.push(nr))}let dt="",et=!0;for(let tt=0;tt<Oe.length;++tt){const Zt=new Map([["index",new de(tt+1)],["index0",new de(tt)],["revindex",new de(Oe.length-tt)],["revindex0",new de(Oe.length-tt-1)],["first",new le(tt===0)],["last",new le(tt===Oe.length-1)],["length",new de(Oe.length)],["previtem",tt>0?Oe[tt-1]:new Fe],["nextitem",tt<Oe.length-1?Oe[tt+1]:new Fe]]);B.setVariable("loop",new W(Zt)),be[tt](B);try{const $t=this.evaluateBlock(z.body,B);dt+=$t.value}catch($t){if($t instanceof Ie)continue;if($t instanceof ve)break;throw $t}et=!1}if(et){const tt=this.evaluateBlock(z.defaultBlock,B);dt+=tt.value}return new G(dt)}evaluateMacro(z,ne){return ne.setVariable(z.name.value,new Pe((B,ee)=>{const me=new je(ee);B=B.slice();let Oe;B.at(-1)?.type==="KeywordArgumentsValue"&&(Oe=B.pop());for(let be=0;be<z.args.length;++be){const dt=z.args[be],et=B[be];if(dt.type==="Identifier"){const tt=dt;if(!et)throw new Error(`Missing positional argument: ${tt.value}`);me.setVariable(tt.value,et)}else if(dt.type==="KeywordArgumentExpression"){const tt=dt,Zt=et??Oe?.value.get(tt.key.value)??this.evaluate(tt.value,me);me.setVariable(tt.key.value,Zt)}else throw new Error(`Unknown argument type: ${dt.type}`)}return this.evaluateBlock(z.body,me)})),new Se}evaluate(z,ne){if(z===void 0)return new Fe;switch(z.type){case"Program":return this.evalProgram(z,ne);case"Set":return this.evaluateSet(z,ne);case"If":return this.evaluateIf(z,ne);case"For":return this.evaluateFor(z,ne);case"Macro":return this.evaluateMacro(z,ne);case"Break":throw new ve;case"Continue":throw new Ie;case"NumericLiteral":return new de(Number(z.value));case"StringLiteral":return new G(z.value);case"BooleanLiteral":return new le(z.value);case"NullLiteral":return new Se(z.value);case"ArrayLiteral":return new Me(z.value.map(B=>this.evaluate(B,ne)));case"TupleLiteral":return new Ce(z.value.map(B=>this.evaluate(B,ne)));case"ObjectLiteral":{const B=new Map;for(const[ee,me]of z.value){const Oe=this.evaluate(ee,ne);if(!(Oe instanceof G))throw new Error(`Object keys must be strings: got ${Oe.type}`);B.set(Oe.value,this.evaluate(me,ne))}return new W(B)}case"Identifier":return this.evaluateIdentifier(z,ne);case"CallExpression":return this.evaluateCallExpression(z,ne);case"MemberExpression":return this.evaluateMemberExpression(z,ne);case"UnaryExpression":return this.evaluateUnaryExpression(z,ne);case"BinaryExpression":return this.evaluateBinaryExpression(z,ne);case"FilterExpression":return this.evaluateFilterExpression(z,ne);case"TestExpression":return this.evaluateTestExpression(z,ne);default:throw new SyntaxError(`Unknown node type: ${z.type}`)}}};function Ue(z){switch(typeof z){case"number":return new de(z);case"string":return new G(z);case"boolean":return new le(z);case"undefined":return new Fe;case"object":return z===null?new Se:Array.isArray(z)?new Me(z.map(Ue)):new W(new Map(Object.entries(z).map(([ne,B])=>[ne,Ue(B)])));case"function":return new Pe((ne,B)=>{const ee=z(...ne.map(me=>me.value))??null;return Ue(ee)});default:throw new Error(`Cannot convert to runtime value: ${z}`)}}function ke(z,ne,B){const ee=B??0;switch(z.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(z.value);case"ArrayValue":case"ObjectValue":{const me=ne?" ".repeat(ne):"",Oe=`
`+me.repeat(ee),be=Oe+me;if(z.type==="ArrayValue"){const dt=z.value.map(et=>ke(et,ne,ee+1));return ne?`[${be}${dt.join(`,${be}`)}${Oe}]`:`[${dt.join(", ")}]`}else{const dt=Array.from(z.value.entries()).map(([et,tt])=>{const Zt=`"${et}": ${ke(tt,ne,ee+1)}`;return ne?`${be}${Zt}`:Zt});return ne?`{${dt.join(",")}${Oe}}`:`{${dt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${z.type}`)}}var He=`
`,Ye="{%- ",We=" -%}",pt={MultiplicativeBinaryOperator:2,AdditiveBinaryOperator:1,ComparisonBinaryOperator:0};function at(z,ne="	"){const B=typeof ne=="number"?" ".repeat(ne):ne;return nt(z.body,0,B).replace(/\n$/,"")}function $e(...z){return Ye+z.join(" ")+We}function nt(z,ne,B){return z.map(ee=>Et(ee,ne,B)).join(He)}function Et(z,ne,B){const ee=B.repeat(ne);switch(z.type){case"Program":return nt(z.body,ne,B);case"If":return Qt(z,ne,B);case"For":return Ft(z,ne,B);case"Set":return mr(z,ne,B);case"Macro":return Er(z,ne,B);case"Break":return ee+$e("break");case"Continue":return ee+$e("continue");default:return ee+"{{- "+wt(z)+" -}}"}}function Qt(z,ne,B){const ee=B.repeat(ne),me=[];let Oe=z;for(;Oe&&(me.push({test:Oe.test,body:Oe.body}),Oe.alternate.length===1&&Oe.alternate[0].type==="If");)Oe=Oe.alternate[0];let be=ee+$e("if",wt(me[0].test))+He+nt(me[0].body,ne+1,B);for(let dt=1;dt<me.length;dt++)be+=He+ee+$e("elif",wt(me[dt].test))+He+nt(me[dt].body,ne+1,B);return Oe&&Oe.alternate.length>0&&(be+=He+ee+$e("else")+He+nt(Oe.alternate,ne+1,B)),be+=He+ee+$e("endif"),be}function Ft(z,ne,B){const ee=B.repeat(ne);let me="";if(z.iterable.type==="SelectExpression"){const be=z.iterable;me=`${wt(be.iterable)} if ${wt(be.test)}`}else me=wt(z.iterable);let Oe=ee+$e("for",wt(z.loopvar),"in",me)+He+nt(z.body,ne+1,B);return z.defaultBlock.length>0&&(Oe+=He+ee+$e("else")+He+nt(z.defaultBlock,ne+1,B)),Oe+=He+ee+$e("endfor"),Oe}function mr(z,ne,B){const ee=B.repeat(ne),me=wt(z.assignee),Oe=z.value?wt(z.value):"",be=ee+$e("set",`${me}${z.value?" = "+Oe:""}`);return z.body.length===0?be:be+He+nt(z.body,ne+1,B)+He+ee+$e("endset")}function Er(z,ne,B){const ee=B.repeat(ne),me=z.args.map(wt).join(", ");return ee+$e("macro",`${z.name.value}(${me})`)+He+nt(z.body,ne+1,B)+He+ee+$e("endmacro")}function wt(z,ne=-1){switch(z.type){case"Identifier":return z.value;case"NullLiteral":return"none";case"NumericLiteral":case"BooleanLiteral":return`${z.value}`;case"StringLiteral":return JSON.stringify(z.value);case"BinaryExpression":{const B=z,ee=pt[B.operator.type]??0,me=wt(B.left,ee),Oe=wt(B.right,ee+1),be=`${me} ${B.operator.value} ${Oe}`;return ee<ne?`(${be})`:be}case"UnaryExpression":{const B=z;return B.operator.value+(B.operator.value==="not"?" ":"")+wt(B.argument,1/0)}case"LogicalNegationExpression":return`not ${wt(z.argument,1/0)}`;case"CallExpression":{const B=z,ee=B.args.map(me=>wt(me,-1)).join(", ");return`${wt(B.callee,-1)}(${ee})`}case"MemberExpression":{const B=z;let ee=wt(B.object,-1);B.object.type!=="Identifier"&&(ee=`(${ee})`);let me=wt(B.property,-1);return!B.computed&&B.property.type!=="Identifier"&&(me=`(${me})`),B.computed?`${ee}[${me}]`:`${ee}.${me}`}case"FilterExpression":{const B=z,ee=wt(B.operand,1/0);return B.filter.type==="CallExpression"?`${ee} | ${wt(B.filter,-1)}`:`${ee} | ${B.filter.value}`}case"SelectExpression":{const B=z;return`${wt(B.iterable,-1)} | select(${wt(B.test,-1)})`}case"TestExpression":{const B=z;return`${wt(B.operand,-1)} is${B.negate?" not":""} ${B.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const B=z.value.map(me=>wt(me,-1)),ee=z.type==="ArrayLiteral"?"[]":"()";return`${ee[0]}${B.join(", ")}${ee[1]}`}case"ObjectLiteral":return`{ ${Array.from(z.value.entries()).map(([ee,me])=>`${wt(ee,-1)}: ${wt(me,-1)}`).join(", ")} }`;case"SliceExpression":{const B=z,ee=B.start?wt(B.start,-1):"",me=B.stop?wt(B.stop,-1):"",Oe=B.step?`:${wt(B.step,-1)}`:"";return`${ee}:${me}${Oe}`}case"KeywordArgumentExpression":{const B=z;return`${B.key.value}=${wt(B.value,-1)}`}case"If":{const B=z,ee=wt(B.test,-1),me=wt(B.body[0],0),Oe=wt(B.alternate[0],-1);return`${me} if ${ee} else ${Oe}`}default:throw new Error(`Unknown expression type: ${z.type}`)}}var ts=class{constructor(z){Z(this,"parsed");const ne=c(z,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=K(ne)}render(z){const ne=new je;if(ne.set("false",!1),ne.set("true",!0),ne.set("raise_exception",me=>{throw new Error(me)}),ne.set("range",j),z)for(const[me,Oe]of Object.entries(z))ne.set(me,Oe);return new Ke(ne).run(this.parsed).value}format(z){return at(this.parsed,z?.indent||"	")}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>a.Tensor,createInferenceSession:()=>k,deviceToExecutionProviders:()=>f,isONNXProxy:()=>C,isONNXTensor:()=>b});var n=t("./src/env.js"),o=t("?2ce3"),i=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),u=[];let p,c;const d=Symbol.for("onnxruntime");if(d in globalThis)c=globalThis[d];else if(n.apis.IS_NODE_ENV){switch(c=o??(s||(s=t.t(o,2))),process.platform){case"win32":u.push("dml");break;case"linux":process.arch==="x64"&&u.push("cuda");break}u.push("cpu"),p=["cpu"]}else c=i,n.apis.IS_WEBNN_AVAILABLE&&u.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),n.apis.IS_WEBGPU_AVAILABLE&&u.push("webgpu"),u.push("wasm"),p=["wasm"];const _=c.InferenceSession;function f(x=null){if(!x)return p;switch(x){case"auto":return u;case"gpu":return u.filter(v=>["webgpu","cuda","dml","webnn-gpu"].includes(v))}if(u.includes(x))return[l[x]??x];throw new Error(`Unsupported device: "${x}". Should be one of: ${u.join(", ")}.`)}let E=null;async function k(x,v,w){E&&await E;const y=_.create(x,v);E??(E=y);const S=await y;return S.config=w,S}function b(x){return x instanceof c.Tensor}const g=c?.env;g?.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!g.wasm.wasmPaths&&(g.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${n.env.version}/dist/`),g.wasm.proxy=!1),g?.webgpu&&(g.webgpu.powerPreference="high-performance");function C(){return g?.wasm?.proxy}n.env.backends.onnx=g},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>i,validate_audio_inputs:()=>a});var s=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),o=t("./src/utils/hub.js");class i extends n.Callable{constructor(u){super(),this.config=u}static async from_pretrained(u,p){const c=await(0,o.getModelJSON)(u,s.FEATURE_EXTRACTOR_NAME,!0,p);return new this(c)}}function a(l,u){if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${u} expects input to be a Float32Array or a Float64Array, but got ${l?.constructor?.name??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>x,center_to_corners_format:()=>c,post_process_instance_segmentation:()=>C,post_process_object_detection:()=>d,post_process_panoptic_segmentation:()=>g,post_process_semantic_segmentation:()=>_});var s=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),o=t("./src/utils/maths.js");t("./src/utils/image.js");var i=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function u(v,w,y=0,S=null){const O=v/w;let R=(0,o.bankers_round)(O)*w;return S!==null&&R>S&&(R=Math.floor(O)*w),R<y&&(R=Math.ceil(O)*w),R}function p([v,w],y){return[Math.max(Math.floor(v/y),1)*y,Math.max(Math.floor(w/y),1)*y]}function c([v,w,y,S]){return[v-y/2,w-S/2,v+y/2,w+S/2]}function d(v,w=.5,y=null,S=!1){const O=v.logits,R=v.pred_boxes,[H,Q,L]=O.dims;if(y!==null&&y.length!==H)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Y=[];for(let q=0;q<H;++q){let X=y!==null?y[q]:null,re={boxes:[],classes:[],scores:[]},te=O[q],he=R[q];for(let ue=0;ue<Q;++ue){let N=te[ue],A=[],K;if(S){K=N.sigmoid().data;for(let j=0;j<K.length;++j)K[j]>w&&A.push(j)}else{let j=(0,o.max)(N.data)[1];if(j===L-1||(K=(0,o.softmax)(N.data),K[j]<w))continue;A.push(j)}for(const j of A){let ae=he[ue].data;ae=c(ae),X!==null&&(ae=ae.map((Ae,ve)=>Ae*X[(ve+1)%2])),re.boxes.push(ae),re.classes.push(j),re.scores.push(K[j])}}Y.push(re)}return Y}function _(v,w=null){const y=v.logits,S=y.dims[0];if(w!==null&&w.length!==S)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const O=[];for(let R=0;R<S;++R){const H=w!==null?w[R]:null;let Q=y[R];H!==null&&(Q=(0,n.interpolate)(Q,H,"bilinear",!1));const[L,Y]=H??Q.dims.slice(-2),q=new n.Tensor("int32",new Int32Array(L*Y),[L,Y]),X=Q[0].data,re=q.data;for(let ue=1;ue<Q.dims[0];++ue){const N=Q[ue].data;for(let A=0;A<N.length;++A)N[A]>X[A]&&(X[A]=N[A],re[A]=ue)}const te=new Array(Q.dims[0]);for(let ue=0;ue<re.length;++ue){const N=re[ue];te[N]=N}const he=te.filter(ue=>ue!==void 0);O.push({segmentation:q,labels:he})}return O}function f(v,w,y,S){const O=[],R=[],H=[];for(let Q=0;Q<v.dims[0];++Q){const L=v[Q],Y=w[Q],q=(0,o.max)(L.data)[1];if(q===S)continue;const re=(0,o.softmax)(L.data)[q];re>y&&(O.push(Y),R.push(re),H.push(q))}return[O,R,H]}function E(v,w,y,S=.5,O=.8){const R=[];let H=0,Q=0;const L=w[y].data;for(let q=0;q<v.length;++q)v[q]===y&&(R.push(q),++H),L[q]>=S&&++Q;let Y=H>0&&Q>0;return Y&&(Y=H/Q>O),[Y,R]}function k(v,w,y,S,O,R=null,H=null){const[Q,L]=H??v[0].dims,Y=new n.Tensor("int32",new Int32Array(Q*L),[Q,L]),q=[];if(H!==null)for(let ue=0;ue<v.length;++ue)v[ue]=(0,n.interpolate)(v[ue],H,"bilinear",!1);const X=new Int32Array(v[0].data.length),re=new Float32Array(v[0].data.length);for(let ue=0;ue<v.length;++ue){let N=w[ue];const A=v[ue].data;for(let K=0;K<A.length;++K)A[K]*=N,A[K]>re[K]&&(X[K]=ue,re[K]=A[K])}let te=0;const he=Y.data;for(let ue=0;ue<y.length;++ue){const N=y[ue],[A,K]=E(X,v,ue,S,O);if(A){++te;for(const j of K)he[j]=te;q.push({id:te,label_id:N,score:w[ue]})}}return[Y,q]}function b(v,w,y=28,S=56*56,O=14*14*4*1280){if(v<y||w<y)throw new Error(`height:${v} or width:${w} must be larger than factor:${y}`);if(Math.max(v,w)/Math.min(v,w)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(v,w)/Math.min(v,w)}`);let R=Math.round(v/y)*y,H=Math.round(w/y)*y;if(R*H>O){const Q=Math.sqrt(v*w/O);R=Math.floor(v/Q/y)*y,H=Math.floor(w/Q/y)*y}else if(R*H<S){const Q=Math.sqrt(S/(v*w));R=Math.ceil(v*Q/y)*y,H=Math.ceil(w*Q/y)*y}return[R,H]}function g(v,w=.5,y=.5,S=.8,O=null,R=null){O===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),O=new Set);const H=v.class_queries_logits??v.logits,L=(v.masks_queries_logits??v.pred_masks).sigmoid();let[Y,q,X]=H.dims;if(X-=1,R!==null&&R.length!==Y)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let re=[];for(let te=0;te<Y;++te){let he=R!==null?R[te]:null,ue=H[te],N=L[te],[A,K,j]=f(ue,N,w,X);if(j.length===0){let[ve,Ie]=he??N.dims.slice(-2),Ve=new n.Tensor("int32",new Int32Array(ve*Ie).fill(-1),[ve,Ie]);re.push({segmentation:Ve,segments_info:[]});continue}let[ae,Ae]=k(A,K,j,y,S,O,he);re.push({segmentation:ae,segments_info:Ae})}return re}function C(v,w=.5,y=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class x extends s.Callable{constructor(w){super(),this.image_mean=w.image_mean??w.mean,this.image_std=w.image_std??w.std,this.resample=w.resample??2,this.do_rescale=w.do_rescale??!0,this.rescale_factor=w.rescale_factor??1/255,this.do_normalize=w.do_normalize,this.do_thumbnail=w.do_thumbnail,this.size=w.size??w.image_size,this.do_resize=w.do_resize??this.size!==void 0,this.size_divisibility=w.size_divisibility??w.size_divisor,this.do_center_crop=w.do_center_crop,this.crop_size=w.crop_size,this.do_convert_rgb=w.do_convert_rgb??!0,this.do_crop_margin=w.do_crop_margin,this.pad_size=w.pad_size,this.do_pad=w.do_pad,this.min_pixels=w.min_pixels,this.max_pixels=w.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=w.do_flip_channel_order??!1,this.config=w}async thumbnail(w,y,S=2){const O=w.height,R=w.width,H=y.height,Q=y.width;let L=Math.min(O,H),Y=Math.min(R,Q);return L===O&&Y===R?w:(O>R?Y=Math.floor(R*L/O):R>O&&(L=Math.floor(O*Y/R)),await w.resize(Y,L,{resample:S}))}async crop_margin(w,y=200){const S=w.clone().grayscale(),O=(0,o.min)(S.data)[0],H=(0,o.max)(S.data)[0]-O;if(H===0)return w;const Q=y/255;let L=S.width,Y=S.height,q=0,X=0;const re=S.data;for(let te=0;te<S.height;++te){const he=te*S.width;for(let ue=0;ue<S.width;++ue)(re[he+ue]-O)/H<Q&&(L=Math.min(L,ue),Y=Math.min(Y,te),q=Math.max(q,ue),X=Math.max(X,te))}return w=await w.crop([L,Y,q,X]),w}pad_image(w,y,S,{mode:O="constant",center:R=!1,constant_values:H=0}={}){const[Q,L,Y]=y;let q,X;if(typeof S=="number"?(q=S,X=S):S==="square"?q=X=Math.max(Q,L):(q=S.width,X=S.height),q!==L||X!==Q){const re=new Float32Array(q*X*Y);if(Array.isArray(H))for(let ue=0;ue<re.length;++ue)re[ue]=H[ue%Y];else H!==0&&re.fill(H);const[te,he]=R?[Math.floor((q-L)/2),Math.floor((X-Q)/2)]:[0,0];for(let ue=0;ue<Q;++ue){const N=(ue+he)*q,A=ue*L;for(let K=0;K<L;++K){const j=(N+K+te)*Y,ae=(A+K)*Y;for(let Ae=0;Ae<Y;++Ae)re[j+Ae]=w[ae+Ae]}}if(O==="symmetric"){if(R)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ue=Q-1,N=L-1;for(let A=0;A<X;++A){const K=A*q,j=(0,i.calculateReflectOffset)(A,ue)*L;for(let ae=0;ae<q;++ae){if(A<Q&&ae<L)continue;const Ae=(K+ae)*Y,ve=(j+(0,i.calculateReflectOffset)(ae,N))*Y;for(let Ie=0;Ie<Y;++Ie)re[Ae+Ie]=w[ve+Ie]}}}w=re,y=[X,q,Y]}return[w,y]}rescale(w){for(let y=0;y<w.length;++y)w[y]=this.rescale_factor*w[y]}get_resize_output_image_size(w,y){const[S,O]=w.size;let R,H;if(this.do_thumbnail){const{height:Q,width:L}=y;R=Math.min(Q,L)}else Number.isInteger(y)?(R=y,H=this.config.max_size??R):y!==void 0&&(R=y.shortest_edge,H=y.longest_edge);if(R!==void 0||H!==void 0){const Q=R===void 0?1:Math.max(R/S,R/O),L=S*Q,Y=O*Q,q=H===void 0?1:Math.min(H/L,H/Y);let X=Math.floor(Number((L*q).toFixed(2))),re=Math.floor(Number((Y*q).toFixed(2)));return this.size_divisibility!==void 0&&([X,re]=p([X,re],this.size_divisibility)),[X,re]}else if(y!==void 0&&y.width!==void 0&&y.height!==void 0){let Q=y.width,L=y.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Y=L/O,q=Q/S;Math.abs(1-q)<Math.abs(1-Y)?Y=q:q=Y,L=u(Y*O,this.config.ensure_multiple_of),Q=u(q*S,this.config.ensure_multiple_of)}return[Q,L]}else{if(this.size_divisibility!==void 0)return p([S,O],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const Q=this.config.patch_size*this.config.merge_size;return b(O,S,Q,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(y)}`)}}async resize(w){const[y,S]=this.get_resize_output_image_size(w,this.size);return await w.resize(y,S,{resample:this.resample})}async preprocess(w,{do_normalize:y=null,do_pad:S=null,do_convert_rgb:O=null,do_convert_grayscale:R=null,do_flip_channel_order:H=null}={}){this.do_crop_margin&&(w=await this.crop_margin(w));const[Q,L]=w.size;if(O??this.do_convert_rgb?w=w.rgb():R&&(w=w.grayscale()),this.do_resize&&(w=await this.resize(w)),this.do_thumbnail&&(w=await this.thumbnail(w,this.size,this.resample)),this.do_center_crop){let te,he;Number.isInteger(this.crop_size)?(te=this.crop_size,he=this.crop_size):(te=this.crop_size.width,he=this.crop_size.height),w=await w.center_crop(te,he)}const Y=[w.height,w.width];let q=Float32Array.from(w.data),X=[w.height,w.width,w.channels];if(this.do_rescale&&this.rescale(q),y??this.do_normalize){let te=this.image_mean;Array.isArray(this.image_mean)||(te=new Array(w.channels).fill(te));let he=this.image_std;if(Array.isArray(this.image_std)||(he=new Array(w.channels).fill(te)),te.length!==w.channels||he.length!==w.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${te.length}) and \`image_std\` (${he.length}) must match the number of channels in the image (${w.channels}).`);for(let ue=0;ue<q.length;ue+=w.channels)for(let N=0;N<w.channels;++N)q[ue+N]=(q[ue+N]-te[N])/he[N]}if(S??this.do_pad){if(this.pad_size)[q,X]=this.pad_image(q,[w.height,w.width,w.channels],this.pad_size);else if(this.size_divisibility){const[te,he]=p([X[1],X[0]],this.size_divisibility);[q,X]=this.pad_image(q,X,{width:te,height:he})}}if(H??this.do_flip_channel_order){if(X[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let te=0;te<q.length;te+=3){const he=q[te];q[te]=q[te+2],q[te+2]=he}}const re=new n.Tensor("float32",q,X).permute(2,0,1);return{original_size:[L,Q],reshaped_input_size:Y,pixel_values:re}}async _call(w,...y){Array.isArray(w)||(w=[w]);const S=await Promise.all(w.map(R=>this.preprocess(R)));return{pixel_values:(0,n.stack)(S.map(R=>R.pixel_values),0),original_sizes:S.map(R=>R.original_size),reshaped_input_sizes:S.map(R=>R.reshaped_input_size)}}static async from_pretrained(w,y){const S=await(0,a.getModelJSON)(w,l.IMAGE_PROCESSOR_NAME,!0,y);return new this(S)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>i});var s=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),o=t("./src/utils/hub.js");class i extends n.Callable{constructor(l,u){super(),this.config=l,this.components=u}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,u={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,...u})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...u){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...u);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,u){const[p,c]=await Promise.all([this.uses_processor_config?(0,o.getModelJSON)(l,s.PROCESSOR_NAME,!0,u):{},Promise.all(this.classes.filter(d=>d in this).map(async d=>{const _=await this[d].from_pretrained(l,u);return[d.replace(/_class$/,""),_]})).then(Object.fromEntries)]);return new this(p,c)}}Z(i,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Z(i,"uses_processor_config",!1)},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>u,PretrainedConfig:()=>l,getKeyValueShapes:()=>a});var s=t("./src/utils/core.js"),n=t("./src/utils/hub.js");async function o(p,c){return await(0,n.getModelJSON)(p,"config.json",!0,c)}function i(p){const c={};let d={};switch(p.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":d=i(p.text_config);break;case"moondream1":d=i(p.phi_config);break;case"musicgen":d=i(p.decoder);break;case"multi_modality":d=i(p.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":c.num_heads="n_head",c.num_layers="n_layer",c.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":c.num_heads="num_attention_heads",c.num_layers="num_hidden_layers",c.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":c.num_heads="num_key_value_heads",c.num_layers="num_hidden_layers",c.hidden_size="hidden_size",c.num_attention_heads="num_attention_heads";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"glm":case"helium":c.num_heads="num_key_value_heads",c.num_layers="num_hidden_layers",c.dim_kv="head_dim";break;case"openelm":c.num_heads="num_kv_heads",c.num_layers="num_transformer_layers",c.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":c.num_heads="num_heads",c.num_layers="num_layers",c.hidden_size="hidden_size";break;case"bloom":c.num_heads="n_head",c.num_layers="n_layer",c.hidden_size="hidden_size";break;case"mpt":c.num_heads="n_heads",c.num_layers="n_layers",c.hidden_size="d_model";break;case"exaone":c.num_heads="num_key_value_heads",c.num_layers="num_layers",c.dim_kv="head_dim",c.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":c.num_decoder_layers="num_decoder_layers",c.num_decoder_heads="num_heads",c.decoder_dim_kv="d_kv",c.num_encoder_layers="num_layers",c.num_encoder_heads="num_heads",c.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":c.num_decoder_layers="decoder_layers",c.num_decoder_heads="decoder_attention_heads",c.decoder_hidden_size="d_model",c.num_encoder_layers="encoder_layers",c.num_encoder_heads="encoder_attention_heads",c.encoder_hidden_size="d_model";break;case"speecht5":c.num_decoder_layers="decoder_layers",c.num_decoder_heads="decoder_attention_heads",c.decoder_hidden_size="hidden_size",c.num_encoder_layers="encoder_layers",c.num_encoder_heads="encoder_attention_heads",c.encoder_hidden_size="hidden_size";break;case"trocr":c.num_encoder_layers=c.num_decoder_layers="decoder_layers",c.num_encoder_heads=c.num_decoder_heads="decoder_attention_heads",c.encoder_hidden_size=c.decoder_hidden_size="d_model";break;case"musicgen_decoder":c.num_encoder_layers=c.num_decoder_layers="num_hidden_layers",c.num_encoder_heads=c.num_decoder_heads="num_attention_heads",c.encoder_hidden_size=c.decoder_hidden_size="hidden_size";break;case"moonshine":c.num_decoder_layers="decoder_num_hidden_layers",c.num_decoder_heads="decoder_num_key_value_heads",c.num_encoder_layers="encoder_num_hidden_layers",c.num_encoder_heads="encoder_num_key_value_heads",c.encoder_hidden_size=c.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const f=i(p.decoder),E="num_decoder_layers"in f,k=(0,s.pick)(p,["model_type","is_encoder_decoder"]);return E?(k.num_decoder_layers=f.num_decoder_layers,k.num_decoder_heads=f.num_decoder_heads,k.decoder_hidden_size=f.decoder_hidden_size,k.num_encoder_layers=f.num_encoder_layers,k.num_encoder_heads=f.num_encoder_heads,k.encoder_hidden_size=f.encoder_hidden_size):(k.num_layers=f.num_layers,k.num_heads=f.num_heads,k.hidden_size=f.hidden_size),k}const _={...d,...(0,s.pick)(p,["model_type","multi_query","is_encoder_decoder"])};for(const f in c)_[f]=p[c[f]];return _}function a(p,{prefix:c="past_key_values",batch_size:d=1}={}){const _={},f=p.normalized_config;if(f.is_encoder_decoder&&"num_encoder_heads"in f&&"num_decoder_heads"in f){const E=f.encoder_dim_kv??f.encoder_hidden_size/f.num_encoder_heads,k=f.decoder_dim_kv??f.decoder_hidden_size/f.num_decoder_heads,b=[d,f.num_encoder_heads,0,E],g=[d,f.num_decoder_heads,0,k];for(let C=0;C<f.num_decoder_layers;++C)_[`${c}.${C}.encoder.key`]=b,_[`${c}.${C}.encoder.value`]=b,_[`${c}.${C}.decoder.key`]=g,_[`${c}.${C}.decoder.value`]=g}else{const E=f.num_heads,k=f.num_layers,b=f.dim_kv??f.hidden_size/(f.num_attention_heads??E);if(f.model_type==="falcon"){const g=[d*E,0,b];for(let C=0;C<k;++C)_[`${c}.${C}.key`]=g,_[`${c}.${C}.value`]=g}else if(f.multi_query){const g=[d*E,0,2*b];for(let C=0;C<k;++C)_[`${c}.${C}.key_value`]=g}else if(f.model_type==="bloom"){const g=[d*E,b,0],C=[d*E,0,b];for(let x=0;x<k;++x)_[`${c}.${x}.key`]=g,_[`${c}.${x}.value`]=C}else if(f.model_type==="openelm")for(let g=0;g<k;++g){const C=[d,E[g],0,b];_[`${c}.${g}.key`]=C,_[`${c}.${g}.value`]=C}else{const g=[d,E,0,b];for(let C=0;C<k;++C)_[`${c}.${C}.key`]=g,_[`${c}.${C}.value`]=g}}return _}class l{constructor(c){Z(this,"model_type",null);Z(this,"is_encoder_decoder",!1);Z(this,"max_position_embeddings");Z(this,"transformers.js_config");Object.assign(this,c),this.normalized_config=i(this)}static async from_pretrained(c,{progress_callback:d=null,config:_=null,cache_dir:f=null,local_files_only:E=!1,revision:k="main"}={}){_&&!(_ instanceof l)&&(_=new l(_));const b=_??await o(c,{progress_callback:d,config:_,cache_dir:f,local_files_only:E,revision:k});return new this(b)}}class u{static async from_pretrained(...c){return l.from_pretrained(...c)}}},"./src/env.js":(e,r,t)=>{t.r(r),t.d(r,{apis:()=>k,env:()=>w});var s=t("?569f"),n=t("?3f59"),o=t("?154a");const i="3.5.1",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&self.constructor?.name==="DedicatedWorkerGlobalScope",u=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,c=typeof navigator<"u"&&"ml"in navigator,d=typeof process<"u",_=d&&process?.release?.name==="node",f=!y(s),E=!y(n),k=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:u,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:c,IS_PROCESS_AVAILABLE:d,IS_NODE_ENV:_,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:E}),b=f&&E;let g="./";if(b){const S=Object({url:self.location.href}).url;S?g=n.dirname(n.dirname(o.fileURLToPath(S))):typeof __dirname<"u"&&(g=n.dirname(__dirname))}const C=b?n.join(g,"/.cache/"):null,x="/models/",v=b?n.join(g,x):x,w={version:i,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:v,useFS:f,useBrowserCache:u,useFSCache:f,cacheDir:C,useCustomCache:!1,customCache:null};function y(S){return Object.keys(S).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>n});var s=t("./src/utils/core.js");class n{constructor(i){Z(this,"max_length",20);Z(this,"max_new_tokens",null);Z(this,"min_length",0);Z(this,"min_new_tokens",null);Z(this,"early_stopping",!1);Z(this,"max_time",null);Z(this,"do_sample",!1);Z(this,"num_beams",1);Z(this,"num_beam_groups",1);Z(this,"penalty_alpha",null);Z(this,"use_cache",!0);Z(this,"temperature",1);Z(this,"top_k",50);Z(this,"top_p",1);Z(this,"typical_p",1);Z(this,"epsilon_cutoff",0);Z(this,"eta_cutoff",0);Z(this,"diversity_penalty",0);Z(this,"repetition_penalty",1);Z(this,"encoder_repetition_penalty",1);Z(this,"length_penalty",1);Z(this,"no_repeat_ngram_size",0);Z(this,"bad_words_ids",null);Z(this,"force_words_ids",null);Z(this,"renormalize_logits",!1);Z(this,"constraints",null);Z(this,"forced_bos_token_id",null);Z(this,"forced_eos_token_id",null);Z(this,"remove_invalid_values",!1);Z(this,"exponential_decay_length_penalty",null);Z(this,"suppress_tokens",null);Z(this,"streamer",null);Z(this,"begin_suppress_tokens",null);Z(this,"forced_decoder_ids",null);Z(this,"guidance_scale",null);Z(this,"num_return_sequences",1);Z(this,"output_attentions",!1);Z(this,"output_hidden_states",!1);Z(this,"output_scores",!1);Z(this,"return_dict_in_generate",!1);Z(this,"pad_token_id",null);Z(this,"bos_token_id",null);Z(this,"eos_token_id",null);Z(this,"encoder_no_repeat_ngram_size",0);Z(this,"decoder_start_token_id",null);Z(this,"generation_kwargs",{});Object.assign(this,(0,s.pick)(i,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>b,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>u,LogitsProcessor:()=>o,LogitsProcessorList:()=>a,LogitsWarper:()=>i,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>E,NoBadWordsLogitsProcessor:()=>k,NoRepeatNGramLogitsProcessor:()=>d,RepetitionPenaltyLogitsProcessor:()=>_,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>g,TopKLogitsWarper:()=>x,TopPLogitsWarper:()=>C,WhisperTimeStampLogitsProcessor:()=>c});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var n=t("./src/utils/maths.js");class o extends s.Callable{_call(w,y){throw Error("`_call` should be implemented in a subclass")}}class i extends s.Callable{_call(w,y){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{constructor(){super(),this.processors=[]}push(w){this.processors.push(w)}extend(w){this.processors.push(...w)}_call(w,y){let S=y;for(const O of this.processors)S=O(w,S);return S}[Symbol.iterator](){return this.processors.values()}}class l extends o{constructor(w){super(),this.bos_token_id=w}_call(w,y){for(let S=0;S<w.length;++S)if(w[S].length===1){const O=y[S].data;O.fill(-1/0),O[this.bos_token_id]=0}return y}}class u extends o{constructor(w,y){super(),this.max_length=w,this.eos_token_id=Array.isArray(y)?y:[y]}_call(w,y){for(let S=0;S<w.length;++S)if(w[S].length===this.max_length-1){const O=y[S].data;O.fill(-1/0);for(const R of this.eos_token_id)O[R]=0}return y}}class p extends o{constructor(w,y){super(),this.begin_suppress_tokens=w,this.begin_index=y}_call(w,y){for(let S=0;S<w.length;++S)if(w[S].length===this.begin_index){const O=y[S].data;for(const R of this.begin_suppress_tokens)O[R]=-1/0}return y}}class c extends o{constructor(w,y){super(),this.eos_token_id=Array.isArray(w.eos_token_id)?w.eos_token_id[0]:w.eos_token_id,this.no_timestamps_token_id=w.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=y.length,y.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=w.max_initial_timestamp_index}_call(w,y){for(let S=0;S<w.length;++S){const O=y[S].data;if(O[this.no_timestamps_token_id]=-1/0,w[S].length===this.begin_index-1){O.fill(-1/0),O[this.timestamp_begin]=0;continue}const R=w[S].slice(this.begin_index),H=R.length>=1&&R[R.length-1]>=this.timestamp_begin,Q=R.length<2||R[R.length-2]>=this.timestamp_begin;if(H&&(Q?O.subarray(this.timestamp_begin).fill(-1/0):O.subarray(0,this.eos_token_id).fill(-1/0)),w[S].length===this.begin_index&&this.max_initial_timestamp_index!==null){const X=this.timestamp_begin+this.max_initial_timestamp_index;O.subarray(X+1).fill(-1/0)}const L=(0,n.log_softmax)(O),Y=Math.log(L.subarray(this.timestamp_begin).map(Math.exp).reduce((X,re)=>X+re)),q=(0,n.max)(L.subarray(0,this.timestamp_begin))[0];Y>q&&O.subarray(0,this.timestamp_begin).fill(-1/0)}return y}}class d extends o{constructor(w){super(),this.no_repeat_ngram_size=w}getNgrams(w){const y=w.length,S=[];for(let R=0;R<y+1-this.no_repeat_ngram_size;++R){const H=[];for(let Q=0;Q<this.no_repeat_ngram_size;++Q)H.push(w[R+Q]);S.push(H.map(Number))}const O=new Map;for(const R of S){const H=R.slice(0,R.length-1),Q=JSON.stringify(H),L=O.get(Q)??[];L.push(R[R.length-1]),O.set(Q,L)}return O}getGeneratedNgrams(w,y){const S=y.slice(y.length+1-this.no_repeat_ngram_size,y.length);return w.get(JSON.stringify(S.map(Number)))??[]}calcBannedNgramTokens(w){const y=[];if(w.length+1<this.no_repeat_ngram_size)return y;{const S=this.getNgrams(w);return this.getGeneratedNgrams(S,w)}}_call(w,y){for(let S=0;S<w.length;++S){const O=y[S].data,R=this.calcBannedNgramTokens(w[S]);for(const H of R)O[H]=-1/0}return y}}class _ extends o{constructor(w){super(),this.penalty=w}_call(w,y){for(let S=0;S<w.length;++S){const O=y[S].data;for(const R of new Set(w[S])){const H=Number(R);O[H]<0?O[H]*=this.penalty:O[H]/=this.penalty}}return y}}class f extends o{constructor(w,y){super(),this.min_length=w,this.eos_token_id=Array.isArray(y)?y:[y]}_call(w,y){for(let S=0;S<w.length;++S)if(w[S].length<this.min_length){const O=y[S].data;for(const R of this.eos_token_id)O[R]=-1/0}return y}}class E extends o{constructor(w,y,S){super(),this.prompt_length_to_skip=w,this.min_new_tokens=y,this.eos_token_id=Array.isArray(S)?S:[S]}_call(w,y){for(let S=0;S<w.length;++S)if(w[S].length-this.prompt_length_to_skip<this.min_new_tokens){const R=y[S].data;for(const H of this.eos_token_id)R[H]=-1/0}return y}}class k extends o{constructor(w,y){super(),this.bad_words_ids=w,this.eos_token_id=Array.isArray(y)?y:[y]}_call(w,y){for(let S=0;S<w.length;++S){const O=y[S].data,R=w[S];for(const H of this.bad_words_ids){if(R.length<H.length-1)continue;let Q=!0;for(let L=1;L<=H.length-1;++L)if(H.at(-L-1)!=R.at(-L)){Q=!1;break}Q&&(O[H.at(-1)]=-1/0)}}return y}}class b extends o{constructor(w){if(super(),w<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${w}.`);this.guidance_scale=w}_call(w,y){if(y.dims[0]!==2*w.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${y.dims[0]} for the logits and ${w.length} for the input ids.`);const S=w.length,O=y.slice([0,S],null),R=y.slice([S,y.dims[0]],null);for(let H=0;H<R.data.length;++H)R.data[H]+=(O.data[H]-R.data[H])*this.guidance_scale;return R}}class g extends i{constructor(w){super(),this.temperature=w}_call(w,y){const S=y.data;for(let O=0;O<S.length;++O)S[O]/=this.temperature;return y}}class C extends i{constructor(w,{filter_value:y=-1/0,min_tokens_to_keep:S=1}={}){if(super(),w<0||w>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${w}`);if(!Number.isInteger(S)||S<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${S}`);this.top_p=w,this.filter_value=y,this.min_tokens_to_keep=S}}class x extends i{constructor(w,{filter_value:y=-1/0,min_tokens_to_keep:S=1}={}){if(super(),!Number.isInteger(w)||w<0)throw new Error(`\`top_k\` must be a positive integer, but is ${w}`);this.top_k=Math.max(w,S),this.filter_value=y}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>i});var s=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),o=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class i extends s.Callable{constructor(c){super(),this.generation_config=c}async _call(c){return this.sample(c)}async sample(c){throw Error("sample should be implemented in subclasses.")}getLogits(c,d){let _=c.dims.at(-1),f=c.data;if(d===-1)f=f.slice(-_);else{let E=d*_;f=f.slice(E,E+_)}return f}randomSelect(c){let d=0;for(let f=0;f<c.length;++f)d+=c[f];let _=Math.random()*d;for(let f=0;f<c.length;++f)if(_-=c[f],_<=0)return f;return 0}static getSampler(c){if(c.do_sample)return new l(c);if(c.num_beams>1)return new u(c);if(c.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${c.num_return_sequences}.`);return new a(c)}}class a extends i{async sample(c){const d=(0,o.max)(c.data)[1];return[[BigInt(d),0]]}}class l extends i{async sample(c){let d=c.dims.at(-1);this.generation_config.top_k>0&&(d=Math.min(this.generation_config.top_k,d));const[_,f]=await(0,n.topk)(c,d),E=(0,o.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},()=>{const k=this.randomSelect(E);return[f.data[k],Math.log(E[k])]})}}class u extends i{async sample(c){let d=c.dims.at(-1);this.generation_config.top_k>0&&(d=Math.min(this.generation_config.top_k,d));const[_,f]=await(0,n.topk)(c,d),E=(0,o.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},(k,b)=>[f.data[b],Math.log(E[b])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>i,StoppingCriteria:()=>n,StoppingCriteriaList:()=>o});var s=t("./src/utils/generic.js");class n extends s.Callable{_call(p,c){throw Error("StoppingCriteria needs to be subclassed")}}class o extends s.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof o?p=p.criteria:p instanceof n&&(p=[p]),this.criteria.push(...p)}_call(p,c){const d=new Array(p.length).fill(!1);for(const _ of this.criteria){const f=_(p,c);for(let E=0;E<d.length;++E)d[E]||(d[E]=f[E])}return d}[Symbol.iterator](){return this.criteria.values()}}class i extends n{constructor(p,c=null){super(),this.max_length=p,this.max_position_embeddings=c}_call(p){return p.map(c=>c.length>=this.max_length)}}class a extends n{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,c){return p.map(d=>{const _=d.at(-1);return this.eos_token_id.some(f=>_==f)})}}class l extends n{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,c){return new Array(p.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>i,TextStreamer:()=>l,WhisperTextStreamer:()=>u});var s=t("./src/utils/core.js"),n=t("./src/tokenizers.js"),o=t("./src/env.js");class i{put(c){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=o.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends i{constructor(c,{skip_prompt:d=!1,callback_function:_=null,token_callback_function:f=null,skip_special_tokens:E=!0,decode_kwargs:k={},...b}={}){super(),this.tokenizer=c,this.skip_prompt=d,this.callback_function=_??a,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:E,...k,...b},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(c){if(c.length>1)throw Error("TextStreamer only supports batch size of 1");const d=this.next_tokens_are_prompt;if(d&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const _=c[0];this.token_callback_function?.(_),this.token_cache=(0,s.mergeArrays)(this.token_cache,_);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let E;d||f.endsWith(`
`)?(E=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,n.is_chinese_char)(f.charCodeAt(f.length-1))?(E=f.slice(this.print_len),this.print_len+=E.length):(E=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=E.length),this.on_finalized_text(E,!1)}end(){let c;this.token_cache.length>0?(c=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):c="",this.next_tokens_are_prompt=!0,this.on_finalized_text(c,!0)}on_finalized_text(c,d){c.length>0&&this.callback_function?.(c),d&&this.callback_function===a&&o.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class u extends l{constructor(c,{skip_prompt:d=!1,callback_function:_=null,token_callback_function:f=null,on_chunk_start:E=null,on_chunk_end:k=null,on_finalize:b=null,time_precision:g=.02,skip_special_tokens:C=!0,decode_kwargs:x={}}={}){super(c,{skip_prompt:d,skip_special_tokens:C,callback_function:_,token_callback_function:f,decode_kwargs:x}),this.timestamp_begin=c.timestamp_begin,this.on_chunk_start=E,this.on_chunk_end=k,this.on_finalize=b,this.time_precision=g,this.waiting_for_timestamp=!1}put(c){if(c.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const d=c[0];if(d.length===1){const _=Number(d[0])-this.timestamp_begin;if(_>=0){const f=_*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(f):this.on_chunk_start?.(f),this.waiting_for_timestamp=!this.waiting_for_timestamp,c=[[]]}}return super.put(c)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>Ai,ASTModel:()=>ki,ASTPreTrainedModel:()=>Eo,AlbertForMaskedLM:()=>J,AlbertForQuestionAnswering:()=>U,AlbertForSequenceClassification:()=>$,AlbertModel:()=>pe,AlbertPreTrainedModel:()=>$s,AutoModel:()=>mu,AutoModelForAudioClassification:()=>E0,AutoModelForAudioFrameClassification:()=>C0,AutoModelForAudioTextToText:()=>L0,AutoModelForCTC:()=>T0,AutoModelForCausalLM:()=>h0,AutoModelForDepthEstimation:()=>k0,AutoModelForDocumentQuestionAnswering:()=>S0,AutoModelForImageClassification:()=>g0,AutoModelForImageFeatureExtraction:()=>O0,AutoModelForImageMatting:()=>$0,AutoModelForImageSegmentation:()=>w0,AutoModelForImageTextToText:()=>D0,AutoModelForImageToImage:()=>I0,AutoModelForMaskGeneration:()=>x0,AutoModelForMaskedLM:()=>m0,AutoModelForNormalEstimation:()=>A0,AutoModelForObjectDetection:()=>y0,AutoModelForPoseEstimation:()=>F0,AutoModelForQuestionAnswering:()=>f0,AutoModelForSemanticSegmentation:()=>M0,AutoModelForSeq2SeqLM:()=>c0,AutoModelForSequenceClassification:()=>a0,AutoModelForSpeechSeq2Seq:()=>u0,AutoModelForTextToSpectrogram:()=>d0,AutoModelForTextToWaveform:()=>p0,AutoModelForTokenClassification:()=>l0,AutoModelForUniversalSegmentation:()=>b0,AutoModelForVision2Seq:()=>_0,AutoModelForXVector:()=>P0,AutoModelForZeroShotObjectDetection:()=>v0,BartForConditionalGeneration:()=>Nt,BartForSequenceClassification:()=>pr,BartModel:()=>or,BartPretrainedModel:()=>At,BaseModelOutput:()=>Me,BeitForImageClassification:()=>Uw,BeitModel:()=>Vw,BeitPreTrainedModel:()=>kc,BertForMaskedLM:()=>Se,BertForQuestionAnswering:()=>Ke,BertForSequenceClassification:()=>Fe,BertForTokenClassification:()=>je,BertModel:()=>Pe,BertPreTrainedModel:()=>Ce,BlenderbotForConditionalGeneration:()=>Cr,BlenderbotModel:()=>gr,BlenderbotPreTrainedModel:()=>Gt,BlenderbotSmallForConditionalGeneration:()=>Sr,BlenderbotSmallModel:()=>is,BlenderbotSmallPreTrainedModel:()=>Qr,BloomForCausalLM:()=>dw,BloomModel:()=>uw,BloomPreTrainedModel:()=>Mc,CLIPModel:()=>Bi,CLIPPreTrainedModel:()=>Bs,CLIPSegForImageSegmentation:()=>Ro,CLIPSegModel:()=>Vi,CLIPSegPreTrainedModel:()=>qn,CLIPTextModel:()=>lc,CLIPTextModelWithProjection:()=>Ri,CLIPVisionModel:()=>Wn,CLIPVisionModelWithProjection:()=>Hs,CamembertForMaskedLM:()=>$t,CamembertForQuestionAnswering:()=>Or,CamembertForSequenceClassification:()=>nr,CamembertForTokenClassification:()=>Wt,CamembertModel:()=>Zt,CamembertPreTrainedModel:()=>tt,CausalLMOutput:()=>Pn,CausalLMOutputWithPast:()=>Wx,ChineseCLIPModel:()=>Do,ChineseCLIPPreTrainedModel:()=>Hn,ClapAudioModelWithProjection:()=>Ub,ClapModel:()=>Nb,ClapPreTrainedModel:()=>Xi,ClapTextModelWithProjection:()=>Vb,CodeGenForCausalLM:()=>Ho,CodeGenModel:()=>Zn,CodeGenPreTrainedModel:()=>En,CohereForCausalLM:()=>Gg,CohereModel:()=>Wg,CoherePreTrainedModel:()=>uc,ConvBertForMaskedLM:()=>ts,ConvBertForQuestionAnswering:()=>B,ConvBertForSequenceClassification:()=>z,ConvBertForTokenClassification:()=>ne,ConvBertModel:()=>wt,ConvBertPreTrainedModel:()=>Er,ConvNextForImageClassification:()=>zM,ConvNextModel:()=>LM,ConvNextPreTrainedModel:()=>Kc,ConvNextV2ForImageClassification:()=>RM,ConvNextV2Model:()=>BM,ConvNextV2PreTrainedModel:()=>Hc,DFineForObjectDetection:()=>rM,DFineModel:()=>tM,DFinePreTrainedModel:()=>zc,DPTForDepthEstimation:()=>wM,DPTModel:()=>gM,DPTPreTrainedModel:()=>Uc,DacDecoderModel:()=>ky,DacDecoderOutput:()=>Sy,DacEncoderModel:()=>Iy,DacEncoderOutput:()=>Cy,DacModel:()=>$y,DacPreTrainedModel:()=>sa,DebertaForMaskedLM:()=>rs,DebertaForQuestionAnswering:()=>Ps,DebertaForSequenceClassification:()=>ws,DebertaForTokenClassification:()=>ss,DebertaModel:()=>kr,DebertaPreTrainedModel:()=>Ht,DebertaV2ForMaskedLM:()=>Hr,DebertaV2ForQuestionAnswering:()=>Ds,DebertaV2ForSequenceClassification:()=>Ms,DebertaV2ForTokenClassification:()=>Dr,DebertaV2Model:()=>Cs,DebertaV2PreTrainedModel:()=>jr,DecisionTransformerModel:()=>uy,DecisionTransformerPreTrainedModel:()=>cy,DeiTForImageClassification:()=>aM,DeiTModel:()=>iM,DeiTPreTrainedModel:()=>Rc,DepthAnythingForDepthEstimation:()=>bM,DepthAnythingPreTrainedModel:()=>MM,DepthProForDepthEstimation:()=>EM,DepthProPreTrainedModel:()=>TM,DetrForObjectDetection:()=>Gw,DetrForSegmentation:()=>Ac,DetrModel:()=>Ww,DetrObjectDetectionOutput:()=>Fc,DetrPreTrainedModel:()=>Wi,DetrSegmentationOutput:()=>Kw,Dinov2ForImageClassification:()=>NM,Dinov2Model:()=>jM,Dinov2PreTrainedModel:()=>qc,Dinov2WithRegistersForImageClassification:()=>UM,Dinov2WithRegistersModel:()=>VM,Dinov2WithRegistersPreTrainedModel:()=>Qc,DistilBertForMaskedLM:()=>Le,DistilBertForQuestionAnswering:()=>Nr,DistilBertForSequenceClassification:()=>os,DistilBertForTokenClassification:()=>Ar,DistilBertModel:()=>ns,DistilBertPreTrainedModel:()=>er,DonutSwinModel:()=>DM,DonutSwinPreTrainedModel:()=>OM,EfficientNetForImageClassification:()=>Xb,EfficientNetModel:()=>Qb,EfficientNetPreTrainedModel:()=>ou,ElectraForMaskedLM:()=>Oe,ElectraForQuestionAnswering:()=>et,ElectraForSequenceClassification:()=>be,ElectraForTokenClassification:()=>dt,ElectraModel:()=>me,ElectraPreTrainedModel:()=>ee,EsmForMaskedLM:()=>fr,EsmForSequenceClassification:()=>Vr,EsmForTokenClassification:()=>Ls,EsmModel:()=>ct,EsmPreTrainedModel:()=>qe,ExaoneForCausalLM:()=>ze,ExaoneModel:()=>xe,ExaonePreTrainedModel:()=>ie,FalconForCausalLM:()=>jb,FalconModel:()=>Rb,FalconPreTrainedModel:()=>ru,FastViTForImageClassification:()=>kw,FastViTModel:()=>Iw,FastViTPreTrainedModel:()=>Pc,Florence2ForConditionalGeneration:()=>Di,Florence2PreTrainedModel:()=>Oi,GLPNForDepthEstimation:()=>FM,GLPNModel:()=>AM,GLPNPreTrainedModel:()=>Gc,GPT2LMHeadModel:()=>ut,GPT2Model:()=>yn,GPT2PreTrainedModel:()=>Qn,GPTBigCodeForCausalLM:()=>Tn,GPTBigCodeModel:()=>Ko,GPTBigCodePreTrainedModel:()=>Yn,GPTJForCausalLM:()=>Go,GPTJModel:()=>Jn,GPTJPreTrainedModel:()=>Xn,GPTNeoForCausalLM:()=>vn,GPTNeoModel:()=>Xr,GPTNeoPreTrainedModel:()=>qs,GPTNeoXForCausalLM:()=>Wo,GPTNeoXModel:()=>Uo,GPTNeoXPreTrainedModel:()=>xn,Gemma2ForCausalLM:()=>Qg,Gemma2Model:()=>qg,Gemma2PreTrainedModel:()=>pc,Gemma3ForCausalLM:()=>Jg,Gemma3Model:()=>Xg,Gemma3PreTrainedModel:()=>hc,GemmaForCausalLM:()=>Hg,GemmaModel:()=>Kg,GemmaPreTrainedModel:()=>dc,GlmForCausalLM:()=>V,GlmModel:()=>D,GlmPreTrainedModel:()=>I,GraniteForCausalLM:()=>Ug,GraniteModel:()=>Vg,GranitePreTrainedModel:()=>cc,GroundingDinoForObjectDetection:()=>GM,GroundingDinoPreTrainedModel:()=>WM,GroupViTModel:()=>$w,GroupViTPreTrainedModel:()=>Sw,HeliumForCausalLM:()=>T,HeliumModel:()=>h,HeliumPreTrainedModel:()=>to,HieraForImageClassification:()=>cM,HieraModel:()=>lM,HieraPreTrainedModel:()=>jc,HubertForCTC:()=>yb,HubertForSequenceClassification:()=>vb,HubertModel:()=>bb,HubertPreTrainedModel:()=>Ix,IJepaForImageClassification:()=>Mw,IJepaModel:()=>ww,IJepaPreTrainedModel:()=>xc,Idefics3ForConditionalGeneration:()=>Un,Idefics3PreTrainedModel:()=>Li,ImageMattingOutput:()=>B0,JAISLMHeadModel:()=>Vo,JAISModel:()=>No,JAISPreTrainedModel:()=>jo,JinaCLIPModel:()=>Lo,JinaCLIPPreTrainedModel:()=>bn,JinaCLIPTextModel:()=>zo,JinaCLIPVisionModel:()=>Bo,LiteWhisperForConditionalGeneration:()=>So,LlamaForCausalLM:()=>Qo,LlamaModel:()=>qo,LlamaPreTrainedModel:()=>eo,LlavaForConditionalGeneration:()=>Nn,LlavaOnevisionForConditionalGeneration:()=>ko,LlavaPreTrainedModel:()=>Ks,LongT5ForConditionalGeneration:()=>Ge,LongT5Model:()=>Xe,LongT5PreTrainedModel:()=>Be,M2M100ForConditionalGeneration:()=>tb,M2M100Model:()=>eb,M2M100PreTrainedModel:()=>Yc,MBartForCausalLM:()=>ys,MBartForConditionalGeneration:()=>qr,MBartForSequenceClassification:()=>_r,MBartModel:()=>tr,MBartPreTrainedModel:()=>qt,MPNetForMaskedLM:()=>hn,MPNetForQuestionAnswering:()=>Ws,MPNetForSequenceClassification:()=>mn,MPNetForTokenClassification:()=>fn,MPNetModel:()=>pn,MPNetPreTrainedModel:()=>bs,MT5ForConditionalGeneration:()=>Ot,MT5Model:()=>_t,MT5PreTrainedModel:()=>Ze,MarianMTModel:()=>ZM,MarianModel:()=>YM,MarianPreTrainedModel:()=>Jc,MaskFormerForInstanceSegmentation:()=>kM,MaskFormerModel:()=>IM,MaskFormerPreTrainedModel:()=>Wc,MaskedLMOutput:()=>$r,Metric3DForDepthEstimation:()=>CM,Metric3DPreTrainedModel:()=>PM,Metric3Dv2ForDepthEstimation:()=>$M,Metric3Dv2PreTrainedModel:()=>SM,MgpstrForSceneTextRecognition:()=>fy,MgpstrModelOutput:()=>hy,MgpstrPreTrainedModel:()=>my,MimiDecoderModel:()=>Py,MimiDecoderOutput:()=>xy,MimiEncoderModel:()=>Ey,MimiEncoderOutput:()=>vy,MimiModel:()=>Ty,MimiPreTrainedModel:()=>ra,MistralForCausalLM:()=>Lb,MistralModel:()=>Db,MistralPreTrainedModel:()=>eu,MobileBertForMaskedLM:()=>zs,MobileBertForQuestionAnswering:()=>dn,MobileBertForSequenceClassification:()=>un,MobileBertModel:()=>Pr,MobileBertPreTrainedModel:()=>lr,MobileLLMForCausalLM:()=>Mt,MobileLLMModel:()=>st,MobileLLMPreTrainedModel:()=>Qe,MobileNetV1ForImageClassification:()=>Yb,MobileNetV1ForSemanticSegmentation:()=>Zb,MobileNetV1Model:()=>Jb,MobileNetV1PreTrainedModel:()=>Yi,MobileNetV2ForImageClassification:()=>ty,MobileNetV2ForSemanticSegmentation:()=>ry,MobileNetV2Model:()=>ey,MobileNetV2PreTrainedModel:()=>Zi,MobileNetV3ForImageClassification:()=>ny,MobileNetV3ForSemanticSegmentation:()=>oy,MobileNetV3Model:()=>sy,MobileNetV3PreTrainedModel:()=>ea,MobileNetV4ForImageClassification:()=>ay,MobileNetV4ForSemanticSegmentation:()=>ly,MobileNetV4Model:()=>iy,MobileNetV4PreTrainedModel:()=>ta,MobileViTForImageClassification:()=>Dw,MobileViTModel:()=>Ow,MobileViTPreTrainedModel:()=>Cc,MobileViTV2ForImageClassification:()=>zw,MobileViTV2Model:()=>Lw,MobileViTV2PreTrainedModel:()=>Sc,ModelOutput:()=>we,ModernBertForMaskedLM:()=>He,ModernBertForSequenceClassification:()=>Ye,ModernBertForTokenClassification:()=>We,ModernBertModel:()=>ke,ModernBertPreTrainedModel:()=>Ue,Moondream1ForConditionalGeneration:()=>Fi,MoonshineForConditionalGeneration:()=>Io,MoonshineModel:()=>ac,MoonshinePreTrainedModel:()=>$o,MptForCausalLM:()=>hw,MptModel:()=>pw,MptPreTrainedModel:()=>bc,MultiModalityCausalLM:()=>py,MultiModalityPreTrainedModel:()=>dy,MusicgenForCausalLM:()=>Ox,MusicgenForConditionalGeneration:()=>au,MusicgenModel:()=>Fx,MusicgenPreTrainedModel:()=>iu,NomicBertModel:()=>at,NomicBertPreTrainedModel:()=>pt,OPTForCausalLM:()=>fw,OPTModel:()=>mw,OPTPreTrainedModel:()=>yc,Olmo2ForCausalLM:()=>Ng,Olmo2Model:()=>Ui,Olmo2PreTrainedModel:()=>Is,OlmoForCausalLM:()=>Mr,OlmoModel:()=>Rt,OlmoPreTrainedModel:()=>It,OpenELMForCausalLM:()=>Zg,OpenELMModel:()=>Yg,OpenELMPreTrainedModel:()=>mc,OwlViTForObjectDetection:()=>Rw,OwlViTModel:()=>Bw,OwlViTPreTrainedModel:()=>$c,Owlv2ForObjectDetection:()=>Nw,Owlv2Model:()=>jw,Owlv2PreTrainedModel:()=>Ic,PaliGemmaForConditionalGeneration:()=>Ao,PaliGemmaPreTrainedModel:()=>Vn,PatchTSMixerForPrediction:()=>My,PatchTSMixerModel:()=>wy,PatchTSMixerPreTrainedModel:()=>cu,PatchTSTForPrediction:()=>gy,PatchTSTModel:()=>_y,PatchTSTPreTrainedModel:()=>lu,Phi3ForCausalLM:()=>cw,Phi3Model:()=>lw,Phi3PreTrainedModel:()=>wc,Phi3VForCausalLM:()=>Oo,Phi3VPreTrainedModel:()=>zi,PhiForCausalLM:()=>aw,PhiModel:()=>iw,PhiPreTrainedModel:()=>gc,PreTrainedModel:()=>W,PretrainedMixin:()=>Lt,PvtForImageClassification:()=>xw,PvtModel:()=>vw,PvtPreTrainedModel:()=>Tc,PyAnnoteForAudioFrameClassification:()=>ab,PyAnnoteModel:()=>ib,PyAnnotePreTrainedModel:()=>Zc,QuestionAnsweringModelOutput:()=>zr,Qwen2ForCausalLM:()=>tw,Qwen2Model:()=>ew,Qwen2PreTrainedModel:()=>fc,Qwen2VLForConditionalGeneration:()=>ow,Qwen2VLPreTrainedModel:()=>nw,Qwen3ForCausalLM:()=>sw,Qwen3Model:()=>rw,Qwen3PreTrainedModel:()=>_c,RFDetrForObjectDetection:()=>Zw,RFDetrModel:()=>Yw,RFDetrObjectDetectionOutput:()=>eM,RFDetrPreTrainedModel:()=>Lc,RTDetrForObjectDetection:()=>qw,RTDetrModel:()=>Hw,RTDetrObjectDetectionOutput:()=>Xo,RTDetrPreTrainedModel:()=>Oc,RTDetrV2ForObjectDetection:()=>Xw,RTDetrV2Model:()=>Qw,RTDetrV2ObjectDetectionOutput:()=>Jw,RTDetrV2PreTrainedModel:()=>Dc,ResNetForImageClassification:()=>dM,ResNetModel:()=>uM,ResNetPreTrainedModel:()=>Nc,RoFormerForMaskedLM:()=>Et,RoFormerForQuestionAnswering:()=>mr,RoFormerForSequenceClassification:()=>Qt,RoFormerForTokenClassification:()=>Ft,RoFormerModel:()=>nt,RoFormerPreTrainedModel:()=>$e,RobertaForMaskedLM:()=>cr,RobertaForQuestionAnswering:()=>Lr,RobertaForSequenceClassification:()=>rr,RobertaForTokenClassification:()=>dr,RobertaModel:()=>wr,RobertaPreTrainedModel:()=>vr,SamImageSegmentationOutput:()=>JM,SamModel:()=>XM,SamPreTrainedModel:()=>QM,SapiensForDepthEstimation:()=>vM,SapiensForNormalEstimation:()=>xM,SapiensForSemanticSegmentation:()=>yM,SapiensPreTrainedModel:()=>Ki,SegformerForImageClassification:()=>Gb,SegformerForSemanticSegmentation:()=>Kb,SegformerModel:()=>Ax,SegformerPreTrainedModel:()=>Ji,Seq2SeqLMOutput:()=>Ux,SequenceClassifierOutput:()=>vt,SiglipModel:()=>ji,SiglipPreTrainedModel:()=>Gn,SiglipTextModel:()=>Ni,SiglipVisionModel:()=>Kn,SmolVLMForConditionalGeneration:()=>Fo,SnacDecoderModel:()=>Oy,SnacEncoderModel:()=>Fy,SnacModel:()=>Ay,SnacPreTrainedModel:()=>na,SpeechT5ForSpeechToText:()=>Ib,SpeechT5ForTextToSpeech:()=>kb,SpeechT5HifiGan:()=>Ab,SpeechT5Model:()=>kx,SpeechT5PreTrainedModel:()=>Qi,SqueezeBertForMaskedLM:()=>gn,SqueezeBertForQuestionAnswering:()=>Mn,SqueezeBertForSequenceClassification:()=>wn,SqueezeBertModel:()=>_n,SqueezeBertPreTrainedModel:()=>Ss,StableLmForCausalLM:()=>qb,StableLmModel:()=>Hb,StableLmPreTrainedModel:()=>nu,Starcoder2ForCausalLM:()=>Bb,Starcoder2Model:()=>zb,Starcoder2PreTrainedModel:()=>tu,StyleTextToSpeech2Model:()=>$b,StyleTextToSpeech2PreTrainedModel:()=>Sb,Swin2SRForImageSuperResolution:()=>_M,Swin2SRModel:()=>fM,Swin2SRPreTrainedModel:()=>Vc,SwinForImageClassification:()=>hM,SwinForSemanticSegmentation:()=>mM,SwinModel:()=>pM,SwinPreTrainedModel:()=>Gi,T5ForConditionalGeneration:()=>ye,T5Model:()=>ce,T5PreTrainedModel:()=>oe,TableTransformerForObjectDetection:()=>nM,TableTransformerModel:()=>sM,TableTransformerObjectDetectionOutput:()=>oM,TableTransformerPreTrainedModel:()=>Bc,TokenClassifierOutput:()=>xr,TrOCRForCausalLM:()=>Ob,TrOCRPreTrainedModel:()=>Fb,UltravoxModel:()=>yy,UltravoxPreTrainedModel:()=>by,UniSpeechForCTC:()=>db,UniSpeechForSequenceClassification:()=>pb,UniSpeechModel:()=>ub,UniSpeechPreTrainedModel:()=>Hi,UniSpeechSatForAudioFrameClassification:()=>_b,UniSpeechSatForCTC:()=>mb,UniSpeechSatForSequenceClassification:()=>fb,UniSpeechSatModel:()=>hb,UniSpeechSatPreTrainedModel:()=>Jo,ViTForImageClassification:()=>gw,ViTMAEModel:()=>Ew,ViTMAEPreTrainedModel:()=>Tw,ViTMSNForImageClassification:()=>Cw,ViTMSNModel:()=>Pw,ViTMSNPreTrainedModel:()=>Ec,ViTModel:()=>_w,ViTPreTrainedModel:()=>vc,VisionEncoderDecoderModel:()=>jn,VitMatteForImageMatting:()=>Fw,VitMattePreTrainedModel:()=>Aw,VitPoseForPoseEstimation:()=>yw,VitPosePreTrainedModel:()=>bw,VitsModel:()=>su,VitsModelOutput:()=>R0,VitsPreTrainedModel:()=>Wb,Wav2Vec2BertForCTC:()=>wb,Wav2Vec2BertForSequenceClassification:()=>Mb,Wav2Vec2BertModel:()=>gb,Wav2Vec2BertPreTrainedModel:()=>qi,Wav2Vec2ForAudioFrameClassification:()=>ob,Wav2Vec2ForCTC:()=>sb,Wav2Vec2ForSequenceClassification:()=>nb,Wav2Vec2Model:()=>rb,Wav2Vec2PreTrainedModel:()=>Qs,WavLMForAudioFrameClassification:()=>Cb,WavLMForCTC:()=>Tb,WavLMForSequenceClassification:()=>Eb,WavLMForXVector:()=>Pb,WavLMModel:()=>xb,WavLMPreTrainedModel:()=>ro,WeSpeakerResNetModel:()=>cb,WeSpeakerResNetPreTrainedModel:()=>lb,WhisperForConditionalGeneration:()=>Rn,WhisperModel:()=>Co,WhisperPreTrainedModel:()=>Po,XLMForQuestionAnswering:()=>Ei,XLMForSequenceClassification:()=>To,XLMForTokenClassification:()=>Ti,XLMModel:()=>Bn,XLMPreTrainedModel:()=>as,XLMRobertaForMaskedLM:()=>Ci,XLMRobertaForQuestionAnswering:()=>Ii,XLMRobertaForSequenceClassification:()=>Si,XLMRobertaForTokenClassification:()=>$i,XLMRobertaModel:()=>Pi,XLMRobertaPreTrainedModel:()=>Gs,XLMWithLMHeadModel:()=>xi,XVectorOutput:()=>z0,YolosForObjectDetection:()=>HM,YolosModel:()=>KM,YolosObjectDetectionOutput:()=>qM,YolosPreTrainedModel:()=>Xc});var s=t("./src/configs.js"),n=t("./src/backends/onnx.js"),o=t("./src/utils/dtypes.js"),i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),u=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),c=t("./src/generation/configuration_utils.js"),d=t("./src/utils/tensor.js"),_=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),E=t("./src/generation/stopping_criteria.js"),k=t("./src/generation/logits_sampler.js"),b=t("./src/env.js"),g=t("./src/models/whisper/generation_whisper.js"),C=t("./src/models/whisper/common_whisper.js");const x={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11},v=new Map,w=new Map,y=new Map;async function S(M,P,F){let se=F.config?.["transformers.js_config"]??{},_e=F.device??se.device;_e&&typeof _e!="string"&&(_e.hasOwnProperty(P)?_e=_e[P]:(console.warn(`device not specified for "${P}". Using the default device.`),_e=null));const fe=_e??(b.apis.IS_NODE_ENV?"cpu":"wasm"),Te=(0,n.deviceToExecutionProviders)(fe),De=se.device_config??{};De.hasOwnProperty(fe)&&(se={...se,...De[fe]});let Ne=F.dtype??se.dtype;if(typeof Ne!="string"&&(Ne&&Ne.hasOwnProperty(P)?Ne=Ne[P]:(Ne=o.DEFAULT_DEVICE_DTYPE_MAPPING[fe]??o.DATA_TYPES.fp32,console.warn(`dtype not specified for "${P}". Using the default dtype (${Ne}) for this device (${fe}).`))),Ne===o.DATA_TYPES.auto){let Ct=se.dtype;typeof Ct!="string"&&(Ct=Ct?.[P]),Ct&&Ct!==o.DATA_TYPES.auto&&o.DATA_TYPES.hasOwnProperty(Ct)?Ne=Ct:Ne=o.DEFAULT_DEVICE_DTYPE_MAPPING[fe]??o.DATA_TYPES.fp32}const Je=Ne;if(o.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Je)){if(Je===o.DATA_TYPES.fp16&&fe==="webgpu"&&!await(0,o.isWebGpuFp16Supported)())throw new Error(`The device (${fe}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Je}. Should be one of: ${Object.keys(o.DATA_TYPES).join(", ")}`);const ht=se.kv_cache_dtype,bt=ht?typeof ht=="string"?ht:ht[Je]??"float32":void 0;if(bt&&!["float32","float16"].includes(bt))throw new Error(`Invalid kv_cache_dtype: ${bt}. Should be one of: float32, float16`);const mt={dtype:Je,kv_cache_dtype:bt,device:fe},Pt=o.DEFAULT_DTYPE_SUFFIX_MAPPING[Je],gt=`${P}${Pt}.onnx`,Tt=`${F.subfolder??""}/${gt}`,it={...F.session_options};it.executionProviders??(it.executionProviders=Te);const St=se.free_dimension_overrides;St?it.freeDimensionOverrides??(it.freeDimensionOverrides=St):fe.startsWith("webnn")&&!it.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${fe}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Vt=b.apis.IS_NODE_ENV&&b.env.useFSCache,Xt=(0,l.getModelFile)(M,Tt,!0,F,Vt),ur=F.use_external_data_format??se.use_external_data_format;let ir=[];if(ur){let Ct;typeof ur=="object"?ur.hasOwnProperty(gt)?Ct=ur[gt]:ur.hasOwnProperty(P)?Ct=ur[P]:Ct=!1:Ct=ur;const Jt=+Ct;if(Jt>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Jt}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let Ir=0;Ir<Jt;++Ir){const ks=`${gt}_data${Ir===0?"":"_"+Ir}`,Yo=`${F.subfolder??""}/${ks}`;ir.push(new Promise(async(Ur,vs)=>{const no=await(0,l.getModelFile)(M,Yo,!0,F,Vt);Ur(no instanceof Uint8Array?{path:ks,data:no}:ks)}))}}else it.externalData!==void 0&&(ir=it.externalData.map(async Ct=>{if(typeof Ct.data=="string"){const Jt=await(0,l.getModelFile)(M,Ct.data,!0,F);return{...Ct,data:Jt}}return Ct}));if(ir.length>0){const Ct=await Promise.all(ir);b.apis.IS_NODE_ENV||(it.externalData=Ct)}if(fe==="webgpu"){const Ct=(0,s.getKeyValueShapes)(F.config,{prefix:"present"});if(Object.keys(Ct).length>0&&!(0,n.isONNXProxy)()){const Jt={};for(const Ir in Ct)Jt[Ir]="gpu-buffer";it.preferredOutputLocation=Jt}}return{buffer_or_path:await Xt,session_options:it,session_config:mt}}async function O(M,P,F){return Object.fromEntries(await Promise.all(Object.keys(P).map(async se=>{const{buffer_or_path:_e,session_options:fe,session_config:Te}=await S(M,P[se],F),De=await(0,n.createInferenceSession)(_e,fe,Te);return[se,De]})))}async function R(M,P,F){return Object.fromEntries(await Promise.all(Object.keys(P).map(async se=>{const _e=await(0,l.getModelJSON)(M,P[se],!1,F);return[se,_e]})))}function H(M,P){const F=Object.create(null),se=[];for(const Te of M.inputNames){const De=P[Te];if(!(De instanceof d.Tensor)){se.push(Te);continue}F[Te]=(0,n.isONNXProxy)()?De.clone():De}if(se.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${se.join(", ")}.`);const _e=Object.keys(P).length,fe=M.inputNames.length;if(_e>fe){let Te=Object.keys(P).filter(De=>!M.inputNames.includes(De));console.warn(`WARNING: Too many inputs were provided (${_e} > ${fe}). The following inputs will be ignored: "${Te.join(", ")}".`)}return F}let Q=Promise.resolve();async function L(M,P){const F=H(M,P);try{const se=Object.fromEntries(Object.entries(F).map(([Te,De])=>[Te,De.ort_tensor])),_e=()=>M.run(se),fe=await(b.apis.IS_BROWSER_ENV||b.apis.IS_WEBWORKER_ENV?Q=Q.then(_e):_e());return Y(fe)}catch(se){const _e=Object.fromEntries(Object.entries(F).map(([fe,Te])=>{const De={type:Te.type,dims:Te.dims,location:Te.location};return De.location!=="gpu-buffer"&&(De.data=Te.data),[fe,De]}));throw console.error(`An error occurred during model execution: "${se}".`),console.error("Inputs given to model:",_e),se}}function Y(M){for(let P in M)(0,n.isONNXTensor)(M[P])?M[P]=new d.Tensor(M[P]):typeof M[P]=="object"&&Y(M[P]);return M}function q(M){if(M instanceof d.Tensor)return M;if(M.length===0)throw Error("items must be non-empty");if(Array.isArray(M[0])){if(M.some(P=>P.length!==M[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new d.Tensor("int64",BigInt64Array.from(M.flat().map(P=>BigInt(P))),[M.length,M[0].length])}else return new d.Tensor("int64",BigInt64Array.from(M.map(P=>BigInt(P))),[1,M.length])}function X(M){return new d.Tensor("bool",[M],[1])}async function re(M,P){let{encoder_outputs:F,input_ids:se,decoder_input_ids:_e,...fe}=P;if(!F){const De=(0,a.pick)(P,M.sessions.model.inputNames);F=(await te(M,De)).last_hidden_state}return fe.input_ids=_e,fe.encoder_hidden_states=F,M.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(fe.encoder_attention_mask=P.attention_mask),await ue(M,fe,!0)}async function te(M,P){const F=M.sessions.model,se=(0,a.pick)(P,F.inputNames);if(F.inputNames.includes("inputs_embeds")&&!se.inputs_embeds){if(!P.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");se.inputs_embeds=await M.encode_text({input_ids:P.input_ids})}if(F.inputNames.includes("token_type_ids")&&!se.token_type_ids){if(!se.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");se.token_type_ids=(0,d.zeros_like)(se.input_ids)}if(F.inputNames.includes("pixel_mask")&&!se.pixel_mask){if(!se.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const _e=se.pixel_values.dims;se.pixel_mask=(0,d.ones)([_e[0],_e[2],_e[3]])}return await L(F,se)}async function he(M,P){const F=await M.encode(P);return await M.decode(F)}async function ue(M,P,F=!1){const se=M.sessions[F?"decoder_model_merged":"model"],{past_key_values:_e,...fe}=P;if(se.inputNames.includes("use_cache_branch")&&(fe.use_cache_branch=X(!!_e)),se.inputNames.includes("position_ids")&&fe.attention_mask&&!fe.position_ids){const De=["paligemma","gemma3_text","gemma3"].includes(M.config.model_type)?1:0;fe.position_ids=Ie(fe,_e,De)}M.addPastKeyValues(fe,_e);const Te=(0,a.pick)(fe,se.inputNames);return await L(se,Te)}function N({modality_token_id:M,inputs_embeds:P,modality_features:F,input_ids:se,attention_mask:_e}){const fe=se.tolist().map(Je=>Je.reduce((ht,bt,mt)=>(bt==M&&ht.push(mt),ht),[])),Te=fe.reduce((Je,ht)=>Je+ht.length,0),De=F.dims[0];if(Te!==De)throw new Error(`Number of tokens and features do not match: tokens: ${Te}, features ${De}`);let Ne=0;for(let Je=0;Je<fe.length;++Je){const ht=fe[Je],bt=P[Je];for(let mt=0;mt<ht.length;++mt)bt[ht[mt]].data.set(F[Ne++].data)}return{inputs_embeds:P,attention_mask:_e}}function A({image_token_id:M,inputs_embeds:P,image_features:F,input_ids:se,attention_mask:_e}){return N({modality_token_id:M,inputs_embeds:P,modality_features:F,input_ids:se,attention_mask:_e})}function K({audio_token_id:M,inputs_embeds:P,audio_features:F,input_ids:se,attention_mask:_e}){return N({modality_token_id:M,inputs_embeds:P,modality_features:F,input_ids:se,attention_mask:_e})}async function j(M,{encode_function:P,merge_function:F,modality_input_name:se,modality_output_name:_e,input_ids:fe=null,attention_mask:Te=null,position_ids:De=null,inputs_embeds:Ne=null,past_key_values:Je=null,generation_config:ht=null,logits_processor:bt=null,...mt}){const Pt=mt[se];if(!Ne){if(Ne=await M.encode_text({input_ids:fe,...mt}),Pt&&fe.dims[1]!==1){const Tt=await P({[se]:Pt,...mt});({inputs_embeds:Ne,attention_mask:Te}=F({[_e]:Tt,inputs_embeds:Ne,input_ids:fe,attention_mask:Te}))}else if(Je&&Pt&&fe.dims[1]===1){const Tt=fe.dims[1],it=Object.values(Je)[0].dims.at(-2);Te=(0,d.cat)([(0,d.ones)([fe.dims[0],it]),Te.slice(null,[Te.dims[1]-Tt,Te.dims[1]])],1)}}if(!De&&M.config.model_type==="qwen2_vl"){const{image_grid_thw:Tt,video_grid_thw:it}=mt;[De]=M.get_rope_index(fe,Tt,it,Te)}return await ue(M,{inputs_embeds:Ne,past_key_values:Je,attention_mask:Te,position_ids:De,generation_config:ht,logits_processor:bt},!0)}async function ae(M,P){return await j(M,{...P,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:M.encode_audio.bind(M),merge_function:M._merge_input_ids_with_audio_features.bind(M)})}async function Ae(M,P){return await j(M,{...P,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:M.encode_image.bind(M),merge_function:M._merge_input_ids_with_image_features.bind(M)})}function ve(M,P=0){const[F,se]=M.dims,_e=M.data,fe=new BigInt64Array(_e.length);for(let Te=0;Te<F;++Te){const De=Te*se;let Ne=BigInt(P);for(let Je=0;Je<se;++Je){const ht=De+Je;_e[ht]===0n?fe[ht]=BigInt(1):(fe[ht]=Ne,Ne+=_e[ht])}}return{data:fe,dims:M.dims}}function Ie(M,P=null,F=0){const{input_ids:se,inputs_embeds:_e,attention_mask:fe}=M,{data:Te,dims:De}=ve(fe,F);let Ne=new d.Tensor("int64",Te,De);if(P){const Je=-(se??_e).dims.at(1);Ne=Ne.slice(null,[Je,null])}return Ne}function Ve(M,P,F,se){if(F.past_key_values){const _e=Object.values(F.past_key_values)[0].dims.at(-2),{input_ids:fe,attention_mask:Te}=F;if(!(Te&&Te.dims[1]>fe.dims[1])){if(_e<fe.dims[1])F.input_ids=fe.slice(null,[_e,null]);else if(M.config.image_token_index!=null&&fe.data.some(De=>De==M.config.image_token_index)){const De=M.config.num_image_tokens;if(!De)throw new Error("`num_image_tokens` is missing in the model configuration.");const Ne=fe.dims[1]-(_e-De);F.input_ids=fe.slice(null,[-Ne,null]),F.attention_mask=(0,d.ones)([1,_e+Ne])}}}return F}function de(M,P,F,se){return F.past_key_values&&(P=P.map(_e=>[_e.at(-1)])),{...F,decoder_input_ids:q(P)}}function G(M,...P){return M.config.is_encoder_decoder?de(M,...P):Ve(M,...P)}function le(M,P,F,se){const _e=!!F.past_key_values;return se.guidance_scale!==null&&se.guidance_scale>1&&(_e?F.input_ids=(0,d.cat)([F.input_ids,F.input_ids],0):(F.input_ids=(0,d.cat)([F.input_ids,(0,d.full_like)(F.input_ids,BigInt(se.pad_token_id))],0),F.attention_mask=(0,d.cat)([F.attention_mask,(0,d.full_like)(F.attention_mask,0n)],0))),(_e||!F.pixel_values)&&(F.pixel_values=(0,d.full)([0,0,3,384,384],1)),_e&&(F.images_seq_mask=new d.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),F.images_emb_mask=new d.Tensor("bool",new Array(0).fill(!1),[1,1,0])),F}class W extends i.Callable{constructor(F,se,_e){super();Z(this,"main_input_name","input_ids");Z(this,"forward_params",["input_ids","attention_mask"]);this.config=F,this.sessions=se,this.configs=_e;const fe=y.get(this.constructor),Te=v.get(fe);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Te){case x.DecoderOnly:this.can_generate=!0,this._forward=ue,this._prepare_inputs_for_generation=Ve;break;case x.Seq2Seq:case x.Vision2Seq:case x.Musicgen:this.can_generate=!0,this._forward=re,this._prepare_inputs_for_generation=de;break;case x.EncoderDecoder:this._forward=re;break;case x.ImageTextToText:this.can_generate=!0,this._forward=Ae,this._prepare_inputs_for_generation=G;break;case x.AudioTextToText:this.can_generate=!0,this._forward=ae,this._prepare_inputs_for_generation=G;break;case x.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=G;break;case x.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=le;break;case x.AutoEncoder:this._forward=he;break;default:this._forward=te;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const F=[];for(const se of Object.values(this.sessions))se?.handler?.dispose&&F.push(se.handler.dispose());return await Promise.all(F)}static async from_pretrained(F,{progress_callback:se=null,config:_e=null,cache_dir:fe=null,local_files_only:Te=!1,revision:De="main",model_file_name:Ne=null,subfolder:Je="onnx",device:ht=null,dtype:bt=null,use_external_data_format:mt=null,session_options:Pt={}}={}){let gt={progress_callback:se,config:_e,cache_dir:fe,local_files_only:Te,revision:De,model_file_name:Ne,subfolder:Je,device:ht,dtype:bt,use_external_data_format:mt,session_options:Pt};const Tt=y.get(this),it=v.get(Tt);_e=gt.config=await s.AutoConfig.from_pretrained(F,gt);let St;if(it===x.DecoderOnly)St=await Promise.all([O(F,{model:gt.model_file_name??"model"},gt),R(F,{generation_config:"generation_config.json"},gt)]);else if(it===x.Seq2Seq||it===x.Vision2Seq)St=await Promise.all([O(F,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},gt),R(F,{generation_config:"generation_config.json"},gt)]);else if(it===x.MaskGeneration)St=await Promise.all([O(F,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},gt)]);else if(it===x.EncoderDecoder)St=await Promise.all([O(F,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},gt)]);else if(it===x.ImageTextToText){const Vt={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};_e.is_encoder_decoder&&(Vt.model="encoder_model"),St=await Promise.all([O(F,Vt,gt),R(F,{generation_config:"generation_config.json"},gt)])}else if(it===x.AudioTextToText){const Vt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};St=await Promise.all([O(F,Vt,gt),R(F,{generation_config:"generation_config.json"},gt)])}else if(it===x.Musicgen)St=await Promise.all([O(F,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},gt),R(F,{generation_config:"generation_config.json"},gt)]);else if(it===x.MultiModality)St=await Promise.all([O(F,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},gt),R(F,{generation_config:"generation_config.json"},gt)]);else if(it===x.Phi3V)St=await Promise.all([O(F,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},gt),R(F,{generation_config:"generation_config.json"},gt)]);else if(it===x.AutoEncoder)St=await Promise.all([O(F,{encoder_model:"encoder_model",decoder_model:"decoder_model"},gt)]);else{if(it!==x.EncoderOnly){const Vt=Tt??_e?.model_type;Vt!=="custom"&&console.warn(`Model type for '${Vt}' not found, assuming encoder-only architecture. Please report this at ${u.GITHUB_ISSUE_URL}.`)}St=await Promise.all([O(F,{model:gt.model_file_name??"model"},gt)])}return new this(_e,...St)}async _call(F){return await this.forward(F)}async forward(F){return await this._forward(this,F)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(F){const se=new p.LogitsProcessorList;return F.temperature!==null&&F.temperature!==1&&se.push(new p.TemperatureLogitsWarper(F.temperature)),F.top_k!==null&&F.top_k!==0&&se.push(new p.TopKLogitsWarper(F.top_k)),F.top_p!==null&&F.top_p<1&&se.push(new p.TopPLogitsWarper(F.top_p)),se}_get_logits_processor(F,se,_e=null){const fe=new p.LogitsProcessorList;if(F.repetition_penalty!==null&&F.repetition_penalty!==1&&fe.push(new p.RepetitionPenaltyLogitsProcessor(F.repetition_penalty)),F.no_repeat_ngram_size!==null&&F.no_repeat_ngram_size>0&&fe.push(new p.NoRepeatNGramLogitsProcessor(F.no_repeat_ngram_size)),F.bad_words_ids!==null&&fe.push(new p.NoBadWordsLogitsProcessor(F.bad_words_ids,F.eos_token_id)),F.min_length!==null&&F.eos_token_id!==null&&F.min_length>0&&fe.push(new p.MinLengthLogitsProcessor(F.min_length,F.eos_token_id)),F.min_new_tokens!==null&&F.eos_token_id!==null&&F.min_new_tokens>0&&fe.push(new p.MinNewTokensLengthLogitsProcessor(se,F.min_new_tokens,F.eos_token_id)),F.forced_bos_token_id!==null&&fe.push(new p.ForcedBOSTokenLogitsProcessor(F.forced_bos_token_id)),F.forced_eos_token_id!==null&&fe.push(new p.ForcedEOSTokenLogitsProcessor(F.max_length,F.forced_eos_token_id)),F.begin_suppress_tokens!==null){const Te=se>1||F.forced_bos_token_id===null?se:se+1;fe.push(new p.SuppressTokensAtBeginLogitsProcessor(F.begin_suppress_tokens,Te))}return F.guidance_scale!==null&&F.guidance_scale>1&&fe.push(new p.ClassifierFreeGuidanceLogitsProcessor(F.guidance_scale)),_e!==null&&fe.extend(_e),fe}_prepare_generation_config(F,se,_e=c.GenerationConfig){const fe={...this.config};for(const De of["decoder","generator","text_config"])De in fe&&Object.assign(fe,fe[De]);const Te=new _e(fe);return Object.assign(Te,this.generation_config??{}),F&&Object.assign(Te,F),se&&Object.assign(Te,(0,a.pick)(se,Object.getOwnPropertyNames(Te))),Te}_get_stopping_criteria(F,se=null){const _e=new E.StoppingCriteriaList;return F.max_length!==null&&_e.push(new E.MaxLengthCriteria(F.max_length,this.config.max_position_embeddings??null)),F.eos_token_id!==null&&_e.push(new E.EosTokenCriteria(F.eos_token_id)),se&&_e.extend(se),_e}_validate_model_class(){if(!this.can_generate){const F=[pu,hu,du,uu],se=y.get(this.constructor),_e=new Set,fe=this.config.model_type;for(const De of F){const Ne=De.get(fe);Ne&&_e.add(Ne[0])}let Te=`The current model class (${se}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw _e.size>0&&(Te+=` Please use the following class instead: ${[..._e].join(", ")}`),Error(Te)}}prepare_inputs_for_generation(...F){return this._prepare_inputs_for_generation(this,...F)}_update_model_kwargs_for_generation({generated_input_ids:F,outputs:se,model_inputs:_e,is_encoder_decoder:fe}){return _e.past_key_values=this.getPastKeyValues(se,_e.past_key_values),_e.input_ids=new d.Tensor("int64",F.flat(),[F.length,1]),fe||(_e.attention_mask=(0,d.cat)([_e.attention_mask,(0,d.ones)([_e.attention_mask.dims[0],1])],1)),_e.position_ids=null,_e}_prepare_model_inputs({inputs:F,bos_token_id:se,model_kwargs:_e}){const fe=(0,a.pick)(_e,this.forward_params),Te=this.main_input_name;if(Te in fe){if(F)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else fe[Te]=F;return{inputs_tensor:fe[Te],model_inputs:fe,model_input_name:Te}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:F,model_inputs:se,model_input_name:_e,generation_config:fe}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!se.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:De,pixel_values:Ne,attention_mask:Je,...ht}=se,bt=await this._prepare_inputs_embeds(se);se={...ht,...(0,a.pick)(bt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Te}=await te(this,se);if(fe.guidance_scale!==null&&fe.guidance_scale>1)Te=(0,d.cat)([Te,(0,d.full_like)(Te,0)],0),"attention_mask"in se&&(se.attention_mask=(0,d.cat)([se.attention_mask,(0,d.zeros_like)(se.attention_mask)],0));else if(se.decoder_input_ids){const De=q(se.decoder_input_ids).dims[0];if(De!==Te.dims[0]){if(Te.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Te.dims[0]}) than the decoder inputs (${De}).`);Te=(0,d.cat)(Array.from({length:De},()=>Te),0)}}return se.encoder_outputs=Te,se}_prepare_decoder_input_ids_for_generation({batch_size:F,model_input_name:se,model_kwargs:_e,decoder_start_token_id:fe,bos_token_id:Te,generation_config:De}){let{decoder_input_ids:Ne,...Je}=_e;if(!(Ne instanceof d.Tensor)){if(Ne)Array.isArray(Ne[0])||(Ne=Array.from({length:F},()=>Ne));else if(fe??(fe=Te),this.config.model_type==="musicgen")Ne=Array.from({length:F*this.config.decoder.num_codebooks},()=>[fe]);else if(Array.isArray(fe)){if(fe.length!==F)throw new Error(`\`decoder_start_token_id\` expcted to have length ${F} but got ${fe.length}`);Ne=fe}else Ne=Array.from({length:F},()=>[fe]);Ne=q(Ne)}return _e.decoder_attention_mask=(0,d.ones_like)(Ne),{input_ids:Ne,model_inputs:Je}}async generate({inputs:F=null,generation_config:se=null,logits_processor:_e=null,stopping_criteria:fe=null,streamer:Te=null,...De}){this._validate_model_class(),se=this._prepare_generation_config(se,De);let{inputs_tensor:Ne,model_inputs:Je,model_input_name:ht}=this._prepare_model_inputs({inputs:F,model_kwargs:De});const bt=this.config.is_encoder_decoder;bt&&("encoder_outputs"in Je||(Je=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ne,model_inputs:Je,model_input_name:ht,generation_config:se})));let mt;bt?{input_ids:mt,model_inputs:Je}=this._prepare_decoder_input_ids_for_generation({batch_size:Je[ht].dims.at(0),model_input_name:ht,model_kwargs:Je,decoder_start_token_id:se.decoder_start_token_id,bos_token_id:se.bos_token_id,generation_config:se}):mt=Je[ht];let Pt=mt.dims.at(-1);se.max_new_tokens!==null&&(se.max_length=Pt+se.max_new_tokens);const gt=this._get_logits_processor(se,Pt,_e),Tt=this._get_stopping_criteria(se,fe),it=Je[ht].dims.at(0),St=k.LogitsSampler.getSampler(se),Vt=new Array(it).fill(0),Xt=mt.tolist();Te&&Te.put(Xt);let ur,ir={};for(;;){if(Je=this.prepare_inputs_for_generation(Xt,Je,se),ur=await this.forward(Je),se.output_attentions&&se.return_dict_in_generate){const Ur=this.getAttentions(ur);for(const vs in Ur)vs in ir||(ir[vs]=[]),ir[vs].push(Ur[vs])}const Jt=ur.logits.slice(null,-1,null),Ir=gt(Xt,Jt),ks=[];for(let Ur=0;Ur<Ir.dims.at(0);++Ur){const vs=Ir[Ur],no=await St(vs);for(const[oa,ia]of no){const aa=BigInt(oa);Vt[Ur]+=ia,Xt[Ur].push(aa),ks.push([aa]);break}}if(Te&&Te.put(ks),Tt(Xt).every(Ur=>Ur))break;Je=this._update_model_kwargs_for_generation({generated_input_ids:ks,outputs:ur,model_inputs:Je,is_encoder_decoder:bt})}Te&&Te.end();const hr=this.getPastKeyValues(ur,Je.past_key_values,!0),Ct=new d.Tensor("int64",Xt.flat(),[Xt.length,Xt[0].length]);if(se.return_dict_in_generate)return{sequences:Ct,past_key_values:hr,...ir};for(const Jt of Object.values(ur))Jt.location==="gpu-buffer"&&Jt.dispose();return Ct}getPastKeyValues(F,se,_e=!1){const fe=Object.create(null);for(const Te in F)if(Te.startsWith("present")){const De=Te.replace("present","past_key_values"),Ne=Te.includes("encoder");if(Ne&&se?fe[De]=se[De]:fe[De]=F[Te],se&&(!Ne||_e)){const Je=se[De];Je.location==="gpu-buffer"&&Je.dispose()}}return fe}getAttentions(F){const se={};for(const _e of["cross_attentions","encoder_attentions","decoder_attentions"])for(const fe in F)fe.startsWith(_e)&&(_e in se||(se[_e]=[]),se[_e].push(F[fe]));return se}addPastKeyValues(F,se){if(se)Object.assign(F,se);else{const fe=(this.sessions.decoder_model_merged??this.sessions.model)?.config?.kv_cache_dtype??"float32",Te=fe==="float16"?new d.DataTypeMap.float16:[],De=(F[this.main_input_name]??F.attention_mask)?.dims?.[0]??1,Ne=(0,s.getKeyValueShapes)(this.config,{batch_size:De});for(const Je in Ne)F[Je]=new d.Tensor(fe,Te,Ne[Je])}}async encode_image({pixel_values:F}){const se=(await L(this.sessions.vision_encoder,{pixel_values:F})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${se.dims[1]}).`),this.config.num_image_tokens=se.dims[1]),se}async encode_text({input_ids:F}){return(await L(this.sessions.embed_tokens,{input_ids:F})).inputs_embeds}async encode_audio({audio_values:F}){return(await L(this.sessions.audio_encoder,{audio_values:F})).audio_features}}class we{}class Me extends we{constructor({last_hidden_state:P,hidden_states:F=null,attentions:se=null}){super(),this.last_hidden_state=P,this.hidden_states=F,this.attentions=se}}class Ce extends W{}class Pe extends Ce{}class Se extends Ce{async _call(P){return new $r(await super._call(P))}}class Fe extends Ce{async _call(P){return new vt(await super._call(P))}}class je extends Ce{async _call(P){return new xr(await super._call(P))}}class Ke extends Ce{async _call(P){return new zr(await super._call(P))}}class Ue extends W{}class ke extends Ue{}class He extends Ue{async _call(P){return new $r(await super._call(P))}}class Ye extends Ue{async _call(P){return new vt(await super._call(P))}}class We extends Ue{async _call(P){return new xr(await super._call(P))}}class pt extends W{}class at extends pt{}class $e extends W{}class nt extends $e{}class Et extends $e{async _call(P){return new $r(await super._call(P))}}class Qt extends $e{async _call(P){return new vt(await super._call(P))}}class Ft extends $e{async _call(P){return new xr(await super._call(P))}}class mr extends $e{async _call(P){return new zr(await super._call(P))}}class Er extends W{}class wt extends Er{}class ts extends Er{async _call(P){return new $r(await super._call(P))}}class z extends Er{async _call(P){return new vt(await super._call(P))}}class ne extends Er{async _call(P){return new xr(await super._call(P))}}class B extends Er{async _call(P){return new zr(await super._call(P))}}class ee extends W{}class me extends ee{}class Oe extends ee{async _call(P){return new $r(await super._call(P))}}class be extends ee{async _call(P){return new vt(await super._call(P))}}class dt extends ee{async _call(P){return new xr(await super._call(P))}}class et extends ee{async _call(P){return new zr(await super._call(P))}}class tt extends W{}class Zt extends tt{}class $t extends tt{async _call(P){return new $r(await super._call(P))}}class nr extends tt{async _call(P){return new vt(await super._call(P))}}class Wt extends tt{async _call(P){return new xr(await super._call(P))}}class Or extends tt{async _call(P){return new zr(await super._call(P))}}class Ht extends W{}class kr extends Ht{}class rs extends Ht{async _call(P){return new $r(await super._call(P))}}class ws extends Ht{async _call(P){return new vt(await super._call(P))}}class ss extends Ht{async _call(P){return new xr(await super._call(P))}}class Ps extends Ht{async _call(P){return new zr(await super._call(P))}}class jr extends W{}class Cs extends jr{}class Hr extends jr{async _call(P){return new $r(await super._call(P))}}class Ms extends jr{async _call(P){return new vt(await super._call(P))}}class Dr extends jr{async _call(P){return new xr(await super._call(P))}}class Ds extends jr{async _call(P){return new zr(await super._call(P))}}class er extends W{}class ns extends er{}class os extends er{async _call(P){return new vt(await super._call(P))}}class Ar extends er{async _call(P){return new xr(await super._call(P))}}class Nr extends er{async _call(P){return new zr(await super._call(P))}}class Le extends er{async _call(P){return new $r(await super._call(P))}}class qe extends W{}class ct extends qe{}class fr extends qe{async _call(P){return new $r(await super._call(P))}}class Vr extends qe{async _call(P){return new vt(await super._call(P))}}class Ls extends qe{async _call(P){return new xr(await super._call(P))}}class lr extends W{}class Pr extends lr{}class zs extends lr{async _call(P){return new $r(await super._call(P))}}class un extends lr{async _call(P){return new vt(await super._call(P))}}class dn extends lr{async _call(P){return new zr(await super._call(P))}}class bs extends W{}class pn extends bs{}class hn extends bs{async _call(P){return new $r(await super._call(P))}}class mn extends bs{async _call(P){return new vt(await super._call(P))}}class fn extends bs{async _call(P){return new xr(await super._call(P))}}class Ws extends bs{async _call(P){return new zr(await super._call(P))}}class Ss extends W{}class _n extends Ss{}class gn extends Ss{async _call(P){return new $r(await super._call(P))}}class wn extends Ss{async _call(P){return new vt(await super._call(P))}}class Mn extends Ss{async _call(P){return new zr(await super._call(P))}}class $s extends W{}class pe extends $s{}class $ extends $s{async _call(P){return new vt(await super._call(P))}}class U extends $s{async _call(P){return new zr(await super._call(P))}}class J extends $s{async _call(P){return new $r(await super._call(P))}}class oe extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class ce extends oe{}class ye extends oe{}class Be extends W{}class Xe extends Be{}class Ge extends Be{}class Ze extends W{}class _t extends Ze{}class Ot extends Ze{}class At extends W{}class or extends At{}class Nt extends At{}class pr extends At{async _call(P){return new vt(await super._call(P))}}class qt extends W{}class tr extends qt{}class qr extends qt{}class _r extends qt{async _call(P){return new vt(await super._call(P))}}class ys extends qt{}class Gt extends W{}class gr extends Gt{}class Cr extends Gt{}class Qr extends W{}class is extends Qr{}class Sr extends Qr{}class vr extends W{}class wr extends vr{}class cr extends vr{async _call(P){return new $r(await super._call(P))}}class rr extends vr{async _call(P){return new vt(await super._call(P))}}class dr extends vr{async _call(P){return new xr(await super._call(P))}}class Lr extends vr{async _call(P){return new zr(await super._call(P))}}class as extends W{}class Bn extends as{}class xi extends as{async _call(P){return new $r(await super._call(P))}}class To extends as{async _call(P){return new vt(await super._call(P))}}class Ti extends as{async _call(P){return new xr(await super._call(P))}}class Ei extends as{async _call(P){return new zr(await super._call(P))}}class Gs extends W{}class Pi extends Gs{}class Ci extends Gs{async _call(P){return new $r(await super._call(P))}}class Si extends Gs{async _call(P){return new vt(await super._call(P))}}class $i extends Gs{async _call(P){return new xr(await super._call(P))}}class Ii extends Gs{async _call(P){return new zr(await super._call(P))}}class Eo extends W{}class ki extends Eo{}class Ai extends Eo{}class Po extends W{constructor(){super(...arguments);Z(this,"requires_attention_mask",!1);Z(this,"main_input_name","input_features");Z(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Co extends Po{}class Rn extends Po{_prepare_generation_config(P,F){return super._prepare_generation_config(P,F,g.WhisperGenerationConfig)}_retrieve_init_tokens(P){const F=[P.decoder_start_token_id];let se=P.language;const _e=P.task;if(P.is_multilingual){se||(console.warn("No language specified - defaulting to English (en)."),se="en");const Te=`<|${(0,C.whisper_language_to_code)(se)}|>`;F.push(P.lang_to_id[Te]),F.push(P.task_to_id[_e??"transcribe"])}else if(se||_e)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!P.return_timestamps&&P.no_timestamps_token_id&&F.at(-1)!==P.no_timestamps_token_id?F.push(P.no_timestamps_token_id):P.return_timestamps&&F.at(-1)===P.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),F.pop()),F.filter(fe=>fe!=null)}async generate({inputs:P=null,generation_config:F=null,logits_processor:se=null,stopping_criteria:_e=null,...fe}){F=this._prepare_generation_config(F,fe);const Te=fe.decoder_input_ids??this._retrieve_init_tokens(F);if(F.return_timestamps&&(se??(se=new p.LogitsProcessorList),se.push(new p.WhisperTimeStampLogitsProcessor(F,Te))),F.begin_suppress_tokens&&(se??(se=new p.LogitsProcessorList),se.push(new p.SuppressTokensAtBeginLogitsProcessor(F.begin_suppress_tokens,Te.length))),F.return_token_timestamps){if(!F.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");F.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),F.output_attentions=!0,F.return_dict_in_generate=!0}const De=await super.generate({inputs:P,generation_config:F,logits_processor:se,decoder_input_ids:Te,...fe});return F.return_token_timestamps&&(De.token_timestamps=this._extract_token_timestamps(De,F.alignment_heads,F.num_frames)),De}_extract_token_timestamps(P,F,se=null,_e=.02){if(!P.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");se==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let fe=this.config.median_filter_width;fe===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),fe=7);const Te=P.cross_attentions,De=Array.from({length:this.config.decoder_layers},(Tt,it)=>(0,d.cat)(Te.map(St=>St[it]),2)),Ne=(0,d.stack)(F.map(([Tt,it])=>{if(Tt>=De.length)throw new Error(`Layer index ${Tt} is out of bounds for cross attentions (length ${De.length}).`);return se?De[Tt].slice(null,it,null,[0,se]):De[Tt].slice(null,it)})).transpose(1,0,2,3),[Je,ht]=(0,d.std_mean)(Ne,-2,0,!0),bt=Ne.clone();for(let Tt=0;Tt<bt.dims[0];++Tt){const it=bt[Tt];for(let St=0;St<it.dims[0];++St){const Vt=it[St],Xt=Je[Tt][St][0].data,ur=ht[Tt][St][0].data;for(let ir=0;ir<Vt.dims[0];++ir){let hr=Vt[ir].data;for(let Ct=0;Ct<hr.length;++Ct)hr[Ct]=(hr[Ct]-ur[Ct])/Xt[Ct];hr.set((0,f.medianFilter)(hr,fe))}}}const mt=[(0,d.mean)(bt,1)],Pt=P.sequences.dims,gt=new d.Tensor("float32",new Float32Array(Pt[0]*Pt[1]),Pt);for(let Tt=0;Tt<Pt[0];++Tt){const it=mt[Tt].neg().squeeze_(0),[St,Vt]=(0,f.dynamic_time_warping)(it.tolist()),Xt=Array.from({length:St.length-1},(hr,Ct)=>St[Ct+1]-St[Ct]),ur=(0,a.mergeArrays)([1],Xt).map(hr=>!!hr),ir=[];for(let hr=0;hr<ur.length;++hr)ur[hr]&&ir.push(Vt[hr]*_e);gt[Tt].data.set(ir,1)}return gt}}class So extends Rn{}class $o extends W{constructor(){super(...arguments);Z(this,"requires_attention_mask",!1);Z(this,"main_input_name","input_values");Z(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class ac extends $o{}class Io extends $o{}class jn extends W{constructor(){super(...arguments);Z(this,"main_input_name","pixel_values");Z(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Ks extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Nn extends Ks{_merge_input_ids_with_image_features({inputs_embeds:P,image_features:F,input_ids:se,attention_mask:_e}){const fe=this.config.image_token_index,De=se.tolist().map(mt=>mt.findIndex(Pt=>Pt==fe)),Ne=De.every(mt=>mt===-1),Je=De.every(mt=>mt!==-1);if(!Ne&&!Je)throw new Error("Every input should contain either 0 or 1 image token.");if(Ne)return{inputs_embeds:P,attention_mask:_e};const ht=[],bt=[];for(let mt=0;mt<De.length;++mt){const Pt=De[mt],gt=P[mt],Tt=F[mt],it=_e[mt];ht.push((0,d.cat)([gt.slice([0,Pt]),Tt,gt.slice([Pt+1,gt.dims[0]])],0)),bt.push((0,d.cat)([it.slice([0,Pt]),(0,d.ones)([Tt.dims[0]]),it.slice([Pt+1,it.dims[0]])],0))}return{inputs_embeds:(0,d.stack)(ht,0),attention_mask:(0,d.stack)(bt,0)}}}class ko extends Nn{}class Fi extends Nn{}class Oi extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Z(this,"main_input_name","inputs_embeds")}}class Di extends Oi{_merge_input_ids_with_image_features({inputs_embeds:P,image_features:F,input_ids:se,attention_mask:_e}){return{inputs_embeds:(0,d.cat)([F,P],1),attention_mask:(0,d.cat)([(0,d.ones)(F.dims.slice(0,2)),_e],1)}}async _prepare_inputs_embeds({input_ids:P,pixel_values:F,inputs_embeds:se,attention_mask:_e}){if(!P&&!F)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let fe,Te;return P&&(fe=await this.encode_text({input_ids:P})),F&&(Te=await this.encode_image({pixel_values:F})),fe&&Te?{inputs_embeds:se,attention_mask:_e}=this._merge_input_ids_with_image_features({inputs_embeds:fe,image_features:Te,input_ids:P,attention_mask:_e}):se=fe||Te,{inputs_embeds:se,attention_mask:_e}}async forward({input_ids:P,pixel_values:F,attention_mask:se,decoder_input_ids:_e,decoder_attention_mask:fe,encoder_outputs:Te,past_key_values:De,inputs_embeds:Ne,decoder_inputs_embeds:Je}){if(Ne||({inputs_embeds:Ne,attention_mask:se}=await this._prepare_inputs_embeds({input_ids:P,pixel_values:F,inputs_embeds:Ne,attention_mask:se})),!Te){let{last_hidden_state:mt}=await te(this,{inputs_embeds:Ne,attention_mask:se});Te=mt}if(!Je){if(!_e)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Je=await this.encode_text({input_ids:_e})}return await ue(this,{inputs_embeds:Je,attention_mask:fe,encoder_attention_mask:se,encoder_hidden_states:Te,past_key_values:De},!0)}}class Vn extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Ao extends Vn{_merge_input_ids_with_image_features(P){const F=P.image_features.dims.at(-1),se=P.image_features.view(-1,F);return A({image_token_id:this.config.image_token_index,...P,image_features:se})}}class Li extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Un extends Li{async encode_image({pixel_values:P,pixel_attention_mask:F}){return(await L(this.sessions.vision_encoder,{pixel_values:P,pixel_attention_mask:F})).image_features}_merge_input_ids_with_image_features(P){const F=P.image_features.dims.at(-1),se=P.image_features.view(-1,F);return A({image_token_id:this.config.image_token_id,...P,image_features:se})}}class Fo extends Un{}class zi extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class Oo extends zi{async forward({input_ids:P=null,attention_mask:F=null,pixel_values:se=null,image_sizes:_e=null,position_ids:fe=null,inputs_embeds:Te=null,past_key_values:De=null,generation_config:Ne=null,logits_processor:Je=null,...ht}){if(!Te){let mt;if(se&&P.dims[1]!==1){if(!_e)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:mt}=await L(this.sessions.vision_encoder,{pixel_values:se,image_sizes:_e}))}else{const Pt=this.config.normalized_config.hidden_size;mt=new d.Tensor("float32",[],[0,Pt])}({inputs_embeds:Te}=await L(this.sessions.prepare_inputs_embeds,{input_ids:P,image_features:mt}))}return await ue(this,{inputs_embeds:Te,past_key_values:De,attention_mask:F,position_ids:fe,generation_config:Ne,logits_processor:Je},!1)}}class Bs extends W{}class Bi extends Bs{}class lc extends Bs{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"text_model"})}}class Ri extends Bs{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"text_model"})}}class Wn extends Bs{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"vision_model"})}}class Hs extends Bs{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"vision_model"})}}class Gn extends W{}class ji extends Gn{}class Ni extends Gn{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"text_model"})}}class Kn extends Bs{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"vision_model"})}}class Hn extends W{}class Do extends Hn{}class bn extends W{}class Lo extends bn{async forward(P){const F=!P.input_ids,se=!P.pixel_values;if(F&&se)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(F&&(P.input_ids=(0,d.ones)([P.pixel_values.dims[0],1])),se){const{image_size:Je}=this.config.vision_config;P.pixel_values=(0,d.full)([0,3,Je,Je],0)}const{text_embeddings:_e,image_embeddings:fe,l2norm_text_embeddings:Te,l2norm_image_embeddings:De}=await super.forward(P),Ne={};return F||(Ne.text_embeddings=_e,Ne.l2norm_text_embeddings=Te),se||(Ne.image_embeddings=fe,Ne.l2norm_image_embeddings=De),Ne}}class zo extends bn{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"text_model"})}}class Bo extends bn{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"vision_model"})}}class qn extends W{}class Vi extends qn{}class Ro extends qn{}class Qn extends W{}class yn extends Qn{}class ut extends Qn{}class jo extends W{}class No extends jo{}class Vo extends jo{}class qs extends W{}class Xr extends qs{}class vn extends qs{}class xn extends W{}class Uo extends xn{}class Wo extends xn{}class Xn extends W{}class Jn extends Xn{}class Go extends Xn{}class Yn extends W{}class Ko extends Yn{}class Tn extends Yn{}class En extends W{}class Zn extends En{}class Ho extends En{}class eo extends W{}class qo extends eo{}class Qo extends eo{}class to extends W{}class h extends to{}class T extends to{}class I extends W{}class D extends I{}class V extends I{}class ie extends W{}class xe extends ie{}class ze extends ie{}class Qe extends W{}class st extends Qe{}class Mt extends Qe{}class It extends W{}class Rt extends It{}class Mr extends It{}class Is extends W{}class Ui extends Is{}class Ng extends Is{}class cc extends W{}class Vg extends cc{}class Ug extends cc{}class uc extends W{}class Wg extends uc{}class Gg extends uc{}class dc extends W{}class Kg extends dc{}class Hg extends dc{}class pc extends W{}class qg extends pc{}class Qg extends pc{}class hc extends W{}class Xg extends hc{}class Jg extends hc{}class mc extends W{}class Yg extends mc{}class Zg extends mc{}class fc extends W{}class ew extends fc{}class tw extends fc{}class _c extends W{}class rw extends _c{}class sw extends _c{}class nw extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class ow extends nw{get_rope_index(P,F,se,_e){const{vision_config:fe,image_token_id:Te,video_token_id:De,vision_start_token_id:Ne}=this.config,Je=fe.spatial_merge_size??2,ht=[];if(F||se){let bt=P.tolist();_e||(_e=(0,d.ones_like)(P));const mt=_e.tolist(),Pt=Array.from({length:3},Vt=>Array.from({length:P.dims[0]},Xt=>Array.from({length:P.dims[1]},ur=>1))),gt=F?F.tolist():[],Tt=se?se.tolist():[];let it=0,St=0;for(let Vt=0;Vt<bt.length;++Vt){const Xt=bt[Vt].filter((Yt,br)=>mt[Vt][br]==1),ir=Xt.reduce((Yt,br,Xs)=>(br==Ne&&Yt.push(Xs),Yt),[]).map(Yt=>Xt[Yt+1]),hr=ir.filter(Yt=>Yt==Te).length,Ct=ir.filter(Yt=>Yt==De).length;let Jt=[],Ir=0,ks=hr,Yo=Ct;for(let Yt=0;Yt<ir.length;++Yt){const br=Xt.findIndex((Sn,xs)=>xs>Ir&&Sn==Te),Xs=Xt.findIndex((Sn,xs)=>xs>Ir&&Sn==De),Cn=ks>0&&br!==-1?br:Xt.length+1,oo=Yo>0&&Xs!==-1?Xs:Xt.length+1;let la,fu,_u,gu;Cn<oo?([fu,_u,gu]=gt[it],++it,--ks,la=Cn):([fu,_u,gu]=Tt[St],++St,--Yo,la=oo);const[Gx,wu,ca]=[Number(fu),Math.floor(Number(_u)/Je),Math.floor(Number(gu)/Je)],Mu=la-Ir,j0=Jt.length>0?(0,f.max)(Jt.at(-1))[0]+1:0;Jt.push(Array.from({length:3*Mu},(Sn,xs)=>j0+xs%Mu));const bu=Mu+j0,ua=Gx*wu*ca,Kx=Array.from({length:ua},(Sn,xs)=>bu+Math.floor(xs/(wu*ca))),Hx=Array.from({length:ua},(Sn,xs)=>bu+Math.floor(xs/ca)%wu),qx=Array.from({length:ua},(Sn,xs)=>bu+xs%ca);Jt.push([Kx,Hx,qx].flat()),Ir=la+ua}if(Ir<Xt.length){const Yt=Jt.length>0?(0,f.max)(Jt.at(-1))[0]+1:0,br=Xt.length-Ir;Jt.push(Array.from({length:3*br},(Xs,Cn)=>Yt+Cn%br))}const Ur=Jt.reduce((Yt,br)=>Yt+br.length,0),vs=new Array(Ur);let no=0;for(let Yt=0;Yt<3;++Yt)for(let br=0;br<Jt.length;++br){const Xs=Jt[br],Cn=Xs.length/3;for(let oo=Yt*Cn;oo<(Yt+1)*Cn;++oo)vs[no++]=Xs[oo]}let oa=0;const ia=mt[Vt];for(let Yt=0;Yt<ia.length;++Yt)if(ia[Yt]==1){for(let br=0;br<3;++br)Pt[br][Vt][Yt]=vs[br*Ur/3+oa];++oa}const aa=(0,f.max)(vs)[0];ht.push(aa+1-bt[Vt].length)}return[new d.Tensor("int64",Pt.flat(1/0),[3,P.dims[0],P.dims[1]]),new d.Tensor("int64",ht,[ht.length,1])]}else if(_e){const{data:bt,dims:mt}=ve(_e),Pt=BigInt64Array.from({length:3*bt.length},(Tt,it)=>bt[it%bt.length]),gt=Array.from({length:mt[0]},(Tt,it)=>(0,f.max)(bt.subarray(mt[1]*it,mt[1]*(it+1)))[0]+1n+BigInt(mt[1]));return[new d.Tensor("int64",Pt,[3,...mt]),new d.Tensor("int64",gt,[gt.length,1])]}else{const[bt,mt]=P.dims,Pt=BigInt64Array.from({length:3*bt*mt},(gt,Tt)=>BigInt(Math.floor(Tt%mt/bt)));return[new d.Tensor("int64",Pt,[3,...P.dims]),(0,d.zeros)([bt,1])]}}async encode_image({pixel_values:P,image_grid_thw:F}){return(await L(this.sessions.vision_encoder,{pixel_values:P,grid_thw:F})).image_features}_merge_input_ids_with_image_features(P){return A({image_token_id:this.config.image_token_id,...P})}prepare_inputs_for_generation(P,F,se){if(F.attention_mask&&!F.position_ids)if(!F.past_key_values)[F.position_ids,F.rope_deltas]=this.get_rope_index(F.input_ids,F.image_grid_thw,F.video_grid_thw,F.attention_mask);else{F.pixel_values=null;const _e=BigInt(Object.values(F.past_key_values)[0].dims.at(-2)),fe=F.rope_deltas.map(Te=>_e+Te);F.position_ids=(0,d.stack)([fe,fe,fe],0)}return F}}class gc extends W{}class iw extends gc{}class aw extends gc{}class wc extends W{}class lw extends wc{}class cw extends wc{}class Mc extends W{}class uw extends Mc{}class dw extends Mc{}class bc extends W{}class pw extends bc{}class hw extends bc{}class yc extends W{}class mw extends yc{}class fw extends yc{}class vc extends W{}class _w extends vc{}class gw extends vc{async _call(P){return new vt(await super._call(P))}}class xc extends W{}class ww extends xc{}class Mw extends xc{async _call(P){return new vt(await super._call(P))}}class bw extends W{}class yw extends bw{}class Tc extends W{}class vw extends Tc{}class xw extends Tc{async _call(P){return new vt(await super._call(P))}}class Tw extends W{}class Ew extends Tw{}class Ec extends W{}class Pw extends Ec{}class Cw extends Ec{async _call(P){return new vt(await super._call(P))}}class Sw extends W{}class $w extends Sw{}class Pc extends W{}class Iw extends Pc{}class kw extends Pc{async _call(P){return new vt(await super._call(P))}}class Aw extends W{}class Fw extends Aw{async _call(P){return new B0(await super._call(P))}}class Cc extends W{}class Ow extends Cc{}class Dw extends Cc{async _call(P){return new vt(await super._call(P))}}class Sc extends W{}class Lw extends Sc{}class zw extends Sc{async _call(P){return new vt(await super._call(P))}}class $c extends W{}class Bw extends $c{}class Rw extends $c{}class Ic extends W{}class jw extends Ic{}class Nw extends Ic{}class kc extends W{}class Vw extends kc{}class Uw extends kc{async _call(P){return new vt(await super._call(P))}}class Wi extends W{}class Ww extends Wi{}class Gw extends Wi{async _call(P){return new Fc(await super._call(P))}}class Ac extends Wi{async _call(P){return new Kw(await super._call(P))}}class Fc extends we{constructor({logits:P,pred_boxes:F}){super(),this.logits=P,this.pred_boxes=F}}class Kw extends we{constructor({logits:P,pred_boxes:F,pred_masks:se}){super(),this.logits=P,this.pred_boxes=F,this.pred_masks=se}}class Oc extends W{}class Hw extends Oc{}class qw extends Oc{async _call(P){return new Xo(await super._call(P))}}class Xo extends we{constructor({logits:P,pred_boxes:F}){super(),this.logits=P,this.pred_boxes=F}}class Dc extends W{}class Qw extends Dc{}class Xw extends Dc{async _call(P){return new Jw(await super._call(P))}}class Jw extends Xo{}class Lc extends W{}class Yw extends Lc{}class Zw extends Lc{async _call(P){return new eM(await super._call(P))}}class eM extends Xo{}class zc extends W{}class tM extends zc{}class rM extends zc{async _call(P){return new Xo(await super._call(P))}}class Bc extends W{}class sM extends Bc{}class nM extends Bc{async _call(P){return new oM(await super._call(P))}}class oM extends Fc{}class Rc extends W{}class iM extends Rc{}class aM extends Rc{async _call(P){return new vt(await super._call(P))}}class jc extends W{}class lM extends jc{}class cM extends jc{async _call(P){return new vt(await super._call(P))}}class Nc extends W{}class uM extends Nc{}class dM extends Nc{async _call(P){return new vt(await super._call(P))}}class Gi extends W{}class pM extends Gi{}class hM extends Gi{async _call(P){return new vt(await super._call(P))}}class mM extends Gi{}class Vc extends W{}class fM extends Vc{}class _M extends Vc{}class Uc extends W{}class gM extends Uc{}class wM extends Uc{}class MM extends W{}class bM extends MM{}class Ki extends W{}class yM extends Ki{}class vM extends Ki{}class xM extends Ki{}class TM extends W{}class EM extends TM{}class PM extends W{}class CM extends PM{}class SM extends W{}class $M extends SM{}class Wc extends W{}class IM extends Wc{}class kM extends Wc{}class Gc extends W{}class AM extends Gc{}class FM extends Gc{}class OM extends W{}class DM extends OM{}class Kc extends W{}class LM extends Kc{}class zM extends Kc{async _call(P){return new vt(await super._call(P))}}class Hc extends W{}class BM extends Hc{}class RM extends Hc{async _call(P){return new vt(await super._call(P))}}class qc extends W{}class jM extends qc{}class NM extends qc{async _call(P){return new vt(await super._call(P))}}class Qc extends W{}class VM extends Qc{}class UM extends Qc{async _call(P){return new vt(await super._call(P))}}class WM extends W{}class GM extends WM{}class Xc extends W{}class KM extends Xc{}class HM extends Xc{async _call(P){return new qM(await super._call(P))}}class qM extends we{constructor({logits:P,pred_boxes:F}){super(),this.logits=P,this.pred_boxes=F}}class QM extends W{}class XM extends QM{async get_image_embeddings({pixel_values:P}){return await te(this,{pixel_values:P})}async forward(P){if((!P.image_embeddings||!P.image_positional_embeddings)&&(P={...P,...await this.get_image_embeddings(P)}),!P.input_labels&&P.input_points){const se=P.input_points.dims.slice(0,-1),_e=se.reduce((fe,Te)=>fe*Te,1);P.input_labels=new d.Tensor("int64",new BigInt64Array(_e).fill(1n),se)}const F={image_embeddings:P.image_embeddings,image_positional_embeddings:P.image_positional_embeddings};return P.input_points&&(F.input_points=P.input_points),P.input_labels&&(F.input_labels=P.input_labels),P.input_boxes&&(F.input_boxes=P.input_boxes),await L(this.sessions.prompt_encoder_mask_decoder,F)}async _call(P){return new JM(await super._call(P))}}class JM extends we{constructor({iou_scores:P,pred_masks:F}){super(),this.iou_scores=P,this.pred_masks=F}}class Jc extends W{}class YM extends Jc{}class ZM extends Jc{}class Yc extends W{}class eb extends Yc{}class tb extends Yc{}class Qs extends W{}class rb extends Qs{}class sb extends Qs{async _call(P){return new Pn(await super._call(P))}}class nb extends Qs{async _call(P){return new vt(await super._call(P))}}class ob extends Qs{async _call(P){return new xr(await super._call(P))}}class Zc extends W{}class ib extends Zc{}class ab extends Zc{async _call(P){return new xr(await super._call(P))}}class lb extends W{}class cb extends lb{}class Hi extends W{}class ub extends Hi{}class db extends Hi{async _call(P){return new Pn(await super._call(P))}}class pb extends Hi{async _call(P){return new vt(await super._call(P))}}class Jo extends W{}class hb extends Jo{}class mb extends Jo{async _call(P){return new Pn(await super._call(P))}}class fb extends Jo{async _call(P){return new vt(await super._call(P))}}class _b extends Jo{async _call(P){return new xr(await super._call(P))}}class qi extends W{}class gb extends qi{}class wb extends qi{async _call(P){return new Pn(await super._call(P))}}class Mb extends qi{async _call(P){return new vt(await super._call(P))}}class Ix extends W{}class bb extends Qs{}class yb extends Qs{async _call(P){return new Pn(await super._call(P))}}class vb extends Qs{async _call(P){return new vt(await super._call(P))}}class ro extends W{}class xb extends ro{}class Tb extends ro{async _call(P){return new Pn(await super._call(P))}}class Eb extends ro{async _call(P){return new vt(await super._call(P))}}class Pb extends ro{async _call(P){return new z0(await super._call(P))}}class Cb extends ro{async _call(P){return new xr(await super._call(P))}}class Sb extends W{}class $b extends Sb{}class Qi extends W{}class kx extends Qi{}class Ib extends Qi{}class kb extends Qi{async generate_speech(P,F,{threshold:se=.5,minlenratio:_e=0,maxlenratio:fe=20,vocoder:Te=null}={}){const De={input_ids:P},{encoder_outputs:Ne,encoder_attention_mask:Je}=await te(this,De),ht=Ne.dims[1]/this.config.reduction_factor,bt=Math.floor(ht*fe),mt=Math.floor(ht*_e),Pt=this.config.num_mel_bins;let gt=[],Tt=null,it=null,St=0;for(;;){++St;const ur=X(!!it);let ir;it?ir=it.output_sequence_out:ir=new d.Tensor("float32",new Float32Array(Pt),[1,1,Pt]);let hr={use_cache_branch:ur,output_sequence:ir,encoder_attention_mask:Je,speaker_embeddings:F,encoder_hidden_states:Ne};this.addPastKeyValues(hr,Tt),it=await L(this.sessions.decoder_model_merged,hr),Tt=this.getPastKeyValues(it,Tt);const{prob:Ct,spectrum:Jt}=it;if(gt.push(Jt),St>=mt&&(Array.from(Ct.data).filter(Ir=>Ir>=se).length>0||St>=bt))break}const Vt=(0,d.cat)(gt),{waveform:Xt}=await L(Te.sessions.model,{spectrogram:Vt});return{spectrogram:Vt,waveform:Xt}}}class Ab extends W{constructor(){super(...arguments);Z(this,"main_input_name","spectrogram")}}class Fb extends W{}class Ob extends Fb{}class eu extends W{}class Db extends eu{}class Lb extends eu{}class tu extends W{}class zb extends tu{}class Bb extends tu{}class ru extends W{}class Rb extends ru{}class jb extends ru{}class Xi extends W{}class Nb extends Xi{}class Vb extends Xi{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"text_model"})}}class Ub extends Xi{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"audio_model"})}}class Wb extends W{}class su extends Wb{async _call(P){return new R0(await super._call(P))}}class Ji extends W{}class Ax extends Ji{}class Gb extends Ji{}class Kb extends Ji{}class nu extends W{}class Hb extends nu{}class qb extends nu{}class ou extends W{}class Qb extends ou{}class Xb extends ou{async _call(P){return new vt(await super._call(P))}}class iu extends W{}class Fx extends iu{}class Ox extends iu{}class au extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(F){const[se,_e]=F.dims,fe=this.config.decoder.num_codebooks,Te=_e-fe;let De=0;for(let ht=0;ht<F.size;++ht){if(F.data[ht]===this.config.decoder.pad_token_id)continue;const bt=ht%_e,mt=Math.floor(ht/_e)%fe,Pt=bt-mt;Pt>0&&Pt<=Te&&(F.data[De++]=F.data[ht])}const Ne=Math.floor(se/fe),Je=De/(Ne*fe);return new d.Tensor(F.type,F.data.slice(0,De),[Ne,fe,Je])}prepare_inputs_for_generation(F,se,_e){let fe=structuredClone(F);for(let De=0;De<fe.length;++De)for(let Ne=0;Ne<fe[De].length;++Ne)De%this.config.decoder.num_codebooks>=Ne&&(fe[De][Ne]=BigInt(this.config.decoder.pad_token_id));return _e.guidance_scale!==null&&_e.guidance_scale>1&&(fe=fe.concat(fe)),super.prepare_inputs_for_generation(fe,se,_e)}async generate(F){const se=await super.generate(F),_e=this._apply_and_filter_by_delay_pattern_mask(se).unsqueeze_(0),{audio_values:fe}=await L(this.sessions.encodec_decode,{audio_codes:_e});return fe}}class Yi extends W{}class Jb extends Yi{}class Yb extends Yi{async _call(P){return new vt(await super._call(P))}}class Zb extends Yi{}class Zi extends W{}class ey extends Zi{}class ty extends Zi{async _call(P){return new vt(await super._call(P))}}class ry extends Zi{}class ea extends W{}class sy extends ea{}class ny extends ea{async _call(P){return new vt(await super._call(P))}}class oy extends ea{}class ta extends W{}class iy extends ta{}class ay extends ta{async _call(P){return new vt(await super._call(P))}}class ly extends ta{}class cy extends W{}class uy extends cy{}class dy extends W{}class py extends dy{constructor(...F){super(...F);Z(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(F){const se=this._generation_mode??"text";let _e;if(se==="text"||!F.past_key_values){const Je=this.sessions.prepare_inputs_embeds,ht=(0,a.pick)(F,Je.inputNames);_e=await L(Je,ht)}else{const Je=this.sessions.gen_img_embeds,ht=(0,a.pick)({image_ids:F.input_ids},Je.inputNames);_e=await L(Je,ht)}const fe={...F,..._e},Te=await ue(this,fe),De=this.sessions[se==="text"?"lm_head":"gen_head"];if(!De)throw new Error(`Unable to find "${De}" generation head`);const Ne=await L(De,(0,a.pick)(Te,De.inputNames));return{..._e,...Te,...Ne}}async generate(F){return this._generation_mode="text",super.generate(F)}async generate_images(F){this._generation_mode="image";const se=(F.inputs??F[this.main_input_name]).dims[1],fe=(await super.generate(F)).slice(null,[se,null]),Te=this.sessions.image_decode,{decoded_image:De}=await L(Te,{generated_tokens:fe}),Ne=De.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Je=[];for(const ht of Ne){const bt=_.RawImage.fromTensor(ht);Je.push(bt)}return Je}}class hy extends we{constructor({char_logits:P,bpe_logits:F,wp_logits:se}){super(),this.char_logits=P,this.bpe_logits=F,this.wp_logits=se}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class my extends W{}class fy extends my{async _call(P){return new hy(await super._call(P))}}class lu extends W{}class _y extends lu{}class gy extends lu{}class cu extends W{}class wy extends cu{}class My extends cu{}class by extends W{constructor(){super(...arguments);Z(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class yy extends by{_merge_input_ids_with_audio_features(P){const F=P.audio_features.dims.at(-1),se=P.audio_features.view(-1,F);return K({audio_token_id:this.config.ignore_index,...P,audio_features:se})}}class ra extends W{constructor(){super(...arguments);Z(this,"main_input_name","input_values");Z(this,"forward_params",["input_values"])}}class vy extends we{constructor({audio_codes:P}){super(),this.audio_codes=P}}class xy extends we{constructor({audio_values:P}){super(),this.audio_values=P}}class Ty extends ra{async encode(P){return new vy(await L(this.sessions.encoder_model,P))}async decode(P){return new xy(await L(this.sessions.decoder_model,P))}}class Ey extends ra{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"encoder_model"})}}class Py extends ra{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"decoder_model"})}}class sa extends W{constructor(){super(...arguments);Z(this,"main_input_name","input_values");Z(this,"forward_params",["input_values"])}}class Cy extends we{constructor({audio_codes:P}){super(),this.audio_codes=P}}class Sy extends we{constructor({audio_values:P}){super(),this.audio_values=P}}class $y extends sa{async encode(P){return new Cy(await L(this.sessions.encoder_model,P))}async decode(P){return new Sy(await L(this.sessions.decoder_model,P))}}class Iy extends sa{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"encoder_model"})}}class ky extends sa{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"decoder_model"})}}class na extends W{constructor(){super(...arguments);Z(this,"main_input_name","input_values");Z(this,"forward_params",["input_values"])}}class Ay extends na{async encode(P){return await L(this.sessions.encoder_model,P)}async decode(P){return await L(this.sessions.decoder_model,P)}}class Fy extends na{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"encoder_model"})}}class Oy extends na{static async from_pretrained(P,F={}){return super.from_pretrained(P,{...F,model_file_name:F.model_file_name??"decoder_model"})}}class Lt{static async from_pretrained(P,{progress_callback:F=null,config:se=null,cache_dir:_e=null,local_files_only:fe=!1,revision:Te="main",model_file_name:De=null,subfolder:Ne="onnx",device:Je=null,dtype:ht=null,use_external_data_format:bt=null,session_options:mt={}}={}){const Pt={progress_callback:F,config:se,cache_dir:_e,local_files_only:fe,revision:Te,model_file_name:De,subfolder:Ne,device:Je,dtype:ht,use_external_data_format:bt,session_options:mt};if(Pt.config=await s.AutoConfig.from_pretrained(P,Pt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const gt=Pt.config.model_type;for(const Tt of this.MODEL_CLASS_MAPPINGS){let it=Tt.get(gt);if(!it){for(const St of Tt.values())if(St[0]===gt){it=St;break}if(!it)continue}return await it[1].from_pretrained(P,Pt)}if(this.BASE_IF_FAIL)return i0.has(gt)||console.warn(`Unknown model class "${gt}", attempting to construct from base class.`),await W.from_pretrained(P,Pt);throw Error(`Unsupported model type: ${gt}`)}}Z(Lt,"MODEL_CLASS_MAPPINGS",null),Z(Lt,"BASE_IF_FAIL",!1);const Dx=new Map([["bert",["BertModel",Pe]],["modernbert",["ModernBertModel",ke]],["nomic_bert",["NomicBertModel",at]],["roformer",["RoFormerModel",nt]],["electra",["ElectraModel",me]],["esm",["EsmModel",ct]],["convbert",["ConvBertModel",wt]],["camembert",["CamembertModel",Zt]],["deberta",["DebertaModel",kr]],["deberta-v2",["DebertaV2Model",Cs]],["mpnet",["MPNetModel",pn]],["albert",["AlbertModel",pe]],["distilbert",["DistilBertModel",ns]],["roberta",["RobertaModel",wr]],["xlm",["XLMModel",Bn]],["xlm-roberta",["XLMRobertaModel",Pi]],["clap",["ClapModel",Nb]],["clip",["CLIPModel",Bi]],["clipseg",["CLIPSegModel",Vi]],["chinese_clip",["ChineseCLIPModel",Do]],["siglip",["SiglipModel",ji]],["jina_clip",["JinaCLIPModel",Lo]],["mobilebert",["MobileBertModel",Pr]],["squeezebert",["SqueezeBertModel",_n]],["wav2vec2",["Wav2Vec2Model",rb]],["wav2vec2-bert",["Wav2Vec2BertModel",gb]],["unispeech",["UniSpeechModel",ub]],["unispeech-sat",["UniSpeechSatModel",hb]],["hubert",["HubertModel",bb]],["wavlm",["WavLMModel",xb]],["audio-spectrogram-transformer",["ASTModel",ki]],["vits",["VitsModel",su]],["pyannote",["PyAnnoteModel",ib]],["wespeaker-resnet",["WeSpeakerResNetModel",cb]],["detr",["DetrModel",Ww]],["rt_detr",["RTDetrModel",Hw]],["rt_detr_v2",["RTDetrV2Model",Qw]],["rf_detr",["RFDetrModel",Yw]],["d_fine",["DFineModel",tM]],["table-transformer",["TableTransformerModel",sM]],["vit",["ViTModel",_w]],["ijepa",["IJepaModel",ww]],["pvt",["PvtModel",vw]],["vit_msn",["ViTMSNModel",Pw]],["vit_mae",["ViTMAEModel",Ew]],["groupvit",["GroupViTModel",$w]],["fastvit",["FastViTModel",Iw]],["mobilevit",["MobileViTModel",Ow]],["mobilevitv2",["MobileViTV2Model",Lw]],["owlvit",["OwlViTModel",Bw]],["owlv2",["Owlv2Model",jw]],["beit",["BeitModel",Vw]],["deit",["DeiTModel",iM]],["hiera",["HieraModel",lM]],["convnext",["ConvNextModel",LM]],["convnextv2",["ConvNextV2Model",BM]],["dinov2",["Dinov2Model",jM]],["dinov2_with_registers",["Dinov2WithRegistersModel",VM]],["resnet",["ResNetModel",uM]],["swin",["SwinModel",pM]],["swin2sr",["Swin2SRModel",fM]],["donut-swin",["DonutSwinModel",DM]],["yolos",["YolosModel",KM]],["dpt",["DPTModel",gM]],["glpn",["GLPNModel",AM]],["hifigan",["SpeechT5HifiGan",Ab]],["efficientnet",["EfficientNetModel",Qb]],["decision_transformer",["DecisionTransformerModel",uy]],["patchtst",["PatchTSTForPrediction",_y]],["patchtsmixer",["PatchTSMixerForPrediction",wy]],["mobilenet_v1",["MobileNetV1Model",Jb]],["mobilenet_v2",["MobileNetV2Model",ey]],["mobilenet_v3",["MobileNetV3Model",sy]],["mobilenet_v4",["MobileNetV4Model",iy]],["maskformer",["MaskFormerModel",IM]],["mgp-str",["MgpstrForSceneTextRecognition",fy]],["style_text_to_speech_2",["StyleTextToSpeech2Model",$b]]]),Lx=new Map([["t5",["T5Model",ce]],["longt5",["LongT5Model",Xe]],["mt5",["MT5Model",_t]],["bart",["BartModel",or]],["mbart",["MBartModel",tr]],["marian",["MarianModel",YM]],["whisper",["WhisperModel",Co]],["m2m_100",["M2M100Model",eb]],["blenderbot",["BlenderbotModel",gr]],["blenderbot-small",["BlenderbotSmallModel",is]]]),zx=new Map([["mimi",["MimiModel",Ty]],["dac",["DacModel",$y]],["snac",["SnacModel",Ay]]]),Bx=new Map([["bloom",["BloomModel",uw]],["jais",["JAISModel",No]],["gpt2",["GPT2Model",yn]],["gptj",["GPTJModel",Jn]],["gpt_bigcode",["GPTBigCodeModel",Ko]],["gpt_neo",["GPTNeoModel",Xr]],["gpt_neox",["GPTNeoXModel",Uo]],["codegen",["CodeGenModel",Zn]],["llama",["LlamaModel",qo]],["exaone",["ExaoneModel",xe]],["olmo",["OlmoModel",Rt]],["olmo2",["Olmo2Model",Ui]],["mobilellm",["MobileLLMModel",st]],["granite",["GraniteModel",Vg]],["cohere",["CohereModel",Wg]],["gemma",["GemmaModel",Kg]],["gemma2",["Gemma2Model",qg]],["gemma3_text",["Gemma3Model",Xg]],["helium",["HeliumModel",h]],["glm",["GlmModel",D]],["openelm",["OpenELMModel",Yg]],["qwen2",["Qwen2Model",ew]],["qwen3",["Qwen3Model",rw]],["phi",["PhiModel",iw]],["phi3",["Phi3Model",lw]],["mpt",["MptModel",pw]],["opt",["OPTModel",mw]],["mistral",["MistralModel",Db]],["starcoder2",["Starcoder2Model",zb]],["falcon",["FalconModel",Rb]],["stablelm",["StableLmModel",Hb]]]),uu=new Map([["speecht5",["SpeechT5ForSpeechToText",Ib]],["whisper",["WhisperForConditionalGeneration",Rn]],["lite-whisper",["LiteWhisperForConditionalGeneration",So]],["moonshine",["MoonshineForConditionalGeneration",Io]]]),Dy=new Map([["speecht5",["SpeechT5ForTextToSpeech",kb]]]),Ly=new Map([["vits",["VitsModel",su]],["musicgen",["MusicgenForConditionalGeneration",au]]]),zy=new Map([["bert",["BertForSequenceClassification",Fe]],["modernbert",["ModernBertForSequenceClassification",Ye]],["roformer",["RoFormerForSequenceClassification",Qt]],["electra",["ElectraForSequenceClassification",be]],["esm",["EsmForSequenceClassification",Vr]],["convbert",["ConvBertForSequenceClassification",z]],["camembert",["CamembertForSequenceClassification",nr]],["deberta",["DebertaForSequenceClassification",ws]],["deberta-v2",["DebertaV2ForSequenceClassification",Ms]],["mpnet",["MPNetForSequenceClassification",mn]],["albert",["AlbertForSequenceClassification",$]],["distilbert",["DistilBertForSequenceClassification",os]],["roberta",["RobertaForSequenceClassification",rr]],["xlm",["XLMForSequenceClassification",To]],["xlm-roberta",["XLMRobertaForSequenceClassification",Si]],["bart",["BartForSequenceClassification",pr]],["mbart",["MBartForSequenceClassification",_r]],["mobilebert",["MobileBertForSequenceClassification",un]],["squeezebert",["SqueezeBertForSequenceClassification",wn]]]),By=new Map([["bert",["BertForTokenClassification",je]],["modernbert",["ModernBertForTokenClassification",We]],["roformer",["RoFormerForTokenClassification",Ft]],["electra",["ElectraForTokenClassification",dt]],["esm",["EsmForTokenClassification",Ls]],["convbert",["ConvBertForTokenClassification",ne]],["camembert",["CamembertForTokenClassification",Wt]],["deberta",["DebertaForTokenClassification",ss]],["deberta-v2",["DebertaV2ForTokenClassification",Dr]],["mpnet",["MPNetForTokenClassification",fn]],["distilbert",["DistilBertForTokenClassification",Ar]],["roberta",["RobertaForTokenClassification",dr]],["xlm",["XLMForTokenClassification",Ti]],["xlm-roberta",["XLMRobertaForTokenClassification",$i]]]),du=new Map([["t5",["T5ForConditionalGeneration",ye]],["longt5",["LongT5ForConditionalGeneration",Ge]],["mt5",["MT5ForConditionalGeneration",Ot]],["bart",["BartForConditionalGeneration",Nt]],["mbart",["MBartForConditionalGeneration",qr]],["marian",["MarianMTModel",ZM]],["m2m_100",["M2M100ForConditionalGeneration",tb]],["blenderbot",["BlenderbotForConditionalGeneration",Cr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Sr]]]),pu=new Map([["bloom",["BloomForCausalLM",dw]],["gpt2",["GPT2LMHeadModel",ut]],["jais",["JAISLMHeadModel",Vo]],["gptj",["GPTJForCausalLM",Go]],["gpt_bigcode",["GPTBigCodeForCausalLM",Tn]],["gpt_neo",["GPTNeoForCausalLM",vn]],["gpt_neox",["GPTNeoXForCausalLM",Wo]],["codegen",["CodeGenForCausalLM",Ho]],["llama",["LlamaForCausalLM",Qo]],["exaone",["ExaoneForCausalLM",ze]],["olmo",["OlmoForCausalLM",Mr]],["olmo2",["Olmo2ForCausalLM",Ng]],["mobilellm",["MobileLLMForCausalLM",Mt]],["granite",["GraniteForCausalLM",Ug]],["cohere",["CohereForCausalLM",Gg]],["gemma",["GemmaForCausalLM",Hg]],["gemma2",["Gemma2ForCausalLM",Qg]],["gemma3_text",["Gemma3ForCausalLM",Jg]],["helium",["HeliumForCausalLM",T]],["glm",["GlmForCausalLM",V]],["openelm",["OpenELMForCausalLM",Zg]],["qwen2",["Qwen2ForCausalLM",tw]],["qwen3",["Qwen3ForCausalLM",sw]],["phi",["PhiForCausalLM",aw]],["phi3",["Phi3ForCausalLM",cw]],["mpt",["MptForCausalLM",hw]],["opt",["OPTForCausalLM",fw]],["mbart",["MBartForCausalLM",ys]],["mistral",["MistralForCausalLM",Lb]],["starcoder2",["Starcoder2ForCausalLM",Bb]],["falcon",["FalconForCausalLM",jb]],["trocr",["TrOCRForCausalLM",Ob]],["stablelm",["StableLmForCausalLM",qb]],["phi3_v",["Phi3VForCausalLM",Oo]]]),Rx=new Map([["multi_modality",["MultiModalityCausalLM",py]]]),Ry=new Map([["bert",["BertForMaskedLM",Se]],["modernbert",["ModernBertForMaskedLM",He]],["roformer",["RoFormerForMaskedLM",Et]],["electra",["ElectraForMaskedLM",Oe]],["esm",["EsmForMaskedLM",fr]],["convbert",["ConvBertForMaskedLM",ts]],["camembert",["CamembertForMaskedLM",$t]],["deberta",["DebertaForMaskedLM",rs]],["deberta-v2",["DebertaV2ForMaskedLM",Hr]],["mpnet",["MPNetForMaskedLM",hn]],["albert",["AlbertForMaskedLM",J]],["distilbert",["DistilBertForMaskedLM",Le]],["roberta",["RobertaForMaskedLM",cr]],["xlm",["XLMWithLMHeadModel",xi]],["xlm-roberta",["XLMRobertaForMaskedLM",Ci]],["mobilebert",["MobileBertForMaskedLM",zs]],["squeezebert",["SqueezeBertForMaskedLM",gn]]]),jy=new Map([["bert",["BertForQuestionAnswering",Ke]],["roformer",["RoFormerForQuestionAnswering",mr]],["electra",["ElectraForQuestionAnswering",et]],["convbert",["ConvBertForQuestionAnswering",B]],["camembert",["CamembertForQuestionAnswering",Or]],["deberta",["DebertaForQuestionAnswering",Ps]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ds]],["mpnet",["MPNetForQuestionAnswering",Ws]],["albert",["AlbertForQuestionAnswering",U]],["distilbert",["DistilBertForQuestionAnswering",Nr]],["roberta",["RobertaForQuestionAnswering",Lr]],["xlm",["XLMForQuestionAnswering",Ei]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Ii]],["mobilebert",["MobileBertForQuestionAnswering",dn]],["squeezebert",["SqueezeBertForQuestionAnswering",Mn]]]),hu=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",jn]],["idefics3",["Idefics3ForConditionalGeneration",Un]],["smolvlm",["SmolVLMForConditionalGeneration",Fo]]]),Ny=new Map([["llava",["LlavaForConditionalGeneration",Nn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",ko]],["moondream1",["Moondream1ForConditionalGeneration",Fi]],["florence2",["Florence2ForConditionalGeneration",Di]],["qwen2-vl",["Qwen2VLForConditionalGeneration",ow]],["idefics3",["Idefics3ForConditionalGeneration",Un]],["smolvlm",["SmolVLMForConditionalGeneration",Fo]],["paligemma",["PaliGemmaForConditionalGeneration",Ao]]]),Vy=new Map([["ultravox",["UltravoxModel",yy]]]),jx=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",jn]]]),Uy=new Map([["vit",["ViTForImageClassification",gw]],["ijepa",["IJepaForImageClassification",Mw]],["pvt",["PvtForImageClassification",xw]],["vit_msn",["ViTMSNForImageClassification",Cw]],["fastvit",["FastViTForImageClassification",kw]],["mobilevit",["MobileViTForImageClassification",Dw]],["mobilevitv2",["MobileViTV2ForImageClassification",zw]],["beit",["BeitForImageClassification",Uw]],["deit",["DeiTForImageClassification",aM]],["hiera",["HieraForImageClassification",cM]],["convnext",["ConvNextForImageClassification",zM]],["convnextv2",["ConvNextV2ForImageClassification",RM]],["dinov2",["Dinov2ForImageClassification",NM]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",UM]],["resnet",["ResNetForImageClassification",dM]],["swin",["SwinForImageClassification",hM]],["segformer",["SegformerForImageClassification",Gb]],["efficientnet",["EfficientNetForImageClassification",Xb]],["mobilenet_v1",["MobileNetV1ForImageClassification",Yb]],["mobilenet_v2",["MobileNetV2ForImageClassification",ty]],["mobilenet_v3",["MobileNetV3ForImageClassification",ny]],["mobilenet_v4",["MobileNetV4ForImageClassification",ay]]]),Wy=new Map([["detr",["DetrForObjectDetection",Gw]],["rt_detr",["RTDetrForObjectDetection",qw]],["rt_detr_v2",["RTDetrV2ForObjectDetection",Xw]],["rf_detr",["RFDetrForObjectDetection",Zw]],["d_fine",["DFineForObjectDetection",rM]],["table-transformer",["TableTransformerForObjectDetection",nM]],["yolos",["YolosForObjectDetection",HM]]]),Gy=new Map([["owlvit",["OwlViTForObjectDetection",Rw]],["owlv2",["Owlv2ForObjectDetection",Nw]],["grounding-dino",["GroundingDinoForObjectDetection",GM]]]),so=new Map([["detr",["DetrForSegmentation",Ac]],["clipseg",["CLIPSegForImageSegmentation",Ro]]]),Ky=new Map([["segformer",["SegformerForSemanticSegmentation",Kb]],["sapiens",["SapiensForSemanticSegmentation",yM]],["swin",["SwinForSemanticSegmentation",mM]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",Zb]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",ry]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",oy]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",ly]]]),Hy=new Map([["detr",["DetrForSegmentation",Ac]],["maskformer",["MaskFormerForInstanceSegmentation",kM]]]),qy=new Map([["sam",["SamModel",XM]]]),Qy=new Map([["wav2vec2",["Wav2Vec2ForCTC",sb]],["wav2vec2-bert",["Wav2Vec2BertForCTC",wb]],["unispeech",["UniSpeechForCTC",db]],["unispeech-sat",["UniSpeechSatForCTC",mb]],["wavlm",["WavLMForCTC",Tb]],["hubert",["HubertForCTC",yb]]]),Xy=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",nb]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Mb]],["unispeech",["UniSpeechForSequenceClassification",pb]],["unispeech-sat",["UniSpeechSatForSequenceClassification",fb]],["wavlm",["WavLMForSequenceClassification",Eb]],["hubert",["HubertForSequenceClassification",vb]],["audio-spectrogram-transformer",["ASTForAudioClassification",Ai]]]),Jy=new Map([["wavlm",["WavLMForXVector",Pb]]]),Yy=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",_b]],["wavlm",["WavLMForAudioFrameClassification",Cb]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",ob]],["pyannote",["PyAnnoteForAudioFrameClassification",ab]]]),Zy=new Map([["vitmatte",["VitMatteForImageMatting",Fw]]]),Nx=new Map([["patchtst",["PatchTSTForPrediction",gy]],["patchtsmixer",["PatchTSMixerForPrediction",My]]]),e0=new Map([["swin2sr",["Swin2SRForImageSuperResolution",_M]]]),t0=new Map([["dpt",["DPTForDepthEstimation",wM]],["depth_anything",["DepthAnythingForDepthEstimation",bM]],["glpn",["GLPNForDepthEstimation",FM]],["sapiens",["SapiensForDepthEstimation",vM]],["depth_pro",["DepthProForDepthEstimation",EM]],["metric3d",["Metric3DForDepthEstimation",CM]],["metric3dv2",["Metric3Dv2ForDepthEstimation",$M]]]),r0=new Map([["sapiens",["SapiensForNormalEstimation",xM]]]),s0=new Map([["vitpose",["VitPoseForPoseEstimation",yw]]]),n0=new Map([["clip",["CLIPVisionModelWithProjection",Hs]],["siglip",["SiglipVisionModel",Kn]],["jina_clip",["JinaCLIPVisionModel",Bo]]]),o0=[[Dx,x.EncoderOnly],[Lx,x.EncoderDecoder],[Bx,x.DecoderOnly],[zx,x.AutoEncoder],[zy,x.EncoderOnly],[By,x.EncoderOnly],[du,x.Seq2Seq],[uu,x.Seq2Seq],[pu,x.DecoderOnly],[Rx,x.MultiModality],[Ry,x.EncoderOnly],[jy,x.EncoderOnly],[hu,x.Vision2Seq],[Ny,x.ImageTextToText],[Vy,x.AudioTextToText],[Uy,x.EncoderOnly],[so,x.EncoderOnly],[Hy,x.EncoderOnly],[Ky,x.EncoderOnly],[Zy,x.EncoderOnly],[Nx,x.EncoderOnly],[e0,x.EncoderOnly],[t0,x.EncoderOnly],[r0,x.EncoderOnly],[s0,x.EncoderOnly],[Wy,x.EncoderOnly],[Gy,x.EncoderOnly],[qy,x.MaskGeneration],[Qy,x.EncoderOnly],[Xy,x.EncoderOnly],[Dy,x.Seq2Seq],[Ly,x.EncoderOnly],[Jy,x.EncoderOnly],[Yy,x.EncoderOnly],[n0,x.EncoderOnly]];for(const[M,P]of o0)for(const[F,se]of M.values())v.set(F,P),y.set(se,F),w.set(F,se);const Vx=[["MusicgenForConditionalGeneration",au,x.Musicgen],["Phi3VForCausalLM",Oo,x.Phi3V],["CLIPTextModelWithProjection",Ri,x.EncoderOnly],["SiglipTextModel",Ni,x.EncoderOnly],["JinaCLIPTextModel",zo,x.EncoderOnly],["ClapTextModelWithProjection",Vb,x.EncoderOnly],["ClapAudioModelWithProjection",Ub,x.EncoderOnly],["DacEncoderModel",Iy,x.EncoderOnly],["DacDecoderModel",ky,x.EncoderOnly],["MimiEncoderModel",Ey,x.EncoderOnly],["MimiDecoderModel",Py,x.EncoderOnly],["SnacEncoderModel",Fy,x.EncoderOnly],["SnacDecoderModel",Oy,x.EncoderOnly]];for(const[M,P,F]of Vx)v.set(M,F),y.set(P,M),w.set(M,P);const i0=new Map([["modnet",so],["birefnet",so],["isnet",so],["ben",so]]);for(const[M,P]of i0.entries())P.set(M,["PreTrainedModel",W]),v.set(M,x.EncoderOnly),y.set(W,M),w.set(M,W);class mu extends Lt{}Z(mu,"MODEL_CLASS_MAPPINGS",o0.map(P=>P[0])),Z(mu,"BASE_IF_FAIL",!0);class a0 extends Lt{}Z(a0,"MODEL_CLASS_MAPPINGS",[zy]);class l0 extends Lt{}Z(l0,"MODEL_CLASS_MAPPINGS",[By]);class c0 extends Lt{}Z(c0,"MODEL_CLASS_MAPPINGS",[du]);class u0 extends Lt{}Z(u0,"MODEL_CLASS_MAPPINGS",[uu]);class d0 extends Lt{}Z(d0,"MODEL_CLASS_MAPPINGS",[Dy]);class p0 extends Lt{}Z(p0,"MODEL_CLASS_MAPPINGS",[Ly]);class h0 extends Lt{}Z(h0,"MODEL_CLASS_MAPPINGS",[pu]);class m0 extends Lt{}Z(m0,"MODEL_CLASS_MAPPINGS",[Ry]);class f0 extends Lt{}Z(f0,"MODEL_CLASS_MAPPINGS",[jy]);class _0 extends Lt{}Z(_0,"MODEL_CLASS_MAPPINGS",[hu]);class g0 extends Lt{}Z(g0,"MODEL_CLASS_MAPPINGS",[Uy]);class w0 extends Lt{}Z(w0,"MODEL_CLASS_MAPPINGS",[so]);class M0 extends Lt{}Z(M0,"MODEL_CLASS_MAPPINGS",[Ky]);class b0 extends Lt{}Z(b0,"MODEL_CLASS_MAPPINGS",[Hy]);class y0 extends Lt{}Z(y0,"MODEL_CLASS_MAPPINGS",[Wy]);class v0 extends Lt{}Z(v0,"MODEL_CLASS_MAPPINGS",[Gy]);class x0 extends Lt{}Z(x0,"MODEL_CLASS_MAPPINGS",[qy]);class T0 extends Lt{}Z(T0,"MODEL_CLASS_MAPPINGS",[Qy]);class E0 extends Lt{}Z(E0,"MODEL_CLASS_MAPPINGS",[Xy]);class P0 extends Lt{}Z(P0,"MODEL_CLASS_MAPPINGS",[Jy]);class C0 extends Lt{}Z(C0,"MODEL_CLASS_MAPPINGS",[Yy]);class S0 extends Lt{}Z(S0,"MODEL_CLASS_MAPPINGS",[jx]);class $0 extends Lt{}Z($0,"MODEL_CLASS_MAPPINGS",[Zy]);class I0 extends Lt{}Z(I0,"MODEL_CLASS_MAPPINGS",[e0]);class k0 extends Lt{}Z(k0,"MODEL_CLASS_MAPPINGS",[t0]);class A0 extends Lt{}Z(A0,"MODEL_CLASS_MAPPINGS",[r0]);class F0 extends Lt{}Z(F0,"MODEL_CLASS_MAPPINGS",[s0]);class O0 extends Lt{}Z(O0,"MODEL_CLASS_MAPPINGS",[n0]);class D0 extends Lt{}Z(D0,"MODEL_CLASS_MAPPINGS",[Ny]);class L0 extends Lt{}Z(L0,"MODEL_CLASS_MAPPINGS",[Vy]);class Ux extends we{constructor({logits:P,past_key_values:F,encoder_outputs:se,decoder_attentions:_e=null,cross_attentions:fe=null}){super(),this.logits=P,this.past_key_values=F,this.encoder_outputs=se,this.decoder_attentions=_e,this.cross_attentions=fe}}class vt extends we{constructor({logits:P,...F}){super(),this.logits=P;const se=Object.values(F);se.length>0&&(this.attentions=se)}}class z0 extends we{constructor({logits:P,embeddings:F}){super(),this.logits=P,this.embeddings=F}}class xr extends we{constructor({logits:P}){super(),this.logits=P}}class $r extends we{constructor({logits:P}){super(),this.logits=P}}class zr extends we{constructor({start_logits:P,end_logits:F}){super(),this.start_logits=P,this.end_logits=F}}class Pn extends we{constructor({logits:P}){super(),this.logits=P}}class Wx extends we{constructor({logits:P,past_key_values:F}){super(),this.logits=P,this.past_key_values=F}}class B0 extends we{constructor({alphas:P}){super(),this.alphas=P}}class R0 extends we{constructor({waveform:P,spectrogram:F}){super(),this.waveform=P,this.spectrogram=F}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,u=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=u,this.window=(0,n.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,n.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,s.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const u=this.std*2,p=l.data;for(let c=0;c<p.length;++c)p[c]=(p[c]-this.mean)/u}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>i});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var o=t("./src/models/feature_extractors.js");class i{static async from_pretrained(l,u={}){const p=await(0,n.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,u),c=p.feature_extractor_type,d=o[c];if(!d)throw new Error(`Unknown feature_extractor_type: '${c}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new d(p)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>a});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),o=t("./src/base/image_processors_utils.js"),i=t("./src/models/image_processors.js");class a{static async from_pretrained(u,p={}){const c=await(0,n.getModelJSON)(u,s.IMAGE_PROCESSOR_NAME,!0,p),d=c.image_processor_type??c.feature_extractor_type;let _=i[d];return _||(d!==void 0&&console.warn(`Image processor type '${d}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),_=o.ImageProcessor),new _(c)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>u});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),o=t("./src/base/processing_utils.js"),i=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class u{static async from_pretrained(c,d={}){const _=await(0,n.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,d),{image_processor_type:f,feature_extractor_type:E,processor_class:k}=_;if(k&&i[k])return i[k].from_pretrained(c,d);if(!f&&!E)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const b={};if(f){const C=a[f];if(!C)throw new Error(`Unknown image_processor_type: '${f}'.`);b.image_processor=new C(_)}if(E){const C=a[E];if(C)b.image_processor=new C(_);else{const x=l[E];if(!x)throw new Error(`Unknown feature_extractor_type: '${E}'.`);b.feature_extractor=new x(_)}}const g={};return new o.Processor(g,b)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,n.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,u,p){let c;const d=a.length-l;if(d>0)if(u==="rand_trunc"){const _=Math.floor(Math.random()*(d+1));a=a.subarray(_,_+l),c=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${u}" not implemented`);else{if(d<0){let _=new Float64Array(l);if(_.set(a),p==="repeat")for(let f=a.length;f<l;f+=a.length)_.set(a.subarray(0,Math.min(a.length,l-f)),f);else if(p==="repeatpad")for(let f=a.length;f<-d;f+=a.length)_.set(a,f);a=_}if(u==="fusion")throw new Error(`Truncation strategy "${u}" not implemented`);c=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return c.unsqueeze_(0)}async _extract_fbank_features(a,l,u=null){return(0,n.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:u,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>o,CLIPImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>o,ConvNextImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){const l=this.size?.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const u=Math.floor(l/this.crop_pct),[p,c]=this.get_resize_output_image_size(a,{shortest_edge:u});a=await a.resize(p,c,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class o extends n{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>n});var s=t("./src/models/encodec/feature_extraction_encodec.js");class n extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>o,DeiTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>i,DetrImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{async _call(l){const u=await super._call(l),p=[u.pixel_values.dims[0],64,64],c=(0,n.full)(p,1n);return{...u,pixel_mask:c}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class i extends o{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>o,DonutImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{pad_image(a,l,u,p={}){const[c,d,_]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(_).fill(f));let E=this.image_std;Array.isArray(E)||(E=new Array(_).fill(f));const k=f.map((b,g)=>-b/E[g]);return super.pad_image(a,l,u,{center:!0,constant_values:k,...p})}}class o extends n{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>o,DPTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(i){super(i),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class o extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const u=[1,l,a.length/l];return{input_values:new n.Tensor("float32",a,u)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>o.ClapFeatureExtractor,DacFeatureExtractor:()=>i.DacFeatureExtractor,EncodecFeatureExtractor:()=>n.EncodecFeatureExtractor,ImageFeatureExtractor:()=>E.ImageProcessor,MoonshineFeatureExtractor:()=>a.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>l.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>u.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>p.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>c.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>_.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>f.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),n=t("./src/models/encodec/feature_extraction_encodec.js"),o=t("./src/models/clap/feature_extraction_clap.js"),i=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/moonshine/feature_extraction_moonshine.js"),l=t("./src/models/pyannote/feature_extraction_pyannote.js"),u=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),p=t("./src/models/snac/feature_extraction_snac.js"),c=t("./src/models/speecht5/feature_extraction_speecht5.js"),d=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),_=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),f=t("./src/models/whisper/feature_extraction_whisper.js"),E=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");class i extends s.Processor{constructor(l,u){super(l,u);const{tasks_answer_post_processing_type:p,task_prompts_without_inputs:c,task_prompts_with_input:d}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(p??{})),this.task_prompts_without_inputs=new Map(Object.entries(c??{})),this.task_prompts_with_input=new Map(Object.entries(d??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const u=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))u.push(this.task_prompts_without_inputs.get(p));else{for(const[c,d]of this.task_prompts_with_input)if(p.includes(c)){u.push(d.replaceAll("{input}",p).replaceAll(c,""));break}u.length!==l.length&&u.push(p)}return u}post_process_generation(l,u,p){const c=this.tasks_answer_post_processing_type.get(u)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let d;switch(c){case"pure_text":d=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const _=c==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[_]),E=[],k=[];for(const[b,g,...C]of f)E.push(g?g.trim():E.at(-1)??""),k.push(C.map((x,v)=>(Number(x)+.5)/this.size_per_bin*p[v%2]));d={labels:E,[_]:k};break;default:throw new Error(`Task "${u}" (of type "${c}") not yet implemented.`)}return{[u]:d}}async _call(l,u=null,p={}){if(!l&&!u)throw new Error("Either text or images must be provided");const c=await this.image_processor(l,p),d=u?this.tokenizer(u,p):{};return{...c,...d}}}Z(i,"tokenizer_class",o.AutoTokenizer),Z(i,"image_processor_class",n.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{async _call(a){const l=await super._call(a),u=l.pixel_values.dims,p=(0,n.ones)([u[0],u[2],u[3]]);return{...l,pixel_mask:p}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js"),i=t("./src/base/image_processors_utils.js");function a(u,p){const d=u.dims.at(-1)-1,_=u.tolist();_.fill(!1,0,1),_.fill(!1,d);const f=p.tolist();return _.map((E,k)=>E?k:null).filter(E=>E!==null).map(E=>f[E])}class l extends s.Processor{async _call(p,c,d={}){const _=p?await this.image_processor(p,d):{};return{...c?this.tokenizer(c,d):{},..._}}post_process_grounded_object_detection(p,c,{box_threshold:d=.25,text_threshold:_=.25,target_sizes:f=null}={}){const{logits:E,pred_boxes:k}=p,b=E.dims[0];if(f!==null&&f.length!==b)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const g=E.dims.at(1),C=E.sigmoid(),x=C.max(-1).tolist(),v=k.tolist().map(y=>y.map(S=>(0,i.center_to_corners_format)(S))),w=[];for(let y=0;y<b;++y){const S=f!==null?f[y]:null;S!==null&&(v[y]=v[y].map(L=>L.map((Y,q)=>Y*S[(q+1)%2])));const O=x[y],R=[],H=[],Q=[];for(let L=0;L<g;++L){const Y=O[L];if(Y<=d)continue;const q=v[y][L],X=C[y][L];R.push(Y),Q.push(q);const re=a(X.gt(_),c[y]);H.push(re)}w.push({scores:R,boxes:Q,labels:this.batch_decode(H)})}return w}}Z(l,"tokenizer_class",o.AutoTokenizer),Z(l,"image_processor_class",n.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[u,p]=a.dims.slice(-2);const c=p/u;return p>=u?(p=Math.ceil(p/l)*l,u=Math.floor(p/c),u=Math.ceil(u/l)*l):(u=Math.ceil(u/l)*l,p=Math.floor(u*c),p=Math.ceil(p/l)*l),{height:u,width:p}}async _call(a,{do_image_splitting:l=null,return_row_col_info:u=!1}={}){let p;if(!Array.isArray(a))p=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?p=a:p=[a]}let c=[],d=[],_=[];const f=[],E=[];for(const y of p){let S=await Promise.all(y.map(H=>this.preprocess(H)));f.push(...S.map(H=>H.original_size)),E.push(...S.map(H=>H.reshaped_input_size)),S.forEach(H=>H.pixel_values.unsqueeze_(0));const{longest_edge:O}=this.max_image_size;let R;if(l??this.do_image_splitting){let H=new Array(S.length),Q=new Array(S.length);R=await Promise.all(S.map(async(L,Y)=>{const q=this.get_resize_for_vision_encoder(L.pixel_values,O),X=await(0,n.interpolate_4d)(L.pixel_values,{size:[q.height,q.width]}),{frames:re,num_splits_h:te,num_splits_w:he}=await this.split_image(X,this.max_image_size);return H[Y]=te,Q[Y]=he,(0,n.cat)(re,0)})),d.push(H),_.push(Q)}else{const H=[O,O];R=await Promise.all(S.map(Q=>(0,n.interpolate_4d)(Q.pixel_values,{size:H}))),d.push(new Array(S.length).fill(0)),_.push(new Array(S.length).fill(0))}c.push((0,n.cat)(R,0))}const k=c.length,[b,g,C,x]=c[0].dims;let v,w;if(k===1)v=c[0].unsqueeze_(0),w=(0,n.full)([k,b,C,x],!0);else{const y=Math.max(...c.map(R=>R.dims.at(0)));w=(0,n.full)([k,y,C,x],!0);const S=w.data,O=y*C*x;for(let R=0;R<k;++R){const H=c[R].dims[0];if(H<y){c[R]=(0,n.cat)([c[R],(0,n.full)([y-H,g,C,x],0)],0);const Q=R*O+H*C*x,L=(R+1)*O;S.fill(!1,Q,L)}}v=(0,n.stack)(c,0)}return{pixel_values:v,pixel_attention_mask:w,original_sizes:f,reshaped_input_sizes:E,...u?{rows:d,cols:_}:{}}}async split_image(a,{longest_edge:l}){const u=l,p=l,c=[],[d,_]=a.dims.slice(-2);let f=0,E=0;if(d>u||_>p){f=Math.ceil(d/u),E=Math.ceil(_/p);const k=Math.ceil(d/f),b=Math.ceil(_/E);for(let x=0;x<f;++x)for(let v=0;v<E;++v){let w,y,S,O;x===f-1?(y=d-k,O=d):(y=x*k,O=(x+1)*k),v===E-1?(w=_-b,S=_):(w=v*b,S=(v+1)*b);const R=[y,w],H=[O,S],Q=await(0,n.slice)(a,R,H,[2,3]);c.push(Q)}const g=u,C=p;(d!==g||_!==C)&&(a=await(0,n.interpolate_4d)(a,{size:[g,C]}))}return c.push(a),{frames:c,num_splits_h:f,num_splits_w:E}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>p});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js");var i=t("./src/utils/core.js");function a(c,d,_,f,E,k){let b="";for(let g=0;g<d;++g){for(let C=0;C<_;++C)b+=f+`<row_${g+1}_col_${C+1}>`+E.repeat(c);b+=`
`}return b+=`
${f}${k}`+E.repeat(c)+`${f}`,b}function l(c,d,_,f){return`${d}${f}`+_.repeat(c)+`${d}`}function u(c,d,_,f,E,k){return c===0&&d===0?l(_,f,E,k):a(_,c,d,f,E,k)}class p extends s.Processor{constructor(){super(...arguments);Z(this,"fake_image_token","<fake_token_around_image>");Z(this,"image_token","<image>");Z(this,"global_img_token","<global-img>")}async _call(_,f=null,E={}){E.return_row_col_info??(E.return_row_col_info=!0);let k;f&&(k=await this.image_processor(f,E)),Array.isArray(_)||(_=[_]);const b=k.rows??[new Array(_.length).fill(0)],g=k.cols??[new Array(_.length).fill(0)],C=this.config.image_seq_len,x=[],v=[];for(let y=0;y<_.length;++y){const S=_[y],O=b[y],R=g[y];x.push((0,i.count)(S,this.image_token));const H=O.map((Y,q)=>u(Y,R[q],C,this.fake_image_token,this.image_token,this.global_img_token)),Q=S.split(this.image_token);if(Q.length===0)throw new Error("The image token should be present in the text.");let L=Q[0];for(let Y=0;Y<H.length;++Y)L+=H[Y]+Q[Y+1];v.push(L)}return{...this.tokenizer(v),...k}}}Z(p,"image_processor_class",n.AutoImageProcessor),Z(p,"tokenizer_class",o.AutoTokenizer),Z(p,"uses_processor_config",!0)},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>n.BitImageProcessor,CLIPFeatureExtractor:()=>i.CLIPFeatureExtractor,CLIPImageProcessor:()=>i.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>o.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DPTFeatureExtractor:()=>c.DPTFeatureExtractor,DPTImageProcessor:()=>c.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>u.DetrFeatureExtractor,DetrImageProcessor:()=>u.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>d.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>E.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>b.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>g.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>C.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>x.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>x.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>v.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>v.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>w.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>w.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>y.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>y.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>S.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>S.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>O.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>O.MobileViTImageProcessor,NougatImageProcessor:()=>R.NougatImageProcessor,OwlViTFeatureExtractor:()=>Q.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>Q.OwlViTImageProcessor,Owlv2ImageProcessor:()=>H.Owlv2ImageProcessor,Phi3VImageProcessor:()=>L.Phi3VImageProcessor,PvtImageProcessor:()=>Y.PvtImageProcessor,Qwen2VLImageProcessor:()=>q.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>X.RTDetrImageProcessor,SamImageProcessor:()=>re.SamImageProcessor,SegformerFeatureExtractor:()=>te.SegformerFeatureExtractor,SegformerImageProcessor:()=>te.SegformerImageProcessor,SiglipImageProcessor:()=>he.SiglipImageProcessor,SmolVLMImageProcessor:()=>ue.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>N.Swin2SRImageProcessor,VLMImageProcessor:()=>k.VLMImageProcessor,ViTFeatureExtractor:()=>A.ViTFeatureExtractor,ViTImageProcessor:()=>A.ViTImageProcessor,VitMatteImageProcessor:()=>K.VitMatteImageProcessor,VitPoseImageProcessor:()=>j.VitPoseImageProcessor,YolosFeatureExtractor:()=>ae.YolosFeatureExtractor,YolosImageProcessor:()=>ae.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),n=t("./src/models/bit/image_processing_bit.js"),o=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),i=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),u=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/donut/image_processing_donut.js"),c=t("./src/models/dpt/image_processing_dpt.js"),d=t("./src/models/efficientnet/image_processing_efficientnet.js"),_=t("./src/models/glpn/image_processing_glpn.js"),f=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),E=t("./src/models/idefics3/image_processing_idefics3.js"),k=t("./src/models/janus/image_processing_janus.js"),b=t("./src/models/jina_clip/image_processing_jina_clip.js"),g=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),C=t("./src/models/mask2former/image_processing_mask2former.js"),x=t("./src/models/maskformer/image_processing_maskformer.js"),v=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),w=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),y=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),S=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),O=t("./src/models/mobilevit/image_processing_mobilevit.js"),R=t("./src/models/nougat/image_processing_nougat.js"),H=t("./src/models/owlv2/image_processing_owlv2.js"),Q=t("./src/models/owlvit/image_processing_owlvit.js"),L=t("./src/models/phi3_v/image_processing_phi3_v.js"),Y=t("./src/models/pvt/image_processing_pvt.js"),q=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),X=t("./src/models/rt_detr/image_processing_rt_detr.js"),re=t("./src/models/sam/image_processing_sam.js"),te=t("./src/models/segformer/image_processing_segformer.js"),he=t("./src/models/siglip/image_processing_siglip.js"),ue=t("./src/models/smolvlm/image_processing_smolvlm.js"),N=t("./src/models/swin2sr/image_processing_swin2sr.js"),A=t("./src/models/vit/image_processing_vit.js"),K=t("./src/models/vitmatte/image_processing_vitmatte.js"),j=t("./src/models/vitpose/image_processing_vitpose.js"),ae=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(i){super({do_pad:!0,pad_size:{width:i.image_size,height:i.image_size},...i}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(i,a,l,u){return super.pad_image(i,a,l,{constant_values:this.constant_values,center:!0,...u})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>u});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js"),i=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class u extends s.Processor{constructor(c,d){super(c,d),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(c,{images:d=null,chat_template:_="default"}={}){d?Array.isArray(d)||(d=[d]):d=await Promise.all(c.filter(R=>R.images).flatMap(R=>R.images).map(R=>l.RawImage.read(R)));const f=this.tokenizer,E=f.apply_chat_template(c,{tokenize:!1,add_generation_prompt:!0,chat_template:_}),k=R=>f.encode(R,{add_special_tokens:!1}),b=E.split(this.image_tag),g=b.length-1;if(d.length!==g)throw new Error(`Number of images provided (${d.length}) does not match number of "${this.image_tag}" image tags (${g})`);const[C,x,v]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let w=k(b[0]),y=new Array(w.length).fill(!1);for(let R=1;R<b.length;++R){const H=new Array(this.num_image_tokens).fill(C),Q=k(b[R]);w=(0,i.mergeArrays)(w,[x],H,[v],Q);const L=new Array(this.num_image_tokens).fill(!0);y=(0,i.mergeArrays)(y,[!1],L,[!1],new Array(Q.length).fill(!1))}const S=[1,w.length],O={input_ids:new a.Tensor("int64",w,S),attention_mask:new a.Tensor("int64",new Array(w.length).fill(1),S),images_seq_mask:new a.Tensor("bool",y,S),images_emb_mask:new a.Tensor("bool",new Array(g*this.num_image_tokens).fill(!0),[1,g,this.num_image_tokens])};if(d&&d.length>0){const R=await this.image_processor(d);return R.pixel_values.unsqueeze_(0),{...O,...R}}return O}}Z(u,"image_processor_class",n.AutoImageProcessor),Z(u,"tokenizer_class",o.AutoTokenizer),Z(u,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(i){const{resize_mode:a,fill_color:l,interpolation:u,size:p,...c}=i,d=a==="squash"?{width:p,height:p}:a==="shortest"?{shortest_edge:p}:{longest_edge:p},_=u==="bicubic"?3:2;super({...c,size:d,resample:_,do_center_crop:!0,crop_size:p,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");class i extends s.Processor{async _call(l=null,u=null,p={}){if(!l&&!u)throw new Error("Either text or images must be provided");const c=l?this.tokenizer(l,p):{},d=u?await this.image_processor(u,p):{};return{...c,...d}}}Z(i,"tokenizer_class",o.AutoTokenizer),Z(i,"image_processor_class",n.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>n});var s=t("./src/models/maskformer/image_processing_maskformer.js");class n extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>o,MaskFormerImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,s.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,s.post_process_instance_segmentation)(...a)}}class o extends n{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js"),i=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,c){if(!a.hasOwnProperty(c))throw new Error(`Format ${c} is not supported.`);const[d,_]=a[c],f=this[d].bind(this),[E,k]=p.dims,b=[],g=[],C=p.tolist();for(let v=0;v<E;++v){const w=C[v],y=[],S=[];for(let R=1;R<k;++R){const[H,Q]=(0,i.max)((0,i.softmax)(w[R]));if(S.push(H),Q==_)break;y.push(Q)}const O=S.length>0?S.reduce((R,H)=>R*H,1):0;g.push(y),b.push(O)}return[f(g),b]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(c=>c.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(c=>c.replaceAll(" ",""))}batch_decode([p,c,d]){const[_,f]=this._decode_helper(p,"char"),[E,k]=this._decode_helper(c,"bpe"),[b,g]=this._decode_helper(d,"wp"),C=[],x=[];for(let v=0;v<_.length;++v){const[w,y]=(0,i.max)([f[v],k[v],g[v]]);C.push([_[v],E[v],b[v]][y]),x.push(w)}return{generated_text:C,scores:x,char_preds:_,bpe_preds:E,wp_preds:b}}static async from_pretrained(...p){const c=await super.from_pretrained(...p),d=await o.AutoTokenizer.from_pretrained("Xenova/gpt2"),_=await o.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return c.components={image_processor:c.image_processor,char_tokenizer:c.tokenizer,bpe_tokenizer:d,wp_tokenizer:_},c}async _call(p,c=null){const d=await this.image_processor(p);return c&&(d.labels=this.tokenizer(c).input_ids),d}}Z(l,"tokenizer_class",o.AutoTokenizer),Z(l,"image_processor_class",n.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>o,MobileNetV1ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>o,MobileNetV2ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>o,MobileNetV3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>o,MobileNetV4ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>o,MobileViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class o extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new n.Tensor("float32",a,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{async _call(l){return await this.feature_extractor(l)}}Z(i,"tokenizer_class",n.AutoTokenizer),Z(i,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>n});var s=t("./src/models/donut/image_processing_donut.js");class n extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>n});var s=t("./src/models/owlvit/image_processing_owlvit.js");class n extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>o,OwlViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class o extends n{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");class i extends s.Processor{}Z(i,"tokenizer_class",o.AutoTokenizer),Z(i,"image_processor_class",n.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");const i="<image>";function a(u,p,c,d,_){return`${d.repeat(c*_)}${p}${u}
`}class l extends s.Processor{async _call(p,c=null,d={}){c||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),c=""),Array.isArray(p)||(p=[p]),Array.isArray(c)||(c=[c]);const _=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let E;c.some(g=>g.includes(i))?E=c.map(g=>{const C=g.replaceAll(i,i.repeat(f)),x=C.lastIndexOf(i),v=x===-1?0:x+i.length;return C.slice(0,v)+_+C.slice(v)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),E=c.map(g=>a(g,_,f,i,p.length)));const k=this.tokenizer(E,d);return{...await this.image_processor(p,d),...k}}}Z(l,"tokenizer_class",o.AutoTokenizer),Z(l,"image_processor_class",n.AutoImageProcessor),Z(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>p});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");const o=336,i=[2,3],{ceil:a,floor:l,sqrt:u}=Math;class p extends s.ImageProcessor{constructor(d){super({...d,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=d.num_crops}calc_num_image_tokens_from_image_size(d,_){const{num_img_tokens:f}=this.config;return l((l(_/o)*l(d/o)+1)*f+1+(l(_/o)+1)*u(f))}get_resize_output_image_size(d,_){const f=this._num_crops,[E,k]=d.size;let b=E/k,g=1;for(;g*Math.ceil(g/b)<=f;)g+=1;g-=1;const C=Math.floor(g*336),x=Math.floor(C/b);return[C,x]}pad_image(d,_,f,E={}){const[k,b]=_,g=o*a(k/o),C=o*a(b/o),x=[1,1,1].map((v,w)=>(v-this.image_mean[w])/this.image_std[w]);return super.pad_image(d,_,{width:C,height:g},{center:!0,constant_values:x,...E})}async _call(d,{num_crops:_=null}={}){if(this._num_crops=_??(_=this.config.num_crops),_<4||u(_)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(d)||(d=[d]);const f=d.length,E=await Promise.all(d.map(y=>this.preprocess(y))),k=E.map(y=>y.original_size),b=E.map(y=>y.reshaped_input_size),g=[];for(const{pixel_values:y}of E){y.unsqueeze_(0);const[S,O]=y.dims.slice(-2),R=await(0,n.interpolate_4d)(y,{size:[o,o],mode:"bicubic"});if(_>0){const H=[],Q=u(_),L=l(O/Q),Y=l(S/Q);for(let X=0;X<Q;++X)for(let re=0;re<Q;++re){let te,he,ue,N;X===Q-1?(he=S-Y,N=S):(he=X*Y,N=(X+1)*Y),re===Q-1?(te=O-L,ue=O):(te=re*L,ue=(re+1)*L);const A=[he,te],K=[N,ue],j=await(0,n.slice)(y,A,K,i);H.push(j)}const q=await(0,n.interpolate_4d)((0,n.cat)(H,0),{size:[o,o],mode:"bicubic"});g.push((0,n.cat)([R,q],0))}else g.push(R)}const C=(0,n.stack)(g,0),x=b.map(y=>y.map(S=>o*a(S/o))),v=new n.Tensor("int64",x.flat(),[f,2]),w=x.map(([y,S])=>this.calc_num_image_tokens_from_image_size(S,y));return{pixel_values:C,original_sizes:k,reshaped_input_sizes:b,image_sizes:v,num_img_tokens:w}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js");const i="<|image|>",a=/<\|image_\d+\|>/g;class l extends s.Processor{async _call(p,c=null,{padding:d=!0,truncation:_=!0,num_crops:f=null}={}){Array.isArray(p)||(p=[p]);let E,k;if(c){k=await this.image_processor(c,{num_crops:f});const{num_img_tokens:b}=k,g=p.map((x,v)=>x.split(a).join(i.repeat(b[v])));E=this.tokenizer(g,{padding:d,truncation:_});const C=this.tokenizer.model.convert_tokens_to_ids([i])[0];E.input_ids.map_(x=>x==C?-x:x)}else E=this.tokenizer(p);return{...E,...k}}}Z(l,"image_processor_class",n.AutoImageProcessor),Z(l,"tokenizer_class",o.AutoTokenizer)},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,GroundingDinoProcessor:()=>n.GroundingDinoProcessor,Idefics3Processor:()=>o.Idefics3Processor,JinaCLIPProcessor:()=>a.JinaCLIPProcessor,MgpstrProcessor:()=>l.MgpstrProcessor,MoonshineProcessor:()=>u.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>d.PaliGemmaProcessor,Phi3VProcessor:()=>c.Phi3VProcessor,PyAnnoteProcessor:()=>_.PyAnnoteProcessor,Qwen2VLProcessor:()=>f.Qwen2VLProcessor,SamProcessor:()=>E.SamProcessor,SmolVLMProcessor:()=>k.SmolVLMProcessor,SpeechT5Processor:()=>b.SpeechT5Processor,UltravoxProcessor:()=>g.UltravoxProcessor,VLChatProcessor:()=>i.VLChatProcessor,Wav2Vec2Processor:()=>C.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>v.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),n=t("./src/models/grounding_dino/processing_grounding_dino.js"),o=t("./src/models/idefics3/processing_idefics3.js"),i=t("./src/models/janus/processing_janus.js"),a=t("./src/models/jina_clip/processing_jina_clip.js"),l=t("./src/models/mgp_str/processing_mgp_str.js"),u=t("./src/models/moonshine/processing_moonshine.js"),p=t("./src/models/owlvit/processing_owlvit.js"),c=t("./src/models/phi3_v/processing_phi3_v.js"),d=t("./src/models/paligemma/processing_paligemma.js"),_=t("./src/models/pyannote/processing_pyannote.js"),f=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),E=t("./src/models/sam/processing_sam.js"),k=t("./src/models/smolvlm/processing_smolvlm.js"),b=t("./src/models/speecht5/processing_speecht5.js"),g=t("./src/models/ultravox/processing_ultravox.js"),C=t("./src/models/wav2vec2/processing_wav2vec2.js"),x=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),v=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),o=t("./src/utils/maths.js");class i extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const u=[1,1,l.length];return{input_values:new n.Tensor("float32",l,u)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,u){const p=u/this.samples_to_frames(u)/this.config.sampling_rate,c=[];for(const d of l.tolist()){const _=[];let f=-1;for(let E=0;E<d.length;++E){const k=(0,o.softmax)(d[E]),[b,g]=(0,o.max)(k),[C,x]=[E,E+1];g!==f?(f=g,_.push({id:g,start:C,end:x,score:b})):(_.at(-1).end=x,_.at(-1).score+=b)}c.push(_.map(({id:E,start:k,end:b,score:g})=>({id:E,start:k*p,end:b*p,confidence:g/(b-k)})))}return c}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/pyannote/feature_extraction_pyannote.js");class o extends s.Processor{async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}Z(o,"feature_extractor_class",n.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{async _call(a,...l){const{pixel_values:u,original_sizes:p,reshaped_input_sizes:c}=await super._call(a,...l);let d=u;const{temporal_patch_size:_,merge_size:f,patch_size:E}=this.config;d.dims[0]===1&&(d=(0,n.cat)(Array.from({length:_},()=>d),0));const k=d.dims[0]/_,b=d.dims[1],g=Math.floor(d.dims[2]/E),C=Math.floor(d.dims[3]/E),x=d.view(k,_,b,Math.floor(g/f),f,E,Math.floor(C/f),f,E).permute(0,3,6,4,7,2,1,5,8).view(k*g*C,b*_*E*E),v=new n.Tensor("int64",[k,g,C],[1,3]);return{pixel_values:x,image_grid_thw:v,original_sizes:p,reshaped_input_sizes:c}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js");class i extends s.Processor{async _call(l,u=null,...p){Array.isArray(l)||(l=[l]);let c,d;if(u&&(c=await this.image_processor(u),d=c.image_grid_thw),d){let f=this.image_processor.config.merge_size**2,E=0;const k=d.tolist();l=l.map(b=>{for(;b.includes("<|image_pad|>");){const g=Number(k[E++].reduce((C,x)=>C*x,1n));b=b.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(g/f)))}return b.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...c}}}Z(i,"image_processor_class",n.AutoImageProcessor),Z(i,"tokenizer_class",o.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...i){return(0,s.post_process_object_detection)(...i)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/core.js"),o=t("./src/utils/tensor.js");class i extends s.ImageProcessor{reshape_input_points(l,u,p,c=!1){l=structuredClone(l);let d=(0,n.calculateDimensions)(l);if(d.length===3)c||(d=[1,...d]),l=[l];else if(d.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let _=0;_<l.length;++_){let f=u[_],E=p[_],k=[E[0]/f[0],E[1]/f[1]];for(let b=0;b<l[_].length;++b)for(let g=0;g<l[_][b].length;++g)for(let C=0;C<l[_][b][g].length;++C)l[_][b][g][C]*=k[C%2]}return new o.Tensor("float32",Float32Array.from(l.flat(1/0)),d)}add_input_labels(l,u){let p=(0,n.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((c,d)=>c!==u.dims[d]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new o.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:u=null,input_labels:p=null,input_boxes:c=null}={}){const d=await super._call(l);if(u&&(d.input_points=this.reshape_input_points(u,d.original_sizes,d.reshaped_input_sizes)),p){if(!d.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");d.input_labels=this.add_input_labels(p,d.input_points)}return c&&(d.input_boxes=this.reshape_input_points(c,d.original_sizes,d.reshaped_input_sizes,!0)),d}async post_process_masks(l,u,p,{mask_threshold:c=0,binarize:d=!0,pad_size:_=null}={}){const f=[];_=_??this.pad_size;const E=[_.height,_.width];for(let k=0;k<u.length;++k){const b=u[k],g=p[k];let C=await(0,o.interpolate_4d)(l[k],{mode:"bilinear",size:E});if(C=C.slice(null,null,[0,g[0]],[0,g[1]]),C=await(0,o.interpolate_4d)(C,{mode:"bilinear",size:b}),d){const x=C.data,v=new Uint8Array(x.length);for(let w=0;w<x.length;++w)x[w]>c&&(v[w]=1);C=new o.Tensor("bool",v,C.dims)}f.push(C)}return f}generate_crop_boxes(l,u,{crop_n_layers:p=0,overlap_ratio:c=512/1500,points_per_crop:d=32,crop_n_points_downscale_factor:_=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js");class o extends s.Processor{async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}Z(o,"image_processor_class",n.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),o=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(l){super(l);const u=this.config.sampling_rate,p=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(u/2),u,null,"kaldi",!0);this.mel_filters=p,this.window=(0,o.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,u){return l=l.map(p=>p*32768),(0,o.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:u,transpose:!0})}async _call(l,{padding:u=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:c=!0,return_attention_mask:d=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let _=await this._extract_fbank_features(l,this.config.max_length);if(c){const[v,w]=_.dims,y=_.data;for(let S=0;S<w;++S){let O=0;for(let L=0;L<v;++L)O+=y[L*w+S];const R=O/v;let H=0;for(let L=0;L<v;++L)H+=(y[L*w+S]-R)**2;H/=v-1;const Q=Math.sqrt(H+1e-7);for(let L=0;L<v;++L){const Y=L*w+S;y[Y]=(y[Y]-R)/Q}}}let f;if(u){const[v,w]=_.dims,y=_.data,S=v%p;if(S>0){const O=new Float32Array(w*(v+S));O.set(y),O.fill(this.config.padding_value,y.length);const R=v+S;_=new n.Tensor(_.type,O,[R,w]),d&&(f=new n.Tensor("int64",new BigInt64Array(R),[1,R]),f.data.fill(1n,0,v))}}const[E,k]=_.dims,b=this.config.stride;if(E%b!==0)throw new Error(`The number of frames (${E}) must be a multiple of the stride (${b}).`);const C=_.view(1,Math.floor(E/b),k*b),x={input_features:C};if(d){const v=C.dims[1],w=new BigInt64Array(v);if(f){const y=f.data;for(let S=1,O=0;S<E;S+=b,++O)w[O]=y[S]}else w.fill(1n);x.attention_mask=new n.Tensor("int64",w,[1,v])}return x}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>o,SegformerImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_semantic_segmentation(...a){return(0,s.post_process_semantic_segmentation)(...a)}}class o extends n{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>n});var s=t("./src/models/dac/feature_extraction_dac.js");class n extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");class n extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/tokenizers.js"),o=t("./src/models/auto/feature_extraction_auto.js");class i extends s.Processor{async _call(l){return await this.feature_extractor(l)}}Z(i,"tokenizer_class",n.AutoTokenizer),Z(i,"feature_extractor_class",o.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{pad_image(i,a,l,u={}){const[p,c,d]=a;return super.pad_image(i,a,{width:c+(l-c%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...u})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{async _call(l,u=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let c={};if(u){const _=u.length,{input_features:f}=await this.feature_extractor(u,{...p,max_length:_}),E=Math.round(_/this.config.encoder_ds_factor+1e-4),k=1+Math.ceil(E/this.config.stack_factor);c.audio_token_len=[k],c.audio_values=f;const b=this.config.audio_placeholder;if(!l.includes(b))throw new Error(`The input text does not contain the image token ${b}.`);l=l.replaceAll(b,b.repeat(k))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...c}}}Z(i,"tokenizer_class",n.AutoTokenizer),Z(i,"feature_extractor_class",s.AutoFeatureExtractor),Z(i,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>o,ViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const u=await Promise.all(a.map(d=>this.preprocess(d))),p=await Promise.all(l.map(d=>this.preprocess(d,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,n.stack)(u.map((d,_)=>(0,n.cat)([d.pixel_values,p[_].pixel_values],0)),0),original_sizes:u.map(d=>d.original_size),reshaped_input_sizes:u.map(d=>d.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_pose_estimation(i,a,{threshold:l=null}={}){const u=i.tolist(),[p,c,d,_]=i.dims,f=[];for(let E=0;E<p;++E){const k=u[E],b=a[E],g=[];for(let C=0;C<b.length;++C){const x=b[C],v=[],w=[],y=[],S=x.at(-2)/_,O=x.at(-1)/d;for(let R=0;R<k.length;++R){let[H,Q]=[0,0],L=0,Y=-1/0;const q=k[R];for(let re=0;re<q.length;++re){const te=q[re];for(let he=0;he<te.length;++he){const ue=te[he];L+=ue,Y=Math.max(Y,ue),H+=(he+.5)*ue,Q+=re*ue}}if(l!=null&&Y<l)continue;const X=[S*H/L,O*Q/L];v.push(X),y.push(R),w.push(Y)}g.push({bbox:x,scores:w,labels:y,keypoints:v})}f.push(g)}return f}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class o extends s.FeatureExtractor{_zero_mean_unit_var_norm(a){const u=a.reduce((c,d)=>c+d,0)/a.length,p=a.reduce((c,d)=>c+(d-u)**2,0)/a.length;return a.map(c=>(c-u)/Math.sqrt(p+1e-7))}async _call(a){(0,s.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const u=[1,l.length];return{input_values:new n.Tensor("float32",l,u),attention_mask:new n.Tensor("int64",new BigInt64Array(l.length).fill(1n),u)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>i});var s=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{async _call(l){return await this.feature_extractor(l)}}Z(i,"tokenizer_class",s.AutoTokenizer),Z(i,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>i});var s=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{async _call(l){return await this.feature_extractor(l)}}Z(i,"tokenizer_class",s.AutoTokenizer),Z(i,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,u=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=u,this.window=(0,n.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,n.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,s.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const u=l.mean(1).data,p=l.data,[c,d,_]=l.dims;for(let f=0;f<c;++f){const E=f*d*_,k=f*_;for(let b=0;b<d;++b){const g=E+b*_;for(let C=0;C<_;++C)p[g+C]-=u[k+C]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>n,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>o,whisper_language_to_code:()=>i});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],n=new Map(s),o=new Map([...s.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function i(a){a=a.toLowerCase();let l=o.get(a);if(l===void 0){const u=a.match(/^<\|([a-z]{2})\|>$/);if(u&&(a=u[1]),n.has(a))l=a;else{const c=a.length===2?n.keys():n.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(c))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js"),o=t("./src/utils/maths.js");class i extends s.FeatureExtractor{constructor(l){var u;super(l),(u=this.config).mel_filters??(u.mel_filters=(0,n.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,n.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const u=await(0,n.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=u.data,c=(0,o.max)(p)[0];for(let d=0;d<p.length;++d)p[d]=(Math.max(p[d],c-8)+4)/4;return u}async _call(l,{max_length:u=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const c=u??this.config.n_samples;return l.length>c?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,c)):(p=new Float32Array(c),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>n});var s=t("./src/generation/configuration_utils.js");class n extends s.GenerationConfig{constructor(){super(...arguments);Z(this,"return_timestamps",null);Z(this,"return_token_timestamps",null);Z(this,"num_frames",null);Z(this,"alignment_heads",null);Z(this,"task",null);Z(this,"language",null);Z(this,"no_timestamps_token_id",null);Z(this,"prompt_ids",null);Z(this,"is_multilingual",null);Z(this,"lang_to_id",null);Z(this,"task_to_id",null);Z(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{async _call(l){return await this.feature_extractor(l)}}Z(i,"tokenizer_class",n.AutoTokenizer),Z(i,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>o,YolosImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class o extends n{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),n=t("./src/utils/tensor.js"),o=t("./src/env.js");const i=o.apis.IS_BROWSER_ENV||o.apis.IS_WEBWORKER_ENV,a=async(u,p,c)=>{const d=await(0,s.createInferenceSession)(new Uint8Array(u),p);let _=Promise.resolve();return async f=>{const E=(0,s.isONNXProxy)(),k=Object.fromEntries(Object.entries(f).map(([g,C])=>[g,(E?C.clone():C).ort_tensor])),b=await(_=i?_.then(()=>d.run(k)):d.run(k));return Array.isArray(c)?c.map(g=>new n.Tensor(b[g])):new n.Tensor(b[c])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}Z(l,"session_options",{})},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>Q,AutomaticSpeechRecognitionPipeline:()=>Y,BackgroundRemovalPipeline:()=>te,DepthEstimationPipeline:()=>ae,DocumentQuestionAnsweringPipeline:()=>A,FeatureExtractionPipeline:()=>R,FillMaskPipeline:()=>C,ImageClassificationPipeline:()=>X,ImageFeatureExtractionPipeline:()=>H,ImageSegmentationPipeline:()=>re,ImageToImagePipeline:()=>j,ImageToTextPipeline:()=>q,ObjectDetectionPipeline:()=>ue,Pipeline:()=>E,QuestionAnsweringPipeline:()=>g,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>x,TextClassificationPipeline:()=>k,TextGenerationPipeline:()=>S,TextToAudioPipeline:()=>K,TokenClassificationPipeline:()=>b,TranslationPipeline:()=>w,ZeroShotAudioClassificationPipeline:()=>L,ZeroShotClassificationPipeline:()=>O,ZeroShotImageClassificationPipeline:()=>he,ZeroShotObjectDetectionPipeline:()=>N,pipeline:()=>Ie});var s=t("./src/tokenizers.js"),n=t("./src/models.js"),o=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),u=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),c=t("./src/utils/image.js");async function d(de){return Array.isArray(de)||(de=[de]),await Promise.all(de.map(G=>c.RawImage.read(G)))}async function _(de,G){return Array.isArray(de)||(de=[de]),await Promise.all(de.map(le=>typeof le=="string"||le instanceof URL?(0,u.read_audio)(le,G):le instanceof Float64Array?new Float32Array(le):le))}function f(de,G){G&&(de=de.map(Ce=>Ce|0));const[le,W,we,Me]=de;return{xmin:le,ymin:W,xmax:we,ymax:Me}}class E extends i.Callable{constructor({task:G,model:le,tokenizer:W=null,processor:we=null}){super(),this.task=G,this.model=le,this.tokenizer=W,this.processor=we}async dispose(){await this.model.dispose()}}class k extends E{constructor(G){super(G)}async _call(G,{top_k:le=1}={}){const W=this.tokenizer(G,{padding:!0,truncation:!0}),we=await this.model(W),Me=this.model.config.problem_type==="multi_label_classification"?Se=>Se.sigmoid():Se=>new p.Tensor("float32",(0,l.softmax)(Se.data),Se.dims),Ce=this.model.config.id2label,Pe=[];for(const Se of we.logits){const Fe=Me(Se),je=await(0,p.topk)(Fe,le),Ke=je[0].tolist(),ke=je[1].tolist().map((He,Ye)=>({label:Ce?Ce[He]:`LABEL_${He}`,score:Ke[Ye]}));le===1?Pe.push(...ke):Pe.push(ke)}return Array.isArray(G)||le===1?Pe:Pe[0]}}class b extends E{constructor(G){super(G)}async _call(G,{ignore_labels:le=["O"]}={}){const W=Array.isArray(G),we=this.tokenizer(W?G:[G],{padding:!0,truncation:!0}),Ce=(await this.model(we)).logits,Pe=this.model.config.id2label,Se=[];for(let Fe=0;Fe<Ce.dims[0];++Fe){const je=we.input_ids[Fe],Ke=Ce[Fe],Ue=[];for(let ke=0;ke<Ke.dims[0];++ke){const He=Ke[ke],Ye=(0,l.max)(He.data)[1],We=Pe?Pe[Ye]:`LABEL_${Ye}`;if(le.includes(We))continue;const pt=this.tokenizer.decode([je[ke].item()],{skip_special_tokens:!0});if(pt==="")continue;const at=(0,l.softmax)(He.data);Ue.push({entity:We,score:at[Ye],index:ke,word:pt})}Se.push(Ue)}return W?Se:Se[0]}}class g extends E{constructor(G){super(G)}async _call(G,le,{top_k:W=1}={}){const we=this.tokenizer(G,{text_pair:le,padding:!0,truncation:!0}),{start_logits:Me,end_logits:Ce}=await this.model(we),Pe=we.input_ids.tolist(),Se=we.attention_mask.tolist(),Fe=this.tokenizer.all_special_ids,je=[];for(let Ke=0;Ke<Me.dims[0];++Ke){const Ue=Pe[Ke],ke=Ue.findIndex($e=>$e==this.tokenizer.sep_token_id);Se[Ke].map(($e,nt)=>$e==1&&(nt===0||nt>ke&&Fe.findIndex(Et=>Et==Ue[nt])===-1));const He=Me[Ke].tolist(),Ye=Ce[Ke].tolist();for(let $e=1;$e<He.length;++$e)(Se[Ke]==0||$e<=ke||Fe.findIndex(nt=>nt==Ue[$e])!==-1)&&(He[$e]=-1/0,Ye[$e]=-1/0);const We=(0,l.softmax)(He).map(($e,nt)=>[$e,nt]),pt=(0,l.softmax)(Ye).map(($e,nt)=>[$e,nt]);We[0][0]=0,pt[0][0]=0;const at=(0,a.product)(We,pt).filter($e=>$e[0][1]<=$e[1][1]).map($e=>[$e[0][1],$e[1][1],$e[0][0]*$e[1][0]]).sort(($e,nt)=>nt[2]-$e[2]);for(let $e=0;$e<Math.min(at.length,W);++$e){const[nt,Et,Qt]=at[$e],Ft=Ue.slice(nt,Et+1),mr=this.tokenizer.decode(Ft,{skip_special_tokens:!0});je.push({answer:mr,score:Qt})}}return W===1?je[0]:je}}class C extends E{constructor(G){super(G)}async _call(G,{top_k:le=5}={}){const W=this.tokenizer(G,{padding:!0,truncation:!0}),{logits:we}=await this.model(W),Me=[],Ce=W.input_ids.tolist();for(let Pe=0;Pe<Ce.length;++Pe){const Se=Ce[Pe],Fe=Se.findIndex(He=>He==this.tokenizer.mask_token_id);if(Fe===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const je=we[Pe][Fe],Ke=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(je.data),je.dims),le),Ue=Ke[0].tolist(),ke=Ke[1].tolist();Me.push(ke.map((He,Ye)=>{const We=Se.slice();return We[Fe]=He,{score:Ue[Ye],token:Number(He),token_str:this.tokenizer.decode([He]),sequence:this.tokenizer.decode(We,{skip_special_tokens:!0})}}))}return Array.isArray(G)?Me:Me[0]}}class x extends E{constructor(le){super(le);Z(this,"_key","generated_text")}async _call(le,W={}){Array.isArray(le)||(le=[le]),this.model.config.prefix&&(le=le.map(Fe=>this.model.config.prefix+Fe));const we=this.model.config.task_specific_params;we&&we[this.task]&&we[this.task].prefix&&(le=le.map(Fe=>we[this.task].prefix+Fe));const Me=this.tokenizer,Ce={padding:!0,truncation:!0};let Pe;this instanceof w&&"_build_translation_inputs"in Me?Pe=Me._build_translation_inputs(le,Ce,W):Pe=Me(le,Ce);const Se=await this.model.generate({...Pe,...W});return Me.batch_decode(Se,{skip_special_tokens:!0}).map(Fe=>({[this._key]:Fe}))}}class v extends x{constructor(le){super(le);Z(this,"_key","summary_text")}}class w extends x{constructor(le){super(le);Z(this,"_key","translation_text")}}function y(de){return Array.isArray(de)&&de.every(G=>"role"in G&&"content"in G)}class S extends E{constructor(G){super(G)}async _call(G,le={}){let W=!1,we=!1,Me;if(typeof G=="string")Me=G=[G];else if(Array.isArray(G)&&G.every(ke=>typeof ke=="string"))W=!0,Me=G;else{if(y(G))G=[G];else if(Array.isArray(G)&&G.every(y))W=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");we=!0,Me=G.map(ke=>this.tokenizer.apply_chat_template(ke,{tokenize:!1,add_generation_prompt:!0}))}const Ce=le.add_special_tokens??!1,Pe=we?!1:le.return_full_text??!0;this.tokenizer.padding_side="left";const Se=this.tokenizer(Me,{add_special_tokens:Ce,padding:!0,truncation:!0}),Fe=await this.model.generate({...Se,...le}),je=this.tokenizer.batch_decode(Fe,{skip_special_tokens:!0});let Ke;!Pe&&Se.input_ids.dims.at(-1)>0&&(Ke=this.tokenizer.batch_decode(Se.input_ids,{skip_special_tokens:!0}).map(ke=>ke.length));const Ue=Array.from({length:G.length},ke=>[]);for(let ke=0;ke<je.length;++ke){const He=Math.floor(ke/Fe.dims[0]*G.length);Ke&&(je[ke]=je[ke].slice(Ke[He])),Ue[He].push({generated_text:we?[...G[He],{role:"assistant",content:je[ke]}]:je[ke]})}return!W&&Ue.length===1?Ue[0]:Ue}}class O extends E{constructor(G){super(G),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([le,W])=>[le.toLowerCase(),W])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(G,le,{hypothesis_template:W="This example is {}.",multi_label:we=!1}={}){const Me=Array.isArray(G);Me||(G=[G]),Array.isArray(le)||(le=[le]);const Ce=le.map(Fe=>W.replace("{}",Fe)),Pe=we||le.length===1,Se=[];for(const Fe of G){const je=[];for(const ke of Ce){const He=this.tokenizer(Fe,{text_pair:ke,padding:!0,truncation:!0}),Ye=await this.model(He);Pe?je.push([Ye.logits.data[this.contradiction_id],Ye.logits.data[this.entailment_id]]):je.push(Ye.logits.data[this.entailment_id])}const Ue=(Pe?je.map(ke=>(0,l.softmax)(ke)[1]):(0,l.softmax)(je)).map((ke,He)=>[ke,He]).sort((ke,He)=>He[0]-ke[0]);Se.push({sequence:Fe,labels:Ue.map(ke=>le[ke[1]]),scores:Ue.map(ke=>ke[0])})}return Me?Se:Se[0]}}class R extends E{constructor(G){super(G)}async _call(G,{pooling:le="none",normalize:W=!1,quantize:we=!1,precision:Me="binary"}={}){const Ce=this.tokenizer(G,{padding:!0,truncation:!0}),Pe=await this.model(Ce);let Se=Pe.last_hidden_state??Pe.logits??Pe.token_embeddings;if(le!=="none")if(le==="mean")Se=(0,p.mean_pooling)(Se,Ce.attention_mask);else if(le==="cls")Se=Se.slice(null,0);else throw Error(`Pooling method '${le}' not supported.`);return W&&(Se=Se.normalize(2,-1)),we&&(Se=(0,p.quantize_embeddings)(Se,Me)),Se}}class H extends E{constructor(G){super(G)}async _call(G,{pool:le=null}={}){const W=await d(G),{pixel_values:we}=await this.processor(W),Me=await this.model({pixel_values:we});let Ce;if(le){if(!("pooler_output"in Me))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ce=Me.pooler_output}else Ce=Me.last_hidden_state??Me.logits??Me.image_embeds;return Ce}}class Q extends E{constructor(G){super(G)}async _call(G,{top_k:le=5}={}){const W=this.processor.feature_extractor.config.sampling_rate,we=await _(G,W),Me=this.model.config.id2label,Ce=[];for(const Pe of we){const Se=await this.processor(Pe),je=(await this.model(Se)).logits[0],Ke=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(je.data),je.dims),le),Ue=Ke[0].tolist(),He=Ke[1].tolist().map((Ye,We)=>({label:Me?Me[Ye]:`LABEL_${Ye}`,score:Ue[We]}));Ce.push(He)}return Array.isArray(G)?Ce:Ce[0]}}class L extends E{constructor(G){super(G)}async _call(G,le,{hypothesis_template:W="This is a sound of {}."}={}){const we=!Array.isArray(G);we&&(G=[G]);const Me=le.map(je=>W.replace("{}",je)),Ce=this.tokenizer(Me,{padding:!0,truncation:!0}),Pe=this.processor.feature_extractor.config.sampling_rate,Se=await _(G,Pe),Fe=[];for(const je of Se){const Ke=await this.processor(je),Ue=await this.model({...Ce,...Ke}),ke=(0,l.softmax)(Ue.logits_per_audio.data);Fe.push([...ke].map((He,Ye)=>({score:He,label:le[Ye]})))}return we?Fe[0]:Fe}}class Y extends E{constructor(G){super(G)}async _call(G,le={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(G,le);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(G,le);case"moonshine":return this._call_moonshine(G,le);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(G,le){le.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),le.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const W=!Array.isArray(G);W&&(G=[G]);const we=this.processor.feature_extractor.config.sampling_rate,Me=await _(G,we),Ce=[];for(const Pe of Me){const Se=await this.processor(Pe),je=(await this.model(Se)).logits[0],Ke=[];for(const ke of je)Ke.push((0,l.max)(ke.data)[1]);const Ue=this.tokenizer.decode(Ke);Ce.push({text:Ue})}return W?Ce[0]:Ce}async _call_whisper(G,le){const W=le.return_timestamps??!1,we=le.chunk_length_s??0,Me=le.force_full_sequences??!1;let Ce=le.stride_length_s??null;const Pe={...le};W==="word"&&(Pe.return_token_timestamps=!0,Pe.return_timestamps=!1);const Se=!Array.isArray(G);Se&&(G=[G]);const Fe=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,je=this.processor.feature_extractor.config.hop_length,Ke=this.processor.feature_extractor.config.sampling_rate,Ue=await _(G,Ke),ke=[];for(const He of Ue){let Ye=[];if(we>0){if(Ce===null)Ce=we/6;else if(we<=Ce)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const at=Ke*we,$e=Ke*Ce,nt=at-2*$e;let Et=0;for(;;){const Qt=Et+at,Ft=He.subarray(Et,Qt),mr=await this.processor(Ft),Er=Et===0,wt=Qt>=He.length;if(Ye.push({stride:[Ft.length,Er?0:$e,wt?0:$e],input_features:mr.input_features,is_last:wt}),wt)break;Et+=nt}}else Ye=[{stride:[He.length,0,0],input_features:(await this.processor(He)).input_features,is_last:!0}];for(const at of Ye){Pe.num_frames=Math.floor(at.stride[0]/je);const $e=await this.model.generate({inputs:at.input_features,...Pe});W==="word"?(at.tokens=$e.sequences.tolist()[0],at.token_timestamps=$e.token_timestamps.tolist()[0].map(nt=>(0,l.round)(nt,2))):at.tokens=$e[0].tolist(),at.stride=at.stride.map(nt=>nt/Ke)}const[We,pt]=this.tokenizer._decode_asr(Ye,{time_precision:Fe,return_timestamps:W,force_full_sequences:Me});ke.push({text:We,...pt})}return Se?ke[0]:ke}async _call_moonshine(G,le){const W=!Array.isArray(G);W&&(G=[G]);const we=this.processor.feature_extractor.config.sampling_rate,Me=await _(G,we),Ce=[];for(const Pe of Me){const Se=await this.processor(Pe),Fe=Math.floor(Pe.length/we)*6,je=await this.model.generate({max_new_tokens:Fe,...le,...Se}),Ke=this.processor.batch_decode(je,{skip_special_tokens:!0})[0];Ce.push({text:Ke})}return W?Ce[0]:Ce}}class q extends E{constructor(G){super(G)}async _call(G,le={}){const W=Array.isArray(G),we=await d(G),{pixel_values:Me}=await this.processor(we),Ce=[];for(const Pe of Me){Pe.dims=[1,...Pe.dims];const Se=await this.model.generate({inputs:Pe,...le}),Fe=this.tokenizer.batch_decode(Se,{skip_special_tokens:!0}).map(je=>({generated_text:je.trim()}));Ce.push(Fe)}return W?Ce:Ce[0]}}class X extends E{constructor(G){super(G)}async _call(G,{top_k:le=5}={}){const W=await d(G),{pixel_values:we}=await this.processor(W),Me=await this.model({pixel_values:we}),Ce=this.model.config.id2label,Pe=[];for(const Se of Me.logits){const Fe=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Se.data),Se.dims),le),je=Fe[0].tolist(),Ue=Fe[1].tolist().map((ke,He)=>({label:Ce?Ce[ke]:`LABEL_${ke}`,score:je[He]}));Pe.push(Ue)}return Array.isArray(G)?Pe:Pe[0]}}class re extends E{constructor(G){super(G),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(G,{threshold:le=.5,mask_threshold:W=.5,overlap_mask_area_threshold:we=.8,label_ids_to_fuse:Me=null,target_sizes:Ce=null,subtask:Pe=null}={}){if(Array.isArray(G)&&G.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Fe=await d(G),je=Fe.map(at=>[at.height,at.width]),Ke=await this.processor(Fe),{inputNames:Ue,outputNames:ke}=this.model.sessions.model;if(!Ue.includes("pixel_values")){if(Ue.length!==1)throw Error(`Expected a single input name, but got ${Ue.length} inputs: ${Ue}.`);const at=Ue[0];if(at in Ke)throw Error(`Input name ${at} already exists in the inputs.`);Ke[at]=Ke.pixel_values}const He=await this.model(Ke);let Ye=null;if(Pe!==null)Ye=this.subtasks_mapping[Pe];else if(this.processor.image_processor){for(const[at,$e]of Object.entries(this.subtasks_mapping))if($e in this.processor.image_processor){Ye=this.processor.image_processor[$e].bind(this.processor.image_processor),Pe=at;break}}const We=this.model.config.id2label,pt=[];if(Pe)if(Pe==="panoptic"||Pe==="instance"){const at=Ye(He,le,W,we,Me,Ce??je)[0],$e=at.segmentation;for(const nt of at.segments_info){const Et=new Uint8ClampedArray($e.data.length);for(let Ft=0;Ft<$e.data.length;++Ft)$e.data[Ft]===nt.id&&(Et[Ft]=255);const Qt=new c.RawImage(Et,$e.dims[1],$e.dims[0],1);pt.push({score:nt.score,label:We[nt.label_id],mask:Qt})}}else if(Pe==="semantic"){const{segmentation:at,labels:$e}=Ye(He,Ce??je)[0];for(const nt of $e){const Et=new Uint8ClampedArray(at.data.length);for(let Ft=0;Ft<at.data.length;++Ft)at.data[Ft]===nt&&(Et[Ft]=255);const Qt=new c.RawImage(Et,at.dims[1],at.dims[0],1);pt.push({score:null,label:We[nt],mask:Qt})}}else throw Error(`Subtask ${Pe} not supported.`);else{const $e=He[ke[0]];for(let nt=0;nt<je.length;++nt){const Et=je[nt],Qt=$e[nt];Qt.data.some(mr=>mr<-1e-5||mr>1+1e-5)&&Qt.sigmoid_();const Ft=await c.RawImage.fromTensor(Qt.mul_(255).to("uint8")).resize(Et[1],Et[0]);pt.push({label:null,score:null,mask:Ft})}}return pt}}class te extends re{constructor(G){super(G)}async _call(G,le={}){if(Array.isArray(G)&&G.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const we=await d(G),Me=await super._call(G,le);return we.map((Pe,Se)=>{const Fe=Pe.clone();return Fe.putAlpha(Me[Se].mask),Fe})}}class he extends E{constructor(G){super(G)}async _call(G,le,{hypothesis_template:W="This is a photo of {}"}={}){const we=Array.isArray(G),Me=await d(G),Ce=le.map(Ue=>W.replace("{}",Ue)),Pe=this.tokenizer(Ce,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Se}=await this.processor(Me),Fe=await this.model({...Pe,pixel_values:Se}),je=this.model.config.model_type==="siglip"?Ue=>Ue.sigmoid().data:Ue=>(0,l.softmax)(Ue.data),Ke=[];for(const Ue of Fe.logits_per_image){const He=[...je(Ue)].map((Ye,We)=>({score:Ye,label:le[We]}));He.sort((Ye,We)=>We.score-Ye.score),Ke.push(He)}return we?Ke:Ke[0]}}class ue extends E{constructor(G){super(G)}async _call(G,{threshold:le=.9,percentage:W=!1}={}){const we=Array.isArray(G);if(we&&G.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Me=await d(G),Ce=W?null:Me.map(ke=>[ke.height,ke.width]),{pixel_values:Pe,pixel_mask:Se}=await this.processor(Me),Fe=await this.model({pixel_values:Pe,pixel_mask:Se}),je=this.processor.image_processor.post_process_object_detection(Fe,le,Ce),Ke=this.model.config.id2label,Ue=je.map(ke=>ke.boxes.map((He,Ye)=>({score:ke.scores[Ye],label:Ke[ke.classes[Ye]],box:f(He,!W)})));return we?Ue:Ue[0]}}class N extends E{constructor(G){super(G)}async _call(G,le,{threshold:W=.1,top_k:we=null,percentage:Me=!1}={}){const Ce=Array.isArray(G),Pe=await d(G),Se=this.tokenizer(le,{padding:!0,truncation:!0}),Fe=await this.processor(Pe),je=[];for(let Ke=0;Ke<Pe.length;++Ke){const Ue=Pe[Ke],ke=Me?null:[[Ue.height,Ue.width]],He=Fe.pixel_values[Ke].unsqueeze_(0),Ye=await this.model({...Se,pixel_values:He});let We;if("post_process_grounded_object_detection"in this.processor){const pt=this.processor.post_process_grounded_object_detection(Ye,Se.input_ids,{box_threshold:W,text_threshold:W,target_sizes:ke})[0];We=pt.boxes.map((at,$e)=>({score:pt.scores[$e],label:pt.labels[$e],box:f(at,!Me)}))}else{const pt=this.processor.image_processor.post_process_object_detection(Ye,W,ke,!0)[0];We=pt.boxes.map((at,$e)=>({score:pt.scores[$e],label:le[pt.classes[$e]],box:f(at,!Me)}))}We.sort((pt,at)=>at.score-pt.score),we!==null&&(We=We.slice(0,we)),je.push(We)}return Ce?je:je[0]}}class A extends E{constructor(G){super(G)}async _call(G,le,W={}){const we=(await d(G))[0],{pixel_values:Me}=await this.processor(we),Ce=`<s_docvqa><s_question>${le}</s_question><s_answer>`,Pe=this.tokenizer(Ce,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Se=await this.model.generate({inputs:Me,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Pe,...W}),je=this.tokenizer.batch_decode(Se)[0].match(/<s_answer>(.*?)<\/s_answer>/);let Ke=null;return je&&je.length>=2&&(Ke=je[1].trim()),[{answer:Ke}]}}class K extends E{constructor(le){super(le);Z(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=le.vocoder??null}async _call(le,{speaker_embeddings:W=null}={}){return this.processor?this._call_text_to_spectrogram(le,{speaker_embeddings:W}):this._call_text_to_waveform(le)}async _call_text_to_waveform(le){const W=this.tokenizer(le,{padding:!0,truncation:!0}),{waveform:we}=await this.model(W),Me=this.model.config.sampling_rate;return new u.RawAudio(we.data,Me)}async _call_text_to_spectrogram(le,{speaker_embeddings:W}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await n.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof W=="string"||W instanceof URL)&&(W=new Float32Array(await(await fetch(W)).arrayBuffer())),W instanceof Float32Array)W=new p.Tensor("float32",W,[1,W.length]);else if(!(W instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:we}=this.tokenizer(le,{padding:!0,truncation:!0}),{waveform:Me}=await this.model.generate_speech(we,W,{vocoder:this.vocoder}),Ce=this.processor.feature_extractor.config.sampling_rate;return new u.RawAudio(Me.data,Ce)}}class j extends E{constructor(G){super(G)}async _call(G){const le=await d(G),W=await this.processor(le),we=await this.model(W),Me=[];for(const Ce of we.reconstruction){const Pe=Ce.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Me.push(c.RawImage.fromTensor(Pe))}return Me.length>1?Me:Me[0]}}class ae extends E{constructor(G){super(G)}async _call(G){const le=await d(G),W=await this.processor(le),{predicted_depth:we}=await this.model(W),Me=[];for(let Ce=0;Ce<le.length;++Ce){const Pe=we[Ce],[Se,Fe]=Pe.dims.slice(-2),[je,Ke]=le[Ce].size,Ue=(await(0,p.interpolate_4d)(Pe.view(1,1,Se,Fe),{size:[Ke,je],mode:"bilinear"})).view(Ke,je),ke=Ue.min().item(),He=Ue.max().item(),Ye=Ue.sub(ke).div_(He-ke).mul_(255).to("uint8").unsqueeze(0),We=c.RawImage.fromTensor(Ye);Me.push({predicted_depth:Ue,depth:We})}return Me.length>1?Me:Me[0]}}const Ae=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:k,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:b,model:n.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:g,model:n.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:C,model:n.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:v,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:w,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:x,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:S,model:n.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:O,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Q,model:n.AutoModelForAudioClassification,processor:o.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:L,model:n.AutoModel,processor:o.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:Y,model:[n.AutoModelForSpeechSeq2Seq,n.AutoModelForCTC],processor:o.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:K,model:[n.AutoModelForTextToWaveform,n.AutoModelForTextToSpectrogram],processor:[o.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:q,model:n.AutoModelForVision2Seq,processor:o.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:X,model:n.AutoModelForImageClassification,processor:o.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:re,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:o.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:te,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:o.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:he,model:n.AutoModel,processor:o.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ue,model:n.AutoModelForObjectDetection,processor:o.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:N,model:n.AutoModelForZeroShotObjectDetection,processor:o.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:A,model:n.AutoModelForDocumentQuestionAnswering,processor:o.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:j,model:n.AutoModelForImageToImage,processor:o.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:ae,model:n.AutoModelForDepthEstimation,processor:o.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:R,model:n.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:o.AutoProcessor,pipeline:H,model:[n.AutoModelForImageFeatureExtraction,n.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),ve=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Ie(de,G=null,{progress_callback:le=null,config:W=null,cache_dir:we=null,local_files_only:Me=!1,revision:Ce="main",device:Pe=null,dtype:Se=null,subfolder:Fe="onnx",use_external_data_format:je=null,model_file_name:Ke=null,session_options:Ue={}}={}){de=ve[de]??de;const ke=Ae[de.split("_",1)[0]];if(!ke)throw Error(`Unsupported pipeline: ${de}. Must be one of [${Object.keys(Ae)}]`);G||(G=ke.default.model,console.log(`No model specified. Using default model: "${G}".`));const He={progress_callback:le,config:W,cache_dir:we,local_files_only:Me,revision:Ce,device:Pe,dtype:Se,subfolder:Fe,use_external_data_format:je,model_file_name:Ke,session_options:Ue},Ye=new Map([["tokenizer",ke.tokenizer],["model",ke.model],["processor",ke.processor]]),We=await Ve(Ye,G,He);We.task=de,(0,a.dispatchCallback)(le,{status:"ready",task:de,model:G});const pt=ke.pipeline;return new pt(We)}async function Ve(de,G,le){const W=Object.create(null),we=[];for(const[Me,Ce]of de.entries()){if(!Ce)continue;let Pe;Array.isArray(Ce)?Pe=new Promise(async(Se,Fe)=>{let je;for(const Ke of Ce){if(Ke===null){Se(null);return}try{Se(await Ke.from_pretrained(G,le));return}catch(Ue){if(Ue.message?.includes("Unsupported model type"))je=Ue;else if(Ue.message?.includes("Could not locate file"))je=Ue;else{Fe(Ue);return}}}Fe(je)}):Pe=Ce.from_pretrained(G,le),W[Me]=Pe,we.push(Pe)}await Promise.all(we);for(const[Me,Ce]of Object.entries(W))W[Me]=await Ce;return W}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>et,AutoTokenizer:()=>$s,BartTokenizer:()=>Cs,BertTokenizer:()=>dt,BlenderbotSmallTokenizer:()=>Ws,BlenderbotTokenizer:()=>fn,BloomTokenizer:()=>Ds,CLIPTokenizer:()=>bs,CamembertTokenizer:()=>rs,CodeGenTokenizer:()=>dn,CodeLlamaTokenizer:()=>os,CohereTokenizer:()=>wn,ConvBertTokenizer:()=>Or,DebertaTokenizer:()=>$t,DebertaV2Tokenizer:()=>nr,DistilBertTokenizer:()=>kr,ElectraTokenizer:()=>ss,EsmTokenizer:()=>ct,FalconTokenizer:()=>Le,GPT2Tokenizer:()=>jr,GPTNeoXTokenizer:()=>qe,GemmaTokenizer:()=>Vr,Grok1Tokenizer:()=>Ls,HerbertTokenizer:()=>Wt,LlamaTokenizer:()=>ns,M2M100Tokenizer:()=>zs,MBart50Tokenizer:()=>Ms,MBartTokenizer:()=>Hr,MPNetTokenizer:()=>Nr,MarianTokenizer:()=>hn,MgpstrTokenizer:()=>Mn,MobileBertTokenizer:()=>tt,NllbTokenizer:()=>Pr,NougatTokenizer:()=>_n,PreTrainedTokenizer:()=>be,Qwen2Tokenizer:()=>fr,RoFormerTokenizer:()=>Ht,RobertaTokenizer:()=>Dr,SiglipTokenizer:()=>pn,SpeechT5Tokenizer:()=>Ss,SqueezeBertTokenizer:()=>Zt,T5Tokenizer:()=>Ps,TokenizerModel:()=>H,VitsTokenizer:()=>gn,Wav2Vec2CTCTokenizer:()=>mn,WhisperTokenizer:()=>un,XLMRobertaTokenizer:()=>Ar,XLMTokenizer:()=>ws,is_chinese_char:()=>C});var s=t("./src/utils/generic.js"),n=t("./src/utils/core.js"),o=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),u=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function c(pe,$){const U=await Promise.all([(0,o.getModelJSON)(pe,"tokenizer.json",!0,$),(0,o.getModelJSON)(pe,"tokenizer_config.json",!0,$)]);return $.legacy!==null&&(U[1].legacy=$.legacy),U}function d(pe,$){const U=[];let J=0;for(const oe of pe.matchAll($)){const ce=oe[0];J<oe.index&&U.push(pe.slice(J,oe.index)),ce.length>0&&U.push(ce),J=oe.index+ce.length}return J<pe.length&&U.push(pe.slice(J)),U}function _(pe,$=!0){if(pe.Regex!==void 0){let U=pe.Regex.replace(/\\([#&~])/g,"$1");for(const[J,oe]of O)U=U.replaceAll(J,oe);return new RegExp(U,"gu")}else if(pe.String!==void 0){const U=(0,n.escapeRegExp)(pe.String);return new RegExp($?U:`(${U})`,"gu")}else return console.warn("Unknown pattern type:",pe),null}function f(pe){return new Map(Object.entries(pe))}function E(pe){const $=pe.dims;switch($.length){case 1:return pe.tolist();case 2:if($[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return pe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${$.length}.`)}}function k(pe){return pe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function b(pe){return pe.replace(/\p{M}/gu,"")}function g(pe){return b(pe.toLowerCase())}function C(pe){return pe>=19968&&pe<=40959||pe>=13312&&pe<=19903||pe>=131072&&pe<=173791||pe>=173824&&pe<=177983||pe>=177984&&pe<=178207||pe>=178208&&pe<=183983||pe>=63744&&pe<=64255||pe>=194560&&pe<=195103}function x(pe,$,U){const J=[];let oe=0;for(;oe<pe.length;){if(J.push(pe[oe]),($.get(pe[oe])??U)!==U){++oe;continue}for(;++oe<pe.length&&($.get(pe[oe])??U)===U;)$.get(J.at(-1))!==U&&(J[J.length-1]+=pe[oe])}return J}function v(pe){return pe.match(/\S+/g)||[]}const w="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",y=new RegExp(`^[${w}]+$`,"gu"),S=".,!?…。，、।۔،",O=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${S}])]+`,` ?[^\\s${S}]+`]]);class R{constructor($){this.content=$.content,this.id=$.id,this.single_word=$.single_word??!1,this.lstrip=$.lstrip??!1,this.rstrip=$.rstrip??!1,this.special=$.special??!1,this.normalized=$.normalized??null}}class H extends s.Callable{constructor($){super(),this.config=$,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig($,...U){switch($.type){case"WordPiece":return new Q($);case"Unigram":return new L($,...U);case"BPE":return new X($);default:if($.vocab)return Array.isArray($.vocab)?new L($,...U):typeof $.vocab=="object"&&$.continuing_subword_prefix&&$.unk_token?new Q($):new re($,...U);throw new Error(`Unknown TokenizerModel type: ${$.type}`)}}_call($){return $=this.encode($),this.fuse_unk&&($=x($,this.tokens_to_ids,this.unk_token_id)),$}encode($){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids($){return $.map(U=>this.tokens_to_ids.get(U)??this.unk_token_id)}convert_ids_to_tokens($){return $.map(U=>this.vocab[U]??this.unk_token)}}class Q extends H{constructor($){super($),this.tokens_to_ids=f($.vocab),this.unk_token_id=this.tokens_to_ids.get($.unk_token),this.unk_token=$.unk_token,this.max_input_chars_per_word=$.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[U,J]of this.tokens_to_ids)this.vocab[J]=U}encode($){const U=[];for(const J of $){const oe=[...J];if(oe.length>this.max_input_chars_per_word){U.push(this.unk_token);continue}let ce=!1,ye=0;const Be=[];for(;ye<oe.length;){let Xe=oe.length,Ge=null;for(;ye<Xe;){let Ze=oe.slice(ye,Xe).join("");if(ye>0&&(Ze=this.config.continuing_subword_prefix+Ze),this.tokens_to_ids.has(Ze)){Ge=Ze;break}--Xe}if(Ge===null){ce=!0;break}Be.push(Ge),ye=Xe}ce?U.push(this.unk_token):U.push(...Be)}return U}}class L extends H{constructor($,U){super($);const J=$.vocab.length;this.vocab=new Array(J),this.scores=new Array(J);for(let oe=0;oe<J;++oe)[this.vocab[oe],this.scores[oe]]=$.vocab[oe];this.unk_token_id=$.unk_id,this.unk_token=this.vocab[$.unk_id],this.tokens_to_ids=new Map(this.vocab.map((oe,ce)=>[oe,ce])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=U.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,i.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes($){const U=$.chars,J=1;let oe=0;for(;oe<U.length;){let ce=!1;const ye=U.slice(oe).join(""),Be=this.trie.commonPrefixSearch(ye);for(const Xe of Be){const Ge=this.tokens_to_ids.get(Xe),Ze=this.scores[Ge],_t=(0,n.len)(Xe);$.insert(oe,_t,Ze,Ge),!ce&&_t===J&&(ce=!0)}ce||$.insert(oe,J,this.unk_score,this.unk_token_id),oe+=J}}tokenize($){const U=new l.TokenLattice($,this.bos_token_id,this.eos_token_id);return this.populateNodes(U),U.tokens()}encode($){const U=[];for(const J of $){const oe=this.tokenize(J);U.push(...oe)}return U}}const Y=(()=>{const pe=[...Array.from({length:94},(oe,ce)=>ce+33),...Array.from({length:12},(oe,ce)=>ce+161),...Array.from({length:82},(oe,ce)=>ce+174)],$=pe.slice();let U=0;for(let oe=0;oe<256;++oe)pe.includes(oe)||(pe.push(oe),$.push(256+U),U+=1);const J=$.map(oe=>String.fromCharCode(oe));return Object.fromEntries(pe.map((oe,ce)=>[oe,J[ce]]))})(),q=(0,n.reverseDictionary)(Y);class X extends H{constructor($){super($),this.tokens_to_ids=f($.vocab),this.unk_token_id=this.tokens_to_ids.get($.unk_token),this.unk_token=$.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[J,oe]of this.tokens_to_ids)this.vocab[oe]=J;const U=Array.isArray($.merges[0]);this.merges=U?$.merges:$.merges.map(J=>J.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((J,oe)=>[JSON.stringify(J),oe])),this.end_of_word_suffix=$.end_of_word_suffix,this.continuing_subword_suffix=$.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe($){if($.length===0)return[];const U=this.cache.get($);if(U!==void 0)return U;const J=Array.from($);this.end_of_word_suffix&&(J[J.length-1]+=this.end_of_word_suffix);let oe=[];if(J.length>1){const ce=new l.PriorityQueue((Xe,Ge)=>Xe.score<Ge.score);let ye={token:J[0],bias:0,prev:null,next:null},Be=ye;for(let Xe=1;Xe<J.length;++Xe){const Ge={bias:Xe/J.length,token:J[Xe],prev:Be,next:null};Be.next=Ge,this._add_node(ce,Be),Be=Ge}for(;!ce.isEmpty();){const Xe=ce.pop();if(Xe.deleted||!Xe.next||Xe.next.deleted)continue;if(Xe.deleted=!0,Xe.next.deleted=!0,Xe.prev){const Ze={...Xe.prev};Xe.prev.deleted=!0,Xe.prev=Ze,Ze.prev?Ze.prev.next=Ze:ye=Ze}const Ge={token:Xe.token+Xe.next.token,bias:Xe.bias,prev:Xe.prev,next:Xe.next.next};Ge.prev?(Ge.prev.next=Ge,this._add_node(ce,Ge.prev)):ye=Ge,Ge.next&&(Ge.next.prev=Ge,this._add_node(ce,Ge))}for(let Xe=ye;Xe!==null;Xe=Xe.next)oe.push(Xe.token)}else oe=J;if(this.continuing_subword_suffix)for(let ce=0;ce<oe.length-1;++ce)oe[ce]+=this.continuing_subword_suffix;return $.length<this.max_length_to_cache&&this.cache.put($,oe),oe}_add_node($,U){const J=this.bpe_ranks.get(JSON.stringify([U.token,U.next.token]));J!==void 0&&(U.score=J+U.bias,$.push(U))}encode($){const U=[];for(const J of $){if(this.ignore_merges&&this.tokens_to_ids.has(J)){U.push(J);continue}const oe=this.bpe(J);for(const ce of oe)if(this.tokens_to_ids.has(ce))U.push(ce);else if(this.byte_fallback){const ye=Array.from(this.text_encoder.encode(ce)).map(Be=>`<0x${Be.toString(16).toUpperCase().padStart(2,"0")}>`);ye.every(Be=>this.tokens_to_ids.has(Be))?U.push(...ye):U.push(this.unk_token)}else U.push(this.unk_token)}return U}}class re extends H{constructor($,U){super($),this.tokens_to_ids=f(U.target_lang?$.vocab[U.target_lang]:$.vocab),this.bos_token=U.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=U.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=U.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=U.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[J,oe]of this.tokens_to_ids)this.vocab[oe]=J}encode($){return $}}class te extends s.Callable{constructor($){super(),this.config=$}static fromConfig($){if($===null)return null;switch($.type){case"BertNormalizer":return new de($);case"Precompiled":return new wt($);case"Sequence":return new Ve($);case"Replace":return new he($);case"NFC":return new N($);case"NFD":return new A($);case"NFKC":return new K($);case"NFKD":return new j($);case"Strip":return new ae($);case"StripAccents":return new Ae($);case"Lowercase":return new ve($);case"Prepend":return new Ie($);default:throw new Error(`Unknown Normalizer type: ${$.type}`)}}normalize($){throw Error("normalize should be implemented in subclass.")}_call($){return this.normalize($)}}class he extends te{normalize($){const U=_(this.config.pattern);return U===null?$:$.replaceAll(U,this.config.content)}}class ue extends te{constructor(){super(...arguments);Z(this,"form")}normalize(U){return U=U.normalize(this.form),U}}class N extends ue{constructor(){super(...arguments);Z(this,"form","NFC")}}class A extends ue{constructor(){super(...arguments);Z(this,"form","NFD")}}class K extends ue{constructor(){super(...arguments);Z(this,"form","NFKC")}}class j extends ue{constructor(){super(...arguments);Z(this,"form","NFKD")}}class ae extends te{normalize($){return this.config.strip_left&&this.config.strip_right?$=$.trim():(this.config.strip_left&&($=$.trimStart()),this.config.strip_right&&($=$.trimEnd())),$}}class Ae extends te{normalize($){return $=b($),$}}class ve extends te{normalize($){return $=$.toLowerCase(),$}}class Ie extends te{normalize($){return $=this.config.prepend+$,$}}class Ve extends te{constructor($){super($),this.normalizers=$.normalizers.map(U=>te.fromConfig(U))}normalize($){return this.normalizers.reduce((U,J)=>J.normalize(U),$)}}class de extends te{_tokenize_chinese_chars($){const U=[];for(let J=0;J<$.length;++J){const oe=$[J],ce=oe.charCodeAt(0);C(ce)?(U.push(" "),U.push(oe),U.push(" ")):U.push(oe)}return U.join("")}stripAccents($){return $.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control($){switch($){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test($)}}_clean_text($){const U=[];for(const J of $){const oe=J.charCodeAt(0);oe===0||oe===65533||this._is_control(J)||(/^\s$/.test(J)?U.push(" "):U.push(J))}return U.join("")}normalize($){return this.config.clean_text&&($=this._clean_text($)),this.config.handle_chinese_chars&&($=this._tokenize_chinese_chars($)),this.config.lowercase?($=$.toLowerCase(),this.config.strip_accents!==!1&&($=this.stripAccents($))):this.config.strip_accents&&($=this.stripAccents($)),$}}class G extends s.Callable{static fromConfig($){if($===null)return null;switch($.type){case"BertPreTokenizer":return new le($);case"Sequence":return new ts($);case"Whitespace":return new z($);case"WhitespaceSplit":return new ne($);case"Metaspace":return new mr($);case"ByteLevel":return new W($);case"Split":return new we($);case"Punctuation":return new Me($);case"Digits":return new Ce($);case"Replace":return new B($);default:throw new Error(`Unknown PreTokenizer type: ${$.type}`)}}pre_tokenize_text($,U){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize($,U){return(Array.isArray($)?$.map(J=>this.pre_tokenize_text(J,U)):this.pre_tokenize_text($,U)).flat()}_call($,U){return this.pre_tokenize($,U)}}class le extends G{constructor($){super(),this.pattern=new RegExp(`[^\\s${w}]+|[${w}]`,"gu")}pre_tokenize_text($,U){return $.trim().match(this.pattern)||[]}}class W extends G{constructor($){super(),this.config=$,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=Y,this.text_encoder=new TextEncoder}pre_tokenize_text($,U){return this.add_prefix_space&&!$.startsWith(" ")&&($=" "+$),(this.use_regex?$.match(this.pattern)||[]:[$]).map(oe=>Array.from(this.text_encoder.encode(oe),ce=>this.byte_encoder[ce]).join(""))}}class we extends G{constructor($){super(),this.config=$,this.pattern=_(this.config.pattern,this.config.invert)}pre_tokenize_text($,U){return this.pattern===null?[]:this.config.invert?$.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?$.split(this.pattern).filter(J=>J):d($,this.pattern)}}class Me extends G{constructor($){super(),this.config=$,this.pattern=new RegExp(`[^${w}]+|[${w}]+`,"gu")}pre_tokenize_text($,U){return $.match(this.pattern)||[]}}class Ce extends G{constructor($){super(),this.config=$;const U=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(U,"gu")}pre_tokenize_text($,U){return $.match(this.pattern)||[]}}class Pe extends s.Callable{constructor($){super(),this.config=$}static fromConfig($){if($===null)return null;switch($.type){case"TemplateProcessing":return new je($);case"ByteLevel":return new Ke($);case"RobertaProcessing":return new Fe($);case"BertProcessing":return new Se($);case"Sequence":return new Ue($);default:throw new Error(`Unknown PostProcessor type: ${$.type}`)}}post_process($,...U){throw Error("post_process should be implemented in subclass.")}_call($,...U){return this.post_process($,...U)}}class Se extends Pe{constructor($){super($),this.cls=$.cls[0],this.sep=$.sep[0]}post_process($,U=null,{add_special_tokens:J=!0}={}){J&&($=(0,n.mergeArrays)([this.cls],$,[this.sep]));let oe=new Array($.length).fill(0);if(U!==null){const ce=J&&this instanceof Fe?[this.sep]:[],ye=J?[this.sep]:[];$=(0,n.mergeArrays)($,ce,U,ye),oe=(0,n.mergeArrays)(oe,new Array(U.length+ce.length+ye.length).fill(1))}return{tokens:$,token_type_ids:oe}}}class Fe extends Se{}class je extends Pe{constructor($){super($),this.single=$.single,this.pair=$.pair}post_process($,U=null,{add_special_tokens:J=!0}={}){const oe=U===null?this.single:this.pair;let ce=[],ye=[];for(const Be of oe)"SpecialToken"in Be?J&&(ce.push(Be.SpecialToken.id),ye.push(Be.SpecialToken.type_id)):"Sequence"in Be&&(Be.Sequence.id==="A"?(ce=(0,n.mergeArrays)(ce,$),ye=(0,n.mergeArrays)(ye,new Array($.length).fill(Be.Sequence.type_id))):Be.Sequence.id==="B"&&(ce=(0,n.mergeArrays)(ce,U),ye=(0,n.mergeArrays)(ye,new Array(U.length).fill(Be.Sequence.type_id))));return{tokens:ce,token_type_ids:ye}}}class Ke extends Pe{post_process($,U=null){return U&&($=(0,n.mergeArrays)($,U)),{tokens:$}}}class Ue extends Pe{constructor($){super($),this.processors=$.processors.map(U=>Pe.fromConfig(U))}post_process($,U=null,J={}){let oe;for(const ce of this.processors)if(ce instanceof Ke)$=ce.post_process($).tokens,U&&(U=ce.post_process(U).tokens);else{const ye=ce.post_process($,U,J);$=ye.tokens,oe=ye.token_type_ids}return{tokens:$,token_type_ids:oe}}}class ke extends s.Callable{constructor($){super(),this.config=$,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=$.trim_offsets}static fromConfig($){if($===null)return null;switch($.type){case"WordPiece":return new at($);case"Metaspace":return new Er($);case"ByteLevel":return new $e($);case"Replace":return new He($);case"ByteFallback":return new Ye($);case"Fuse":return new We($);case"Strip":return new pt($);case"Sequence":return new Et($);case"CTC":return new nt($);case"BPEDecoder":return new Qt($);default:throw new Error(`Unknown Decoder type: ${$.type}`)}}_call($){return this.decode($)}decode($){return this.decode_chain($).join("")}decode_chain($){throw Error("`decode_chain` should be implemented in subclass.")}}class He extends ke{decode_chain($){const U=_(this.config.pattern);return U===null?$:$.map(J=>J.replaceAll(U,this.config.content))}}class Ye extends ke{constructor($){super($),this.text_decoder=new TextDecoder}decode_chain($){const U=[];let J=[];for(const oe of $){let ce=null;if(oe.length===6&&oe.startsWith("<0x")&&oe.endsWith(">")){const ye=parseInt(oe.slice(3,5),16);isNaN(ye)||(ce=ye)}if(ce!==null)J.push(ce);else{if(J.length>0){const ye=this.text_decoder.decode(Uint8Array.from(J));U.push(ye),J=[]}U.push(oe)}}if(J.length>0){const oe=this.text_decoder.decode(Uint8Array.from(J));U.push(oe),J=[]}return U}}class We extends ke{decode_chain($){return[$.join("")]}}class pt extends ke{constructor($){super($),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain($){return $.map(U=>{let J=0;for(let ce=0;ce<this.start&&U[ce]===this.content;++ce){J=ce+1;continue}let oe=U.length;for(let ce=0;ce<this.stop;++ce){const ye=U.length-ce-1;if(U[ye]===this.content){oe=ye;continue}else break}return U.slice(J,oe)})}}class at extends ke{constructor($){super($),this.cleanup=$.cleanup}decode_chain($){return $.map((U,J)=>(J!==0&&(U.startsWith(this.config.prefix)?U=U.replace(this.config.prefix,""):U=" "+U),this.cleanup&&(U=k(U)),U))}}class $e extends ke{constructor($){super($),this.byte_decoder=q,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string($){const U=$.join(""),J=new Uint8Array([...U].map(ce=>this.byte_decoder[ce]));return this.text_decoder.decode(J)}decode_chain($){const U=[];let J=[];for(const oe of $)this.added_tokens.find(ce=>ce.content===oe)!==void 0?(J.length>0&&(U.push(this.convert_tokens_to_string(J)),J=[]),U.push(oe)):J.push(oe);return J.length>0&&U.push(this.convert_tokens_to_string(J)),U}}class nt extends ke{constructor($){super($),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string($){if($.length===0)return"";const U=[$[0]];for(let ce=1;ce<$.length;++ce)$[ce]!==U.at(-1)&&U.push($[ce]);let oe=U.filter(ce=>ce!==this.pad_token).join("");return this.cleanup&&(oe=k(oe).replaceAll(this.word_delimiter_token," ").trim()),oe}decode_chain($){return[this.convert_tokens_to_string($)]}}class Et extends ke{constructor($){super($),this.decoders=$.decoders.map(U=>ke.fromConfig(U))}decode_chain($){return this.decoders.reduce((U,J)=>J.decode_chain(U),$)}}class Qt extends ke{constructor($){super($),this.suffix=this.config.suffix}decode_chain($){return $.map((U,J)=>U.replaceAll(this.suffix,J===$.length-1?"":" "))}}class Ft extends ke{decode_chain($){let U="";for(let J=1;J<$.length;J+=2)U+=$[J];return[U]}}class mr extends G{constructor($){super(),this.addPrefixSpace=$.add_prefix_space,this.replacement=$.replacement,this.strRep=$.str_rep||this.replacement,this.prepend_scheme=$.prepend_scheme??"always"}pre_tokenize_text($,{section_index:U=void 0}={}){let J=$.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!J.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&U===0)&&(J=this.strRep+J),[J]}}class Er extends ke{constructor($){super($),this.addPrefixSpace=$.add_prefix_space,this.replacement=$.replacement}decode_chain($){const U=[];for(let J=0;J<$.length;++J){let oe=$[J].replaceAll(this.replacement," ");this.addPrefixSpace&&J==0&&oe.startsWith(" ")&&(oe=oe.substring(1)),U.push(oe)}return U}}class wt extends te{constructor($){super($),this.charsmap=$.precompiled_charsmap}normalize($){return $=$.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),$=$.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),$.includes("～")?$=$.split("～").map(J=>J.normalize("NFKC")).join("～"):$=$.normalize("NFKC"),$}}class ts extends G{constructor($){super(),this.tokenizers=$.pretokenizers.map(U=>G.fromConfig(U))}pre_tokenize_text($,U){return this.tokenizers.reduce((J,oe)=>oe.pre_tokenize(J,U),[$])}}class z extends G{constructor($){super()}pre_tokenize_text($,U){return $.match(/\w+|[^\w\s]+/g)||[]}}class ne extends G{constructor($){super()}pre_tokenize_text($,U){return v($)}}class B extends G{constructor($){super(),this.config=$,this.pattern=_(this.config.pattern),this.content=this.config.content}pre_tokenize_text($,U){return this.pattern===null?[$]:[$.replaceAll(this.pattern,this.config.content)]}}const ee=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function me(pe,$,U,J){for(const oe of Object.keys(pe)){const ce=$-pe[oe].length,ye=U(oe),Be=new Array(ce).fill(ye);pe[oe]=J==="right"?(0,n.mergeArrays)(pe[oe],Be):(0,n.mergeArrays)(Be,pe[oe])}}function Oe(pe,$){for(const U of Object.keys(pe))pe[U].length=$}class be extends s.Callable{constructor(U,J){super();Z(this,"return_token_type_ids",!1);Z(this,"padding_side","right");this._tokenizer_config=J,this.normalizer=te.fromConfig(U.normalizer),this.pre_tokenizer=G.fromConfig(U.pre_tokenizer),this.model=H.fromConfig(U.model,J),this.post_processor=Pe.fromConfig(U.post_processor),this.decoder=ke.fromConfig(U.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const oe of U.added_tokens){const ce=new R(oe);this.added_tokens.push(ce),this.model.tokens_to_ids.set(ce.content,ce.id),this.model.vocab[ce.id]=ce.content,ce.special&&(this.special_tokens.push(ce.content),this.all_special_ids.push(ce.id))}if(this.additional_special_tokens=J.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(oe=>oe.content)),this.added_tokens_map=new Map(this.added_tokens.map(oe=>[oe.content,oe])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=J.model_max_length,this.remove_space=J.remove_space,this.clean_up_tokenization_spaces=J.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=J.do_lowercase_and_remove_accent??!1,J.padding_side&&(this.padding_side=J.padding_side),this.legacy=!1,this.chat_template=J.chat_template??null,Array.isArray(this.chat_template)){const oe=Object.create(null);for(const{name:ce,template:ye}of this.chat_template){if(typeof ce!="string"||typeof ye!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');oe[ce]=ye}this.chat_template=oe}this._compiled_template_cache=new Map}getToken(...U){for(const J of U){const oe=this._tokenizer_config[J];if(oe)if(typeof oe=="object"){if(oe.__type==="AddedToken")return oe.content;throw Error(`Unknown token: ${oe}`)}else return oe}return null}static async from_pretrained(U,{progress_callback:J=null,config:oe=null,cache_dir:ce=null,local_files_only:ye=!1,revision:Be="main",legacy:Xe=null}={}){const Ge=await c(U,{progress_callback:J,config:oe,cache_dir:ce,local_files_only:ye,revision:Be,legacy:Xe});return new this(...Ge)}_call(U,{text_pair:J=null,add_special_tokens:oe=!0,padding:ce=!1,truncation:ye=null,max_length:Be=null,return_tensor:Xe=!0,return_token_type_ids:Ge=null}={}){const Ze=Array.isArray(U);let _t;if(Ze){if(U.length===0)throw Error("text array must be non-empty");if(J!==null){if(Array.isArray(J)){if(U.length!==J.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");_t=U.map((At,or)=>this._encode_plus(At,{text_pair:J[or],add_special_tokens:oe,return_token_type_ids:Ge}))}else _t=U.map(At=>this._encode_plus(At,{add_special_tokens:oe,return_token_type_ids:Ge}))}else{if(U==null)throw Error("text may not be null or undefined");if(Array.isArray(J))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");_t=[this._encode_plus(U,{text_pair:J,add_special_tokens:oe,return_token_type_ids:Ge})]}if(Be===null?Be=this.model_max_length:ye===null&&(ce===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),Be=this.model_max_length):ce===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),ye=!0)),ce===!0&&(Be=Math.min((0,i.max)(_t.map(At=>At.input_ids.length))[0],Be??1/0)),Be=Math.min(Be,this.model_max_length??1/0),ce||ye)for(let At=0;At<_t.length;++At)_t[At].input_ids.length!==Be&&(_t[At].input_ids.length>Be?ye&&Oe(_t[At],Be):ce&&me(_t[At],Be,or=>or==="input_ids"?this.pad_token_id:0,this.padding_side));const Ot={};if(Xe){if(!(ce&&ye)&&_t.some(or=>{for(const Nt of Object.keys(or))if(or[Nt].length!==_t[0][Nt]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const At=[_t.length,_t[0].input_ids.length];for(const or of Object.keys(_t[0]))Ot[or]=new a.Tensor("int64",BigInt64Array.from(_t.flatMap(Nt=>Nt[or]).map(BigInt)),At)}else{for(const At of Object.keys(_t[0]))Ot[At]=_t.map(or=>or[At]);if(!Ze)for(const At of Object.keys(Ot))Ot[At]=Ot[At][0]}return Ot}_encode_text(U){if(U===null)return null;const J=this.added_tokens_splitter.split(U);for(let ce=0;ce<J.length;++ce){const ye=this.added_tokens_map.get(J[ce]);ye&&(ye.lstrip&&ce>0&&(J[ce-1]=J[ce-1].trimEnd()),ye.rstrip&&ce<J.length-1&&(J[ce+1]=J[ce+1].trimStart()))}return J.flatMap((ce,ye)=>{if(ce.length===0)return[];if(this.added_tokens_map.has(ce))return[ce];if(this.remove_space===!0&&(ce=ce.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(ce=g(ce)),this.normalizer!==null&&(ce=this.normalizer(ce)),ce.length===0)return[];const Be=this.pre_tokenizer!==null?this.pre_tokenizer(ce,{section_index:ye}):[ce];return this.model(Be)})}_encode_plus(U,{text_pair:J=null,add_special_tokens:oe=!0,return_token_type_ids:ce=null}={}){const{tokens:ye,token_type_ids:Be}=this._tokenize_helper(U,{pair:J,add_special_tokens:oe}),Xe=this.model.convert_tokens_to_ids(ye),Ge={input_ids:Xe,attention_mask:new Array(Xe.length).fill(1)};return(ce??this.return_token_type_ids)&&Be&&(Ge.token_type_ids=Be),Ge}_tokenize_helper(U,{pair:J=null,add_special_tokens:oe=!1}={}){const ce=this._encode_text(U),ye=this._encode_text(J);return this.post_processor?this.post_processor(ce,ye,{add_special_tokens:oe}):{tokens:(0,n.mergeArrays)(ce??[],ye??[])}}tokenize(U,{pair:J=null,add_special_tokens:oe=!1}={}){return this._tokenize_helper(U,{pair:J,add_special_tokens:oe}).tokens}encode(U,{text_pair:J=null,add_special_tokens:oe=!0,return_token_type_ids:ce=null}={}){return this._encode_plus(U,{text_pair:J,add_special_tokens:oe,return_token_type_ids:ce}).input_ids}batch_decode(U,J={}){return U instanceof a.Tensor&&(U=U.tolist()),U.map(oe=>this.decode(oe,J))}decode(U,J={}){if(U instanceof a.Tensor&&(U=E(U)),!Array.isArray(U)||U.length===0||!(0,n.isIntegralNumber)(U[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(U,J)}decode_single(U,{skip_special_tokens:J=!1,clean_up_tokenization_spaces:oe=null}){let ce=this.model.convert_ids_to_tokens(U);J&&(ce=ce.filter(Be=>!this.special_tokens.includes(Be)));let ye=this.decoder?this.decoder(ce):ce.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(ye=ye.replaceAll(this.decoder.end_of_word_suffix," "),J&&(ye=ye.trim())),(oe??this.clean_up_tokenization_spaces)&&(ye=k(ye)),ye}get_chat_template({chat_template:U=null,tools:J=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const oe=this.chat_template;if(U!==null&&Object.hasOwn(oe,U))U=oe[U];else if(U===null)if(J!==null&&"tool_use"in oe)U=oe.tool_use;else if("default"in oe)U=oe.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(oe).sort()}.`)}else if(U===null)if(this.chat_template)U=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return U}apply_chat_template(U,{tools:J=null,documents:oe=null,chat_template:ce=null,add_generation_prompt:ye=!1,tokenize:Be=!0,padding:Xe=!1,truncation:Ge=!1,max_length:Ze=null,return_tensor:_t=!0,return_dict:Ot=!1,tokenizer_kwargs:At={},...or}={}){if(ce=this.get_chat_template({chat_template:ce,tools:J}),typeof ce!="string")throw Error(`chat_template must be a string, but got ${typeof ce}`);let Nt=this._compiled_template_cache.get(ce);Nt===void 0&&(Nt=new u.Template(ce),this._compiled_template_cache.set(ce,Nt));const pr=Object.create(null);for(const tr of ee){const qr=this.getToken(tr);qr&&(pr[tr]=qr)}const qt=Nt.render({messages:U,add_generation_prompt:ye,tools:J,documents:oe,...pr,...or});if(Be){const tr=this._call(qt,{add_special_tokens:!1,padding:Xe,truncation:Ge,max_length:Ze,return_tensor:_t,...At});return Ot?tr:tr.input_ids}return qt}}class dt extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class et extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class tt extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Zt extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class $t extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class nr extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Wt extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Or extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Ht extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class kr extends be{}class rs extends be{}class ws extends be{constructor(U,J){super(U,J);Z(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class ss extends be{constructor(){super(...arguments);Z(this,"return_token_type_ids",!0)}}class Ps extends be{}class jr extends be{}class Cs extends be{}class Hr extends be{constructor($,U){super($,U),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)),this.lang_to_token=J=>J}_build_translation_inputs($,U,J){return lr(this,$,U,J)}}class Ms extends Hr{}class Dr extends be{}class Ds extends be{}const er="▁";class ns extends be{constructor(U,J){super(U,J);Z(this,"padding_side","left");this.legacy=J.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new mr({replacement:er,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(U){if(U===null)return null;if(this.legacy||U.length===0)return super._encode_text(U);let J=super._encode_text(er+U.replaceAll(er," "));return J.length>1&&J[0]===er&&this.special_tokens.includes(J[1])&&(J=J.slice(1)),J}}class os extends be{}class Ar extends be{}class Nr extends be{}class Le extends be{}class qe extends be{}class ct extends be{}class fr extends be{}class Vr extends be{}class Ls extends be{}function lr(pe,$,U,J){if(!("language_codes"in pe)||!Array.isArray(pe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in pe)||!(pe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in pe)||typeof pe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const oe=J.src_lang,ce=J.tgt_lang;if(!pe.language_codes.includes(ce))throw new Error(`Target language code "${ce}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);if(oe!==void 0){if(!pe.language_codes.includes(oe))throw new Error(`Source language code "${oe}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);for(const ye of pe.post_processor.config.single)if("SpecialToken"in ye&&pe.languageRegex.test(ye.SpecialToken.id)){ye.SpecialToken.id=pe.lang_to_token(oe);break}}return J.forced_bos_token_id=pe.model.convert_tokens_to_ids([pe.lang_to_token(ce)])[0],pe._call($,U)}class Pr extends be{constructor($,U){super($,U),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)),this.lang_to_token=J=>J}_build_translation_inputs($,U,J){return lr(this,$,U,J)}}class zs extends be{constructor($,U){super($,U),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)).map(J=>J.slice(2,-2)),this.lang_to_token=J=>`__${J}__`}_build_translation_inputs($,U,J){return lr(this,$,U,J)}}class un extends be{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr($,{return_timestamps:U=!1,return_language:J=!1,time_precision:oe=null,force_full_sequences:ce=!0}={}){if(oe===null)throw Error("Must specify time_precision");let ye=null;const Be=U==="word";function Xe(){return{language:ye,timestamp:[null,null],text:""}}const Ge=[];let Ze=Xe(),_t=0;const Ot=this.timestamp_begin,or=Ot+1500;let Nt=[],pr=[],qt=!1,tr=null;const qr=new Set(this.all_special_ids);for(const Gt of $){const gr=Gt.tokens,Cr=Be?Gt.token_timestamps:null;let Qr=null,is=Ot;if("stride"in Gt){const[wr,cr,rr]=Gt.stride;if(_t-=cr,tr=wr-rr,cr&&(is=cr/oe+Ot),rr)for(let dr=gr.length-1;dr>=0;--dr){const Lr=Number(gr[dr]);if(Lr>=Ot){if(Qr!==null&&(Lr-Ot)*oe<tr)break;Qr=Lr}}}let Sr=[],vr=[];for(let wr=0;wr<gr.length;++wr){const cr=Number(gr[wr]);if(qr.has(cr)){const rr=this.decode([cr]),dr=p.WHISPER_LANGUAGE_MAPPING.get(rr.slice(2,-2));if(dr!==void 0){if(ye!==null&&dr!==ye&&!U){Nt.push(Sr);const Lr=this.findLongestCommonSequence(Nt)[0],as=this.decode(Lr);Ze.text=as,Ge.push(Ze),Nt=[],Sr=[],Ze=Xe()}ye=Ze.language=dr}}else if(cr>=Ot&&cr<=or){const rr=(cr-Ot)*oe+_t,dr=(0,i.round)(rr,2);if(Qr!==null&&cr>=Qr)qt=!0;else if(qt||Nt.length>0&&cr<is)qt=!1;else if(Ze.timestamp[0]===null)Ze.timestamp[0]=dr;else if(dr!==Ze.timestamp[0]){Ze.timestamp[1]=dr,Nt.push(Sr),Be&&pr.push(vr);const[Lr,as]=this.findLongestCommonSequence(Nt,pr),Bn=this.decode(Lr);Ze.text=Bn,Be&&(Ze.words=this.collateWordTimestamps(Lr,as,ye)),Ge.push(Ze),Nt=[],Sr=[],pr=[],vr=[],Ze=Xe()}}else if(Sr.push(cr),Be){let rr=(0,i.round)(Cr[wr]+_t,2),dr;if(wr+1<Cr.length){dr=(0,i.round)(Cr[wr+1]+_t,2);const Lr=this.decode([cr]);y.test(Lr)&&(dr=(0,i.round)(Math.min(rr+oe,dr),2))}else dr=null;vr.push([rr,dr])}}if("stride"in Gt){const[wr,cr,rr]=Gt.stride;_t+=wr-rr}Sr.length>0?(Nt.push(Sr),Be&&pr.push(vr)):Nt.every(wr=>wr.length===0)&&(Ze=Xe(),Nt=[],Sr=[],pr=[],vr=[])}if(Nt.length>0){if(ce&&U)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Gt,gr]=this.findLongestCommonSequence(Nt,pr),Cr=this.decode(Gt);Ze.text=Cr,Be&&(Ze.words=this.collateWordTimestamps(Gt,gr,ye)),Ge.push(Ze)}let _r=Object.create(null);const ys=Ge.map(Gt=>Gt.text).join("");if(U||J){for(let Gt=0;Gt<Ge.length;++Gt){const gr=Ge[Gt];U||delete gr.timestamp,J||delete gr.language}if(Be){const Gt=[];for(const gr of Ge)for(const Cr of gr.words)Gt.push(Cr);_r={chunks:Gt}}else _r={chunks:Ge}}return[ys,_r]}findLongestCommonSequence($,U=null){let J=$[0],oe=J.length,ce=[];const ye=Array.isArray(U)&&U.length>0;let Be=ye?[]:null,Xe=ye?U[0]:null;for(let Ge=1;Ge<$.length;++Ge){const Ze=$[Ge];let _t=0,Ot=[oe,oe,0,0];const At=Ze.length;for(let _r=1;_r<oe+At;++_r){const ys=Math.max(0,oe-_r),Gt=Math.min(oe,oe+At-_r),gr=J.slice(ys,Gt),Cr=Math.max(0,_r-oe),Qr=Math.min(At,_r),is=Ze.slice(Cr,Qr);if(gr.length!==is.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Sr;ye?Sr=gr.filter((cr,rr)=>cr===is[rr]&&Xe[ys+rr]<=U[Ge][Cr+rr]).length:Sr=gr.filter((cr,rr)=>cr===is[rr]).length;const vr=_r/1e4,wr=Sr/_r+vr;Sr>1&&wr>_t&&(_t=wr,Ot=[ys,Gt,Cr,Qr])}const[or,Nt,pr,qt]=Ot,tr=Math.floor((Nt+or)/2),qr=Math.floor((qt+pr)/2);ce.push(...J.slice(0,tr)),J=Ze.slice(qr),oe=J.length,ye&&(Be.push(...Xe.slice(0,tr)),Xe=U[Ge].slice(qr))}return ce.push(...J),ye?(Be.push(...Xe),[ce,Be]):[ce,[]]}collateWordTimestamps($,U,J){const[oe,ce,ye]=this.combineTokensIntoWords($,J),Be=[];for(let Xe=0;Xe<oe.length;++Xe){const Ge=ye[Xe];Be.push({text:oe[Xe],timestamp:[U[Ge.at(0)][0],U[Ge.at(-1)][1]]})}return Be}combineTokensIntoWords($,U,J=`"'“¡¿([{-`,oe=`"'.。,，!！?？:：”)]}、`){U=U??"english";let ce,ye,Be;return["chinese","japanese","thai","lao","myanmar"].includes(U)?[ce,ye,Be]=this.splitTokensOnUnicode($):[ce,ye,Be]=this.splitTokensOnSpaces($),this.mergePunctuations(ce,ye,Be,J,oe)}decode($,U){let J;return U?.decode_with_timestamps?($ instanceof a.Tensor&&($=E($)),J=this.decodeWithTimestamps($,U)):J=super.decode($,U),J}decodeWithTimestamps($,U){const J=U?.time_precision??.02,oe=Array.from(this.all_special_ids).at(-1)+1;let ce=[[]];for(let ye of $)if(ye=Number(ye),ye>=oe){const Be=((ye-oe)*J).toFixed(2);ce.push(`<|${Be}|>`),ce.push([])}else ce[ce.length-1].push(ye);return ce=ce.map(ye=>typeof ye=="string"?ye:super.decode(ye,U)),ce.join("")}splitTokensOnUnicode($){const U=this.decode($,{decode_with_timestamps:!0}),J="�",oe=[],ce=[],ye=[];let Be=[],Xe=[],Ge=0;for(let Ze=0;Ze<$.length;++Ze){const _t=$[Ze];Be.push(_t),Xe.push(Ze);const Ot=this.decode(Be,{decode_with_timestamps:!0});(!Ot.includes(J)||U[Ge+Ot.indexOf(J)]===J)&&(oe.push(Ot),ce.push(Be),ye.push(Xe),Be=[],Xe=[],Ge+=Ot.length)}return[oe,ce,ye]}splitTokensOnSpaces($){const[U,J,oe]=this.splitTokensOnUnicode($),ce=[],ye=[],Be=[],Xe=new RegExp(`^[${w}]$`,"gu");for(let Ge=0;Ge<U.length;++Ge){const Ze=U[Ge],_t=J[Ge],Ot=oe[Ge],At=_t[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),or=Ze.startsWith(" "),Nt=Ze.trim(),pr=Xe.test(Nt);if(At||or||pr||ce.length===0)ce.push(Ze),ye.push(_t),Be.push(Ot);else{const qt=ce.length-1;ce[qt]+=Ze,ye[qt].push(..._t),Be[qt].push(...Ot)}}return[ce,ye,Be]}mergePunctuations($,U,J,oe,ce){const ye=structuredClone($),Be=structuredClone(U),Xe=structuredClone(J);let Ge=ye.length-2,Ze=ye.length-1;for(;Ge>=0;)ye[Ge].startsWith(" ")&&oe.includes(ye[Ge].trim())?(ye[Ze]=ye[Ge]+ye[Ze],Be[Ze]=(0,n.mergeArrays)(Be[Ge],Be[Ze]),Xe[Ze]=(0,n.mergeArrays)(Xe[Ge],Xe[Ze]),ye[Ge]="",Be[Ge]=[],Xe[Ge]=[]):Ze=Ge,--Ge;for(Ge=0,Ze=1;Ze<ye.length;)!ye[Ge].endsWith(" ")&&ce.includes(ye[Ze])?(ye[Ge]+=ye[Ze],Be[Ge]=(0,n.mergeArrays)(Be[Ge],Be[Ze]),Xe[Ge]=(0,n.mergeArrays)(Xe[Ge],Xe[Ze]),ye[Ze]="",Be[Ze]=[],Xe[Ze]=[]):Ge=Ze,++Ze;return[ye.filter(_t=>_t),Be.filter(_t=>_t.length>0),Xe.filter(_t=>_t.length>0)]}}class dn extends be{}class bs extends be{}class pn extends be{}class hn extends be{constructor($,U){super($,U),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(J=>this.languageRegex.test(J)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text($){if($===null)return null;const[U,...J]=$.trim().split(this.languageRegex);if(J.length===0)return super._encode_text(U);if(J.length===2){const[oe,ce]=J;return this.supported_language_codes.includes(oe)||console.warn(`Unsupported language code "${oe}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,n.mergeArrays)([oe],super._encode_text(ce))}}}class mn extends be{}class fn extends be{}class Ws extends be{}class Ss extends be{}class _n extends be{}class gn extends be{constructor($,U){super($,U),this.decoder=new Ft({})}}class wn extends be{}class Mn extends be{}class $s{static async from_pretrained($,{progress_callback:U=null,config:J=null,cache_dir:oe=null,local_files_only:ce=!1,revision:ye="main",legacy:Be=null}={}){const[Xe,Ge]=await c($,{progress_callback:U,config:J,cache_dir:oe,local_files_only:ce,revision:ye,legacy:Be}),Ze=Ge.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let _t=this.TOKENIZER_CLASS_MAPPING[Ze];return _t||(console.warn(`Unknown tokenizer class "${Ze}", attempting to construct from base class.`),_t=be),new _t(Xe,Ge)}}Z($s,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:Ps,DistilBertTokenizer:kr,CamembertTokenizer:rs,DebertaTokenizer:$t,DebertaV2Tokenizer:nr,BertTokenizer:dt,HerbertTokenizer:Wt,ConvBertTokenizer:Or,RoFormerTokenizer:Ht,XLMTokenizer:ws,ElectraTokenizer:ss,MobileBertTokenizer:tt,SqueezeBertTokenizer:Zt,AlbertTokenizer:et,GPT2Tokenizer:jr,BartTokenizer:Cs,MBartTokenizer:Hr,MBart50Tokenizer:Ms,RobertaTokenizer:Dr,WhisperTokenizer:un,CodeGenTokenizer:dn,CLIPTokenizer:bs,SiglipTokenizer:pn,MarianTokenizer:hn,BloomTokenizer:Ds,NllbTokenizer:Pr,M2M100Tokenizer:zs,LlamaTokenizer:ns,CodeLlamaTokenizer:os,XLMRobertaTokenizer:Ar,MPNetTokenizer:Nr,FalconTokenizer:Le,GPTNeoXTokenizer:qe,EsmTokenizer:ct,Wav2Vec2CTCTokenizer:mn,BlenderbotTokenizer:fn,BlenderbotSmallTokenizer:Ws,SpeechT5Tokenizer:Ss,NougatTokenizer:_n,VitsTokenizer:gn,Qwen2Tokenizer:fr,GemmaTokenizer:Vr,Grok1Tokenizer:Ls,CohereTokenizer:wn,MgpstrTokenizer:Mn,PreTrainedTokenizer:be})},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>Q,hamming:()=>d,hanning:()=>c,mel_filter_bank:()=>C,read_audio:()=>u,spectrogram:()=>S,window_function:()=>O});var s=t("./src/utils/hub.js"),n=t("./src/utils/maths.js"),o=t("./src/utils/core.js"),i=t("./src/env.js"),a=t("?7a2c"),l=t("./src/utils/tensor.js");async function u(L,Y){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const q=await(await(0,s.getFile)(L)).arrayBuffer(),X=new AudioContext({sampleRate:Y});typeof Y>"u"&&console.warn(`No sampling rate provided, using default of ${X.sampleRate}Hz.`);const re=await X.decodeAudioData(q);let te;if(re.numberOfChannels===2){const he=Math.sqrt(2),ue=re.getChannelData(0),N=re.getChannelData(1);te=new Float32Array(ue.length);for(let A=0;A<re.length;++A)te[A]=he*(ue[A]+N[A])/2}else te=re.getChannelData(0);return te}function p(L,Y){if(L<1)return new Float64Array;if(L===1)return new Float64Array([1]);const q=1-Y,X=2*Math.PI/(L-1),re=new Float64Array(L);for(let te=0;te<L;++te)re[te]=Y-q*Math.cos(te*X);return re}function c(L){return p(L,.5)}function d(L){return p(L,.54)}const _={htk:L=>2595*Math.log10(1+L/700),kaldi:L=>1127*Math.log(1+L/700),slaney:(L,Y=1e3,q=15,X=27/Math.log(6.4))=>L>=Y?q+Math.log(L/Y)*X:3*L/200};function f(L,Y="htk"){const q=_[Y];if(!q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof L=="number"?q(L):L.map(X=>q(X))}const E={htk:L=>700*(10**(L/2595)-1),kaldi:L=>700*(Math.exp(L/1127)-1),slaney:(L,Y=1e3,q=15,X=Math.log(6.4)/27)=>L>=q?Y*Math.exp(X*(L-q)):200*L/3};function k(L,Y="htk"){const q=E[Y];if(!q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof L=="number"?q(L):L.map(X=>q(X))}function b(L,Y){const q=Float64Array.from({length:Y.length-1},(he,ue)=>Y[ue+1]-Y[ue]),X=Array.from({length:L.length},()=>new Array(Y.length));for(let he=0;he<L.length;++he){const ue=X[he];for(let N=0;N<Y.length;++N)ue[N]=Y[N]-L[he]}const re=Y.length-2,te=Array.from({length:re},()=>new Array(L.length));for(let he=0;he<L.length;++he){const ue=X[he];for(let N=0;N<re;++N){const A=-ue[N]/q[N],K=ue[N+2]/q[N+1];te[N][he]=Math.max(0,Math.min(A,K))}}return te}function g(L,Y,q){const X=(Y-L)/(q-1);return Float64Array.from({length:q},(re,te)=>L+X*te)}function C(L,Y,q,X,re,te=null,he="htk",ue=!1){if(te!==null&&te!=="slaney")throw new Error('norm must be one of null or "slaney"');if(L<2)throw new Error(`Require num_frequency_bins: ${L} >= 2`);if(q>X)throw new Error(`Require min_frequency: ${q} <= max_frequency: ${X}`);const N=f(q,he),A=f(X,he),K=g(N,A,Y+2);let j=k(K,he),ae;if(ue){const ve=re/((L-1)*2);ae=f(Float64Array.from({length:L},(Ie,Ve)=>Ve*ve),he),j=K}else ae=g(0,Math.floor(re/2),L);const Ae=b(ae,j);if(te!==null&&te==="slaney")for(let ve=0;ve<Y;++ve){const Ie=Ae[ve],Ve=2/(j[ve+2]-j[ve]);for(let de=0;de<L;++de)Ie[de]*=Ve}return Ae}function x(L,Y,q){const X=new L.constructor(L.length+Y+q),re=L.length-1;for(let te=0;te<L.length;++te)X[Y+te]=L[te];for(let te=1;te<=Y;++te)X[Y-te]=L[(0,o.calculateReflectOffset)(te,re)];for(let te=1;te<=q;++te)X[re+Y+te]=L[(0,o.calculateReflectOffset)(re-te,re)];return X}function v(L,Y,q,X,re){if(q<=0)throw new Error("reference must be greater than zero");if(X<=0)throw new Error("min_value must be greater than zero");q=Math.max(X,q);const te=Math.log10(q);for(let he=0;he<L.length;++he)L[he]=Y*Math.log10(Math.max(X,L[he])-te);if(re!==null){if(re<=0)throw new Error("db_range must be greater than zero");const he=(0,n.max)(L)[0]-re;for(let ue=0;ue<L.length;++ue)L[ue]=Math.max(L[ue],he)}return L}function w(L,Y=1,q=1e-5,X=null){return v(L,20,Y,q,X)}function y(L,Y=1,q=1e-10,X=null){return v(L,10,Y,q,X)}async function S(L,Y,q,X,{fft_length:re=null,power:te=1,center:he=!0,pad_mode:ue="reflect",onesided:N=!0,preemphasis:A=null,mel_filters:K=null,mel_floor:j=1e-10,log_mel:ae=null,reference:Ae=1,min_value:ve=1e-10,db_range:Ie=null,remove_dc_offset:Ve=null,min_num_frames:de=null,max_num_frames:G=null,do_pad:le=!0,transpose:W=!1}={}){const we=Y.length;if(re===null&&(re=q),q>re)throw Error(`frame_length (${q}) may not be larger than fft_length (${re})`);if(we!==q)throw new Error(`Length of the window (${we}) must equal frame_length (${q})`);if(X<=0)throw new Error("hop_length must be greater than zero");if(te===null&&K!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(he){if(ue!=="reflect")throw new Error(`pad_mode="${ue}" not implemented yet.`);const We=Math.floor((re-1)/2)+1;L=x(L,We,We)}let Me=Math.floor(1+Math.floor((L.length-q)/X));de!==null&&Me<de&&(Me=de);const Ce=N?Math.floor(re/2)+1:re;let Pe=Me,Se=Me;G!==null&&(G>Me?le&&(Se=G):Se=Pe=G);const Fe=new n.FFT(re),je=new Float64Array(re),Ke=new Float64Array(Fe.outputBufferSize),Ue=new Float32Array(Ce*Se);for(let We=0;We<Pe;++We){const pt=We*X,at=Math.min(L.length-pt,q);at!==q&&je.fill(0,0,q);for(let $e=0;$e<at;++$e)je[$e]=L[pt+$e];if(Ve){let $e=0;for(let Et=0;Et<at;++Et)$e+=je[Et];const nt=$e/at;for(let Et=0;Et<at;++Et)je[Et]-=nt}if(A!==null){for(let $e=at-1;$e>=1;--$e)je[$e]-=A*je[$e-1];je[0]*=1-A}for(let $e=0;$e<Y.length;++$e)je[$e]*=Y[$e];Fe.realTransform(Ke,je);for(let $e=0;$e<Ce;++$e){const nt=$e<<1;Ue[$e*Se+We]=Ke[nt]**2+Ke[nt+1]**2}}if(te!==null&&te!==2){const We=2/te;for(let pt=0;pt<Ue.length;++pt)Ue[pt]**=We}const ke=K.length;let He=await(0,l.matmul)(new l.Tensor("float32",K.flat(),[ke,Ce]),new l.Tensor("float32",Ue,[Ce,Se]));W&&(He=He.transpose(1,0));const Ye=He.data;for(let We=0;We<Ye.length;++We)Ye[We]=Math.max(j,Ye[We]);if(te!==null&&ae!==null){const We=Math.min(Ye.length,Pe*ke);switch(ae){case"log":for(let pt=0;pt<We;++pt)Ye[pt]=Math.log(Ye[pt]);break;case"log10":for(let pt=0;pt<We;++pt)Ye[pt]=Math.log10(Ye[pt]);break;case"dB":if(te===1)w(Ye,Ae,ve,Ie);else if(te===2)y(Ye,Ae,ve,Ie);else throw new Error(`Cannot use log_mel option '${ae}' with power ${te}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ae}'`)}}return He}function O(L,Y,{periodic:q=!0,frame_length:X=null,center:re=!0}={}){const te=q?L+1:L;let he;switch(Y){case"boxcar":he=new Float64Array(te).fill(1);break;case"hann":case"hann_window":he=c(te);break;case"hamming":he=d(te);break;case"povey":he=c(te).map(ue=>Math.pow(ue,.85));break;default:throw new Error(`Unknown window type ${Y}.`)}if(q&&(he=he.subarray(0,L)),X===null)return he;if(L>X)throw new Error(`Length of the window (${L}) may not be larger than frame_length (${X})`);return he}function R(L,Y){let q=44;const X=new ArrayBuffer(q+L.length*4),re=new DataView(X);H(re,0,"RIFF"),re.setUint32(4,36+L.length*4,!0),H(re,8,"WAVE"),H(re,12,"fmt "),re.setUint32(16,16,!0),re.setUint16(20,3,!0),re.setUint16(22,1,!0),re.setUint32(24,Y,!0),re.setUint32(28,Y*4,!0),re.setUint16(32,4,!0),re.setUint16(34,32,!0),H(re,36,"data"),re.setUint32(40,L.length*4,!0);for(let te=0;te<L.length;++te,q+=4)re.setFloat32(q,L[te],!0);return X}function H(L,Y,q){for(let X=0;X<q.length;++X)L.setUint8(Y+X,q.charCodeAt(X))}class Q{constructor(Y,q){this.audio=Y,this.sampling_rate=q}toWav(){return R(this.audio,this.sampling_rate)}toBlob(){const Y=this.toWav();return new Blob([Y],{type:"audio/wav"})}async save(Y){let q;if(i.apis.IS_BROWSER_ENV){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");q=o.saveBlob}else if(i.apis.IS_FS_AVAILABLE)q=async(X,re)=>{let te=await re.arrayBuffer();a.writeFileSync(X,Buffer.from(te))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await q(Y,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>n,FEATURE_EXTRACTOR_NAME:()=>o,GENERATION_CONFIG_NAME:()=>u,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>i,PROCESSOR_NAME:()=>a});const s="https://github.com/huggingface/transformers.js/issues/new/choose",n="config.json",o="preprocessor_config.json",i=o,a="processor_config.json",l="chat_template.json",u="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>u,calculateReflectOffset:()=>_,count:()=>b,dispatchCallback:()=>s,escapeRegExp:()=>o,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>i,len:()=>k,mergeArrays:()=>c,pick:()=>E,pop:()=>p,product:()=>d,reverseDictionary:()=>n,saveBlob:()=>f});function s(g,C){g&&g(C)}function n(g){return Object.fromEntries(Object.entries(g).map(([C,x])=>[x,C]))}function o(g){return g.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(g){return g?.prototype?.__proto__?.constructor?.name==="TypedArray"}function a(g){return Number.isInteger(g)||typeof g=="bigint"}function l(g){return g==null||g===-1}function u(g){const C=[];let x=g;for(;Array.isArray(x);)C.push(x.length),x=x[0];return C}function p(g,C,x=void 0){const v=g[C];if(v!==void 0)return delete g[C],v;if(x===void 0)throw Error(`Key ${C} does not exist in object.`);return x}function c(...g){return Array.prototype.concat.apply([],g)}function d(...g){return g.reduce((C,x)=>C.flatMap(v=>x.map(w=>[v,w])))}function _(g,C){return Math.abs((g+C)%(2*C)-C)}function f(g,C){const x=URL.createObjectURL(C),v=document.createElement("a");v.href=x,v.download=g,v.click(),v.remove(),URL.revokeObjectURL(x)}function E(g,C){return Object.assign({},...C.map(x=>{if(g[x]!==void 0)return{[x]:g[x]}}))}function k(g){let C=0;for(const x of g)++C;return C}function b(g,C){let x=0;for(const v of g)v===C&&++x;return x}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>n,DictionarySplitter:()=>l,LRUCache:()=>u,PriorityQueue:()=>s,TokenLattice:()=>i});class s{constructor(c=(_,f)=>_>f,d=1/0){this._heap=[],this._comparator=c,this._maxSize=d}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...c){return this.extend(c)}extend(c){for(const d of c)if(this.size<this._maxSize)this._heap.push(d),this._siftUp();else{const _=this._smallest();this._comparator(d,this._heap[_])&&(this._heap[_]=d,this._siftUpFrom(_))}return this.size}pop(){const c=this.peek(),d=this.size-1;return d>0&&this._swap(0,d),this._heap.pop(),this._siftDown(),c}replace(c){const d=this.peek();return this._heap[0]=c,this._siftDown(),d}_parent(c){return(c+1>>>1)-1}_left(c){return(c<<1)+1}_right(c){return c+1<<1}_greater(c,d){return this._comparator(this._heap[c],this._heap[d])}_swap(c,d){const _=this._heap[c];this._heap[c]=this._heap[d],this._heap[d]=_}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(c){for(;c>0&&this._greater(c,this._parent(c));)this._swap(c,this._parent(c)),c=this._parent(c)}_siftDown(){let c=0;for(;this._left(c)<this.size&&this._greater(this._left(c),c)||this._right(c)<this.size&&this._greater(this._right(c),c);){const d=this._right(c)<this.size&&this._greater(this._right(c),this._left(c))?this._right(c):this._left(c);this._swap(c,d),c=d}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class n{constructor(){this.root=o.default()}extend(c){for(const d of c)this.push(d)}push(c){let d=this.root;for(const _ of c){let f=d.children.get(_);f===void 0&&(f=o.default(),d.children.set(_,f)),d=f}d.isLeaf=!0}*commonPrefixSearch(c){let d=this.root;if(d===void 0)return;let _="";for(const f of c){if(_+=f,d=d.children.get(f),d===void 0)return;d.isLeaf&&(yield _)}}}class o{constructor(c,d){this.isLeaf=c,this.children=d}static default(){return new o(!1,new Map)}}class i{constructor(c,d,_){this.chars=Array.from(c),this.len=this.chars.length,this.bosTokenId=d,this.eosTokenId=_,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const f=new a(this.bosTokenId,0,0,0,0),E=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(f.clone()),this.nodes.push(E.clone()),this.beginNodes[this.len].push(E),this.endNodes[0].push(f)}insert(c,d,_,f){const E=this.nodes.length,k=new a(f,E,c,d,_);this.beginNodes[c].push(k),this.endNodes[c+d].push(k),this.nodes.push(k)}viterbi(){const c=this.len;let d=0;for(;d<=c;){if(this.beginNodes[d].length==0)return[];for(let b of this.beginNodes[d]){b.prev=null;let g=0,C=null;for(let x of this.endNodes[d]){const v=x.backtraceScore+b.score;(C===null||v>g)&&(C=x.clone(),g=v)}if(C!==null)b.prev=C,b.backtraceScore=g;else return[]}++d}const _=[],E=this.beginNodes[c][0].prev;if(E===null)return[];let k=E.clone();for(;k.prev!==null;)_.push(k.clone()),k=k.clone().prev.clone();return _.reverse(),_}piece(c){return this.chars.slice(c.pos,c.pos+c.length).join("")}tokens(){return this.viterbi().map(d=>this.piece(d))}tokenIds(){return this.viterbi().map(d=>d.tokenId)}}class a{constructor(c,d,_,f,E){this.tokenId=c,this.nodeId=d,this.pos=_,this.length=f,this.score=E,this.prev=null,this.backtraceScore=0}clone(){const c=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return c.prev=this.prev,c.backtraceScore=this.backtraceScore,c}}class l{constructor(c){this.trie=this._buildTrie(c)}_buildTrie(c){var _;const d=Object.create(null);for(const f of c){let E=d;for(let k=0;k<f.length;++k)E=E[_=f[k]]??(E[_]=Object.create(null));E.end=f}return d}split(c){const d=[],_=c.length;let f=0,E=0;for(;E<_;){let k=this.trie,b=null,g=E;for(;g<_&&(k=k[c[g]]);)k.end&&(b=k.end),++g;b?(E>f&&d.push(c.slice(f,E)),d.push(b),E+=b.length,f=E):++E}return f<_&&d.push(c.slice(f)),d}}class u{constructor(c){this.capacity=c,this.cache=new Map}get(c){if(!this.cache.has(c))return;const d=this.cache.get(c);return this.cache.delete(c),this.cache.set(c,d),d}put(c,d){this.cache.has(c)&&this.cache.delete(c),this.cache.set(c,d),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>i,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>o});var s=t("./src/env.js"),n=t("./src/utils/devices.js");const o=function(){let u;return async function(){if(u===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)u=!1;else try{u=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{u=!1}return u}}(),i=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[n.DEVICE_TYPES.wasm]:i.q8}),l=Object.freeze({[i.fp32]:"",[i.fp16]:"_fp16",[i.int8]:"_int8",[i.uint8]:"_uint8",[i.q8]:"_quantized",[i.q4]:"_q4",[i.q4f16]:"_q4f16",[i.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let n=function(...o){return n._call(...o)};return Object.setPrototypeOf(n,new.target.prototype)}_call(...n){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>_,getModelFile:()=>g,getModelJSON:()=>C});var s=t("?7a2c"),n=t("?a42a"),o=t("./src/env.js"),i=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class u{constructor(y){if(this.filePath=y,this.headers=new Headers,this.exists=s.existsSync(y),this.exists){this.status=200,this.statusText="OK";let S=s.statSync(y);this.headers.set("content-length",S.size.toString()),this.updateContentType();const O=s.createReadStream(y);this.body=new ReadableStream({start(R){O.on("data",H=>R.enqueue(H)),O.on("end",()=>R.close()),O.on("error",H=>R.error(H))},cancel(){O.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const y=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[y]??"application/octet-stream")}clone(){let y=new u(this.filePath);return y.exists=this.exists,y.status=this.status,y.statusText=this.statusText,y.headers=new Headers(this.headers),y}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const y=await s.promises.readFile(this.filePath);return new Blob([y],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(w,y=null,S=null){let O;try{O=new URL(w)}catch{return!1}return!(y&&!y.includes(O.protocol)||S&&!S.includes(O.hostname))}const c=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function d(w){return!(!c.test(w)||w.includes("..")||w.includes("--")||w.endsWith(".git")||w.endsWith(".ipynb"))}async function _(w){if(o.env.useFS&&!p(w,["http:","https:","blob:"]))return new u(w instanceof URL?w.protocol==="file:"?w.pathname:w.toString():w);if(typeof process<"u"&&process?.release?.name==="node"){const y=!!ic?.TESTING_REMOTELY,S=o.env.version,O=new Headers;if(O.set("User-Agent",`transformers.js/${S}; is_ci/${y};`),p(w,["http:","https:"],["huggingface.co","hf.co"])){const H=ic?.HF_TOKEN??ic?.HF_ACCESS_TOKEN;H&&O.set("Authorization",`Bearer ${H}`)}return fetch(w,{headers:O})}else return fetch(w)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function E(w,y,S){if(!S)return null;const O=f[w]??`Error (${w}) occurred while trying to load file`;throw Error(`${O}: "${y}".`)}class k{constructor(y){this.path=y}async match(y){let S=n.join(this.path,y),O=new u(S);if(O.exists)return O}async put(y,S,O=void 0){let R=n.join(this.path,y);try{const H=S.headers.get("Content-Length"),Q=parseInt(H??"0");let L=0;await s.promises.mkdir(n.dirname(R),{recursive:!0});const Y=s.createWriteStream(R),q=S.body.getReader();for(;;){const{done:X,value:re}=await q.read();if(X)break;await new Promise((he,ue)=>{Y.write(re,N=>{if(N){ue(N);return}he()})}),L+=re.length;const te=Q?L/Q*100:0;O?.({progress:te,loaded:L,total:Q})}Y.close()}catch(H){try{await s.promises.unlink(R)}catch{}throw H}}}async function b(w,...y){for(let S of y)try{let O=await w.match(S);if(O)return O}catch{continue}}async function g(w,y,S=!0,O={},R=!1){if(!o.env.allowLocalModels){if(O.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!o.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,i.dispatchCallback)(O.progress_callback,{status:"initiate",name:w,file:y});let H;if(!H&&o.env.useCustomCache){if(!o.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!o.env.customCache.match||!o.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");H=o.env.customCache}if(!H&&o.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{H=await caches.open("transformers-cache")}catch(j){console.warn("An error occurred while opening the browser cache:",j)}}if(!H&&o.env.useFSCache){if(!o.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");H=new k(O.cache_dir??o.env.cacheDir)}const Q=O.revision??"main",L=v(w,y),Y=d(w),q=Y?v(o.env.localModelPath,L):L,X=v(o.env.remoteHost,o.env.remotePathTemplate.replaceAll("{model}",w).replaceAll("{revision}",encodeURIComponent(Q)),y);let re;const te=H instanceof k?Q==="main"?L:v(w,Q,y):X;let he=!1,ue;H&&(ue=await b(H,q,te));const N=ue!==void 0;if(ue===void 0){if(o.env.allowLocalModels)if(p(L,["http:","https:"])){if(O.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${L}.`);if(!o.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${L}.`)}else try{ue=await _(q),re=q}catch(ae){console.warn(`Unable to load from local path "${q}": "${ae}"`)}if(ue===void 0||ue.status===404){if(O.local_files_only||!o.env.allowRemoteModels){if(S)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${q}".`);return null}if(!Y)throw Error(`Local file missing at "${q}" and download aborted due to invalid model ID "${w}".`);if(ue=await _(X),ue.status!==200)return E(ue.status,X,S);re=te}he=H&&typeof Response<"u"&&ue instanceof Response&&ue.status===200}(0,i.dispatchCallback)(O.progress_callback,{status:"download",name:w,file:y});let A;if(!(o.apis.IS_NODE_ENV&&R)){let j;O.progress_callback?N&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(j=new Uint8Array(await ue.arrayBuffer()),(0,i.dispatchCallback)(O.progress_callback,{status:"progress",name:w,file:y,progress:100,loaded:j.length,total:j.length})):j=await x(ue,ae=>{(0,i.dispatchCallback)(O.progress_callback,{status:"progress",name:w,file:y,...ae})}):j=new Uint8Array(await ue.arrayBuffer()),A=j}if(he&&re&&await H.match(re)===void 0&&(A?await H.put(re,new Response(A,{headers:ue.headers})).catch(j=>{console.warn(`Unable to add response to browser cache: ${j}.`)}):await H.put(re,ue,O.progress_callback)),(0,i.dispatchCallback)(O.progress_callback,{status:"done",name:w,file:y}),A){if(!o.apis.IS_NODE_ENV&&R)throw new Error("Cannot return path in a browser environment.");return A}if(ue instanceof u)return ue.filePath;const K=await H?.match(re);if(K instanceof u)return K.filePath;if(K instanceof Response)return new Uint8Array(await K.arrayBuffer());if(typeof K=="string")return K;throw new Error("Unable to get model file path or buffer.")}async function C(w,y,S=!0,O={}){const R=await g(w,y,S,O,!1);if(R===null)return{};const Q=new TextDecoder("utf-8").decode(R);return JSON.parse(Q)}async function x(w,y){const S=w.headers.get("Content-Length");S===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let O=parseInt(S??"0"),R=new Uint8Array(O),H=0;const Q=w.body.getReader();async function L(){const{done:Y,value:q}=await Q.read();if(Y)return;const X=H+q.length;if(X>O){O=X;const te=new Uint8Array(O);te.set(R),R=te}R.set(q,H),H=X;const re=H/O*100;return y({progress:re,loaded:H,total:O}),L()}return await L(),R}function v(...w){return w=w.map((y,S)=>(S&&(y=y.replace(new RegExp("^/"),"")),S!==w.length-1&&(y=y.replace(new RegExp("/$"),"")),y)),w.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>f,load_image:()=>E});var s=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),o=t("./src/env.js"),i=t("./src/utils/tensor.js"),a=t("?2b25");let l,u,p;const c=o.apis.IS_BROWSER_ENV||o.apis.IS_WEBWORKER_ENV;if(c)l=(k,b)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(k,b)},p=self.createImageBitmap,u=self.ImageData;else if(a)p=async k=>{const g=(await k.metadata()).channels,{data:C,info:x}=await k.rotate().raw().toBuffer({resolveWithObject:!0}),v=new f(new Uint8ClampedArray(C),x.width,x.height,x.channels);return g!==void 0&&g!==x.channels&&v.convert(g),v};else throw new Error("Unable to load image processing library.");const d={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},_=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(b,g,C,x){this.data=b,this.width=g,this.height=C,this.channels=x}get size(){return[this.width,this.height]}static async read(b){if(b instanceof f)return b;if(typeof b=="string"||b instanceof URL)return await this.fromURL(b);if(b instanceof Blob)return await this.fromBlob(b);if(typeof HTMLCanvasElement<"u"&&b instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&b instanceof OffscreenCanvas)return this.fromCanvas(b);throw new Error(`Unsupported input type: ${typeof b}`)}static fromCanvas(b){if(!c)throw new Error("fromCanvas() is only supported in browser environments.");const C=b.getContext("2d").getImageData(0,0,b.width,b.height).data;return new f(C,b.width,b.height,4)}static async fromURL(b){const g=await(0,n.getFile)(b);if(g.status!==200)throw new Error(`Unable to read image from "${b}" (${g.status} ${g.statusText})`);const C=await g.blob();return this.fromBlob(C)}static async fromBlob(b){if(c){const g=await p(b),C=l(g.width,g.height).getContext("2d");return C.drawImage(g,0,0),new this(C.getImageData(0,0,g.width,g.height).data,g.width,g.height,4)}else{const g=a(await b.arrayBuffer());return await p(g)}}static fromTensor(b,g="CHW"){if(b.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${b.dims.length} dimensions.`);if(g==="CHW")b=b.transpose(1,2,0);else if(g!=="HWC")throw new Error(`Unsupported channel format: ${g}`);if(!(b.data instanceof Uint8ClampedArray||b.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${b.type}`);switch(b.dims[2]){case 1:case 2:case 3:case 4:return new f(b.data,b.dims[1],b.dims[0],b.dims[2]);default:throw new Error(`Unsupported number of channels: ${b.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const b=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let g=0,C=0;g<this.data.length;g+=this.channels){const x=this.data[g],v=this.data[g+1],w=this.data[g+2];b[C++]=Math.round(.2989*x+.587*v+.114*w)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(b,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const b=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let g=0,C=0;g<this.data.length;++g)b[C++]=this.data[g],b[C++]=this.data[g],b[C++]=this.data[g];break;case 4:for(let g=0,C=0;g<this.data.length;g+=4)b[C++]=this.data[g],b[C++]=this.data[g+1],b[C++]=this.data[g+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(b,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const b=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let g=0,C=0;g<this.data.length;++g)b[C++]=this.data[g],b[C++]=this.data[g],b[C++]=this.data[g],b[C++]=255;break;case 3:for(let g=0,C=0;g<this.data.length;g+=3)b[C++]=this.data[g],b[C++]=this.data[g+1],b[C++]=this.data[g+2],b[C++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(b,this.width,this.height,4)}putAlpha(b){if(b.width!==this.width||b.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${b.width}x${b.height}`);if(b.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${b.channels}`);const g=this.data,C=b.data,x=this.width*this.height;if(this.channels===3){const v=new Uint8ClampedArray(x*4);for(let w=0,y=0,S=0;w<x;++w)v[S++]=g[y++],v[S++]=g[y++],v[S++]=g[y++],v[S++]=C[w];return this._update(v,this.width,this.height,4)}else if(this.channels===4){for(let v=0;v<x;++v)g[4*v+3]=C[v];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(b,g,{resample:C=2}={}){if(this.width===b&&this.height===g)return this;let x=d[C]??C;const v=(0,s.isNullishDimension)(b),w=(0,s.isNullishDimension)(g);if(v&&w)return this;if(v?b=g/this.height*this.width:w&&(g=b/this.width*this.height),c){const y=this.channels,S=this.toCanvas(),O=l(b,g).getContext("2d");return O.drawImage(S,0,0,b,g),new f(O.getImageData(0,0,b,g).data,b,g,4).convert(y)}else{let y=this.toSharp();switch(x){case"box":case"hamming":(x==="box"||x==="hamming")&&(console.warn(`Resampling method ${x} is not yet supported. Using bilinear instead.`),x="bilinear");case"nearest":case"bilinear":case"bicubic":y=y.affine([b/this.width,0,0,g/this.height],{interpolator:x});break;case"lanczos":y=y.resize({width:b,height:g,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${x} is not supported.`)}return await p(y)}}async pad([b,g,C,x]){if(b=Math.max(b,0),g=Math.max(g,0),C=Math.max(C,0),x=Math.max(x,0),b===0&&g===0&&C===0&&x===0)return this;if(c){const v=this.channels,w=this.toCanvas(),y=this.width+b+g,S=this.height+C+x,O=l(y,S).getContext("2d");return O.drawImage(w,0,0,this.width,this.height,b,C,this.width,this.height),new f(O.getImageData(0,0,y,S).data,y,S,4).convert(v)}else{const v=this.toSharp().extend({left:b,right:g,top:C,bottom:x});return await p(v)}}async crop([b,g,C,x]){if(b=Math.max(b,0),g=Math.max(g,0),C=Math.min(C,this.width-1),x=Math.min(x,this.height-1),b===0&&g===0&&C===this.width-1&&x===this.height-1)return this;const v=C-b+1,w=x-g+1;if(c){const y=this.channels,S=this.toCanvas(),O=l(v,w).getContext("2d");return O.drawImage(S,b,g,v,w,0,0,v,w),new f(O.getImageData(0,0,v,w).data,v,w,4).convert(y)}else{const y=this.toSharp().extract({left:b,top:g,width:v,height:w});return await p(y)}}async center_crop(b,g){if(this.width===b&&this.height===g)return this;const C=(this.width-b)/2,x=(this.height-g)/2;if(c){const v=this.channels,w=this.toCanvas(),y=l(b,g).getContext("2d");let S=0,O=0,R=0,H=0;return C>=0?S=C:R=-C,x>=0?O=x:H=-x,y.drawImage(w,S,O,b,g,R,H,b,g),new f(y.getImageData(0,0,b,g).data,b,g,4).convert(v)}else{let v=this.toSharp();if(C>=0&&x>=0)v=v.extract({left:Math.floor(C),top:Math.floor(x),width:b,height:g});else if(C<=0&&x<=0){const w=Math.floor(-x),y=Math.floor(-C);v=v.extend({top:w,left:y,right:b-this.width-y,bottom:g-this.height-w})}else{let w=[0,0],y=0;x<0?(w[0]=Math.floor(-x),w[1]=g-this.height-w[0]):y=Math.floor(x);let S=[0,0],O=0;C<0?(S[0]=Math.floor(-C),S[1]=b-this.width-S[0]):O=Math.floor(C),v=v.extend({top:w[0],bottom:w[1],left:S[0],right:S[1]}).extract({left:O,top:y,width:b,height:g})}return await p(v)}}async toBlob(b="image/png",g=1){if(!c)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:b,quality:g})}toTensor(b="CHW"){let g=new i.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(b!=="HWC")if(b==="CHW")g=g.permute(2,0,1);else throw new Error(`Unsupported channel format: ${b}`);return g}toCanvas(){if(!c)throw new Error("toCanvas() is only supported in browser environments.");const b=this.clone().rgba(),g=l(b.width,b.height),C=new u(b.data,b.width,b.height);return g.getContext("2d").putImageData(C,0,0),g}split(){const{data:b,width:g,height:C,channels:x}=this,v=b.constructor,w=b.length/x,y=Array.from({length:x},()=>new v(w));for(let S=0;S<w;++S){const O=x*S;for(let R=0;R<x;++R)y[R][S]=b[O+R]}return y.map(S=>new f(S,g,C,1))}_update(b,g,C,x=null){return this.data=b,this.width=g,this.height=C,x!==null&&(this.channels=x),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(b){if(this.channels===b)return this;switch(b){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(b){if(c){if(o.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const g=b.split(".").pop().toLowerCase(),C=_.get(g)??"image/png",x=await this.toBlob(C);(0,s.saveBlob)(b,x)}else{if(o.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(b);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(c)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const E=f.read.bind(f)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>E,bankers_round:()=>g,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>C,interpolate_data:()=>s,log_softmax:()=>i,magnitude:()=>u,max:()=>c,medianFilter:()=>k,min:()=>p,permute_data:()=>n,round:()=>b,softmax:()=>o});function s(x,[v,w,y],[S,O],R="bilinear",H=!1){const Q=O/y,L=S/w,Y=new x.constructor(S*O*v),q=w*y,X=S*O;for(let re=0;re<S;++re)for(let te=0;te<O;++te){const he=re*O+te,ue=(te+.5)/Q-.5,N=(re+.5)/L-.5;let A=Math.floor(ue),K=Math.floor(N);const j=Math.min(A+1,y-1),ae=Math.min(K+1,w-1);A=Math.max(A,0),K=Math.max(K,0);const Ae=ue-A,ve=N-K,Ie=(1-Ae)*(1-ve),Ve=Ae*(1-ve),de=(1-Ae)*ve,G=Ae*ve,le=K*y,W=ae*y,we=le+A,Me=le+j,Ce=W+A,Pe=W+j;for(let Se=0;Se<v;++Se){const Fe=Se*q;Y[Se*X+he]=Ie*x[Fe+we]+Ve*x[Fe+Me]+de*x[Fe+Ce]+G*x[Fe+Pe]}}return Y}function n(x,v,w){const y=new Array(w.length),S=new Array(w.length);for(let H=w.length-1,Q=1;H>=0;--H)S[H]=Q,y[H]=v[w[H]],Q*=y[H];const O=w.map((H,Q)=>S[w.indexOf(Q)]),R=new x.constructor(x.length);for(let H=0;H<x.length;++H){let Q=0;for(let L=v.length-1,Y=H;L>=0;--L)Q+=Y%v[L]*O[L],Y=Math.floor(Y/v[L]);R[Q]=x[H]}return[R,y]}function o(x){const v=c(x)[0],w=x.map(O=>Math.exp(O-v)),y=w.reduce((O,R)=>O+R,0);return w.map(O=>O/y)}function i(x){const v=c(x)[0];let w=0;for(let O=0;O<x.length;++O)w+=Math.exp(x[O]-v);const y=Math.log(w);return x.map(O=>O-v-y)}function a(x,v){let w=0;for(let y=0;y<x.length;++y)w+=x[y]*v[y];return w}function l(x,v){const w=a(x,v),y=u(x),S=u(v);return w/(y*S)}function u(x){return Math.sqrt(x.reduce((v,w)=>v+w*w,0))}function p(x){if(x.length===0)throw Error("Array must not be empty");let v=x[0],w=0;for(let y=1;y<x.length;++y)x[y]<v&&(v=x[y],w=y);return[v,w]}function c(x){if(x.length===0)throw Error("Array must not be empty");let v=x[0],w=0;for(let y=1;y<x.length;++y)x[y]>v&&(v=x[y],w=y);return[v,w]}function d(x){return x>0&&(x&x-1)===0}class _{constructor(v){if(this.size=v|0,this.size<=1||!d(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=v<<1,this.table=new Float64Array(this.size*2);for(let y=0;y<this.table.length;y+=2){const S=Math.PI*y/this.size;this.table[y]=Math.cos(S),this.table[y+1]=-Math.sin(S)}let w=0;for(let y=1;this.size>y;y<<=1)++w;this._width=w%2===0?w-1:w,this._bitrev=new Int32Array(1<<this._width);for(let y=0;y<this._bitrev.length;++y){this._bitrev[y]=0;for(let S=0;S<this._width;S+=2){const O=this._width-S-2;this._bitrev[y]|=(y>>>S&3)<<O}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(v,w){const y=w||new Array(v.length>>>1);for(let S=0;S<v.length;S+=2)y[S>>>1]=v[S];return y}toComplexArray(v,w){const y=w||this.createComplexArray();for(let S=0;S<y.length;S+=2)y[S]=v[S>>>1],y[S+1]=0;return y}transform(v,w){if(v===w)throw new Error("Input and output buffers must be different");this._transform4(v,w,1)}realTransform(v,w){if(v===w)throw new Error("Input and output buffers must be different");this._realTransform4(v,w,1)}inverseTransform(v,w){if(v===w)throw new Error("Input and output buffers must be different");this._transform4(v,w,-1);for(let y=0;y<v.length;++y)v[y]/=this.size}_transform4(v,w,y){const S=this._csize;let R=1<<this._width,H=S/R<<1,Q,L;const Y=this._bitrev;if(H===4)for(Q=0,L=0;Q<S;Q+=H,++L){const X=Y[L];this._singleTransform2(w,v,Q,X,R)}else for(Q=0,L=0;Q<S;Q+=H,++L){const X=Y[L];this._singleTransform4(w,v,Q,X,R,y)}const q=this.table;for(R>>=2;R>=2;R>>=2){H=S/R<<1;const X=H>>>2;for(Q=0;Q<S;Q+=H){const re=Q+X-1;for(let te=Q,he=0;te<re;te+=2,he+=R){const ue=te,N=ue+X,A=N+X,K=A+X,j=v[ue],ae=v[ue+1],Ae=v[N],ve=v[N+1],Ie=v[A],Ve=v[A+1],de=v[K],G=v[K+1],le=q[he],W=y*q[he+1],we=Ae*le-ve*W,Me=Ae*W+ve*le,Ce=q[2*he],Pe=y*q[2*he+1],Se=Ie*Ce-Ve*Pe,Fe=Ie*Pe+Ve*Ce,je=q[3*he],Ke=y*q[3*he+1],Ue=de*je-G*Ke,ke=de*Ke+G*je,He=j+Se,Ye=ae+Fe,We=j-Se,pt=ae-Fe,at=we+Ue,$e=Me+ke,nt=y*(we-Ue),Et=y*(Me-ke);v[ue]=He+at,v[ue+1]=Ye+$e,v[N]=We+Et,v[N+1]=pt-nt,v[A]=He-at,v[A+1]=Ye-$e,v[K]=We-Et,v[K+1]=pt+nt}}}}_singleTransform2(v,w,y,S,O){const R=v[S],H=v[S+1],Q=v[S+O],L=v[S+O+1];w[y]=R+Q,w[y+1]=H+L,w[y+2]=R-Q,w[y+3]=H-L}_singleTransform4(v,w,y,S,O,R){const H=O*2,Q=O*3,L=v[S],Y=v[S+1],q=v[S+O],X=v[S+O+1],re=v[S+H],te=v[S+H+1],he=v[S+Q],ue=v[S+Q+1],N=L+re,A=Y+te,K=L-re,j=Y-te,ae=q+he,Ae=X+ue,ve=R*(q-he),Ie=R*(X-ue);w[y]=N+ae,w[y+1]=A+Ae,w[y+2]=K+Ie,w[y+3]=j-ve,w[y+4]=N-ae,w[y+5]=A-Ae,w[y+6]=K-Ie,w[y+7]=j+ve}_realTransform4(v,w,y){const S=this._csize;let R=1<<this._width,H=S/R<<1,Q,L;const Y=this._bitrev;if(H===4)for(Q=0,L=0;Q<S;Q+=H,++L){const re=Y[L];this._singleRealTransform2(w,v,Q,re>>>1,R>>>1)}else for(Q=0,L=0;Q<S;Q+=H,++L){const re=Y[L];this._singleRealTransform4(w,v,Q,re>>>1,R>>>1,y)}const q=this.table;for(R>>=2;R>=2;R>>=2){H=S/R<<1;const re=H>>>1,te=re>>>1,he=te>>>1;for(Q=0;Q<S;Q+=H)for(let ue=0,N=0;ue<=he;ue+=2,N+=R){const A=Q+ue,K=A+te,j=K+te,ae=j+te,Ae=v[A],ve=v[A+1],Ie=v[K],Ve=v[K+1],de=v[j],G=v[j+1],le=v[ae],W=v[ae+1],we=Ae,Me=ve,Ce=q[N],Pe=y*q[N+1],Se=Ie*Ce-Ve*Pe,Fe=Ie*Pe+Ve*Ce,je=q[2*N],Ke=y*q[2*N+1],Ue=de*je-G*Ke,ke=de*Ke+G*je,He=q[3*N],Ye=y*q[3*N+1],We=le*He-W*Ye,pt=le*Ye+W*He,at=we+Ue,$e=Me+ke,nt=we-Ue,Et=Me-ke,Qt=Se+We,Ft=Fe+pt,mr=y*(Se-We),Er=y*(Fe-pt);if(v[A]=at+Qt,v[A+1]=$e+Ft,v[K]=nt+Er,v[K+1]=Et-mr,ue===0){v[j]=at-Qt,v[j+1]=$e-Ft;continue}if(ue===he)continue;const wt=Q+te-ue,ts=Q+re-ue;v[wt]=nt-y*Er,v[wt+1]=-Et-y*mr,v[ts]=at-y*Qt,v[ts+1]=-$e+y*Ft}}const X=S>>>1;for(let re=2;re<X;re+=2)v[S-re]=v[re],v[S-re+1]=-v[re+1]}_singleRealTransform2(v,w,y,S,O){const R=v[S],H=v[S+O];w[y]=R+H,w[y+1]=0,w[y+2]=R-H,w[y+3]=0}_singleRealTransform4(v,w,y,S,O,R){const H=O*2,Q=O*3,L=v[S],Y=v[S+O],q=v[S+H],X=v[S+Q],re=L+q,te=L-q,he=Y+X,ue=R*(Y-X);w[y]=re+he,w[y+1]=0,w[y+2]=te,w[y+3]=-ue,w[y+4]=re-he,w[y+5]=0,w[y+6]=te,w[y+7]=ue}}class f{constructor(v){const w=2*(v-1),y=2*(2*v-1),S=2**Math.ceil(Math.log2(y));this.bufferSize=S,this._a=w;const O=new Float64Array(y),R=new Float64Array(S);this._chirpBuffer=new Float64Array(S),this._buffer1=new Float64Array(S),this._buffer2=new Float64Array(S),this._outBuffer1=new Float64Array(S),this._outBuffer2=new Float64Array(S);const H=-2*Math.PI/v,Q=Math.cos(H),L=Math.sin(H);for(let Y=0;Y<y>>1;++Y){const q=(Y+1-v)**2/2,X=Math.sqrt(Q**2+L**2)**q,re=q*Math.atan2(L,Q),te=2*Y;O[te]=X*Math.cos(re),O[te+1]=X*Math.sin(re),R[te]=O[te],R[te+1]=-O[te+1]}this._slicedChirpBuffer=O.subarray(w,y),this._f=new _(S>>1),this._f.transform(this._chirpBuffer,R)}_transform(v,w,y){const S=this._buffer1,O=this._buffer2,R=this._outBuffer1,H=this._outBuffer2,Q=this._chirpBuffer,L=this._slicedChirpBuffer,Y=this._a;if(y)for(let q=0;q<L.length;q+=2){const X=q+1,re=q>>1,te=w[re];S[q]=te*L[q],S[X]=te*L[X]}else for(let q=0;q<L.length;q+=2){const X=q+1;S[q]=w[q]*L[q]-w[X]*L[X],S[X]=w[q]*L[X]+w[X]*L[q]}this._f.transform(R,S);for(let q=0;q<Q.length;q+=2){const X=q+1;O[q]=R[q]*Q[q]-R[X]*Q[X],O[X]=R[q]*Q[X]+R[X]*Q[q]}this._f.inverseTransform(H,O);for(let q=0;q<H.length;q+=2){const X=H[q+Y],re=H[q+Y+1],te=L[q],he=L[q+1];v[q]=X*te-re*he,v[q+1]=X*he+re*te}}transform(v,w){this._transform(v,w,!1)}realTransform(v,w){this._transform(v,w,!0)}}class E{constructor(v){this.fft_length=v,this.isPowerOfTwo=d(v),this.isPowerOfTwo?(this.fft=new _(v),this.outputBufferSize=2*v):(this.fft=new f(v),this.outputBufferSize=this.fft.bufferSize)}realTransform(v,w){this.fft.realTransform(v,w)}transform(v,w){this.fft.transform(v,w)}}function k(x,v){if(v%2===0||v<=0)throw new Error("Window size must be a positive odd number");const w=new x.constructor(x.length),y=new x.constructor(v),S=Math.floor(v/2);for(let O=0;O<x.length;++O){let R=0;for(let H=-S;H<=S;++H){let Q=O+H;Q<0?Q=Math.abs(Q):Q>=x.length&&(Q=2*(x.length-1)-Q),y[R++]=x[Q]}y.sort(),w[O]=y[S]}return w}function b(x,v){const w=Math.pow(10,v);return Math.round(x*w)/w}function g(x){const v=Math.round(x);return Math.abs(x)%1===.5?v%2===0?v:v-1:v}function C(x){const v=x.length,w=x[0].length,y=[v+1,w+1],S=Array.from({length:y[0]},()=>Array(y[1]).fill(1/0));S[0][0]=0;const O=Array.from({length:y[0]},()=>Array(y[1]).fill(-1));for(let Y=1;Y<y[1];++Y)for(let q=1;q<y[0];++q){const X=S[q-1][Y-1],re=S[q-1][Y],te=S[q][Y-1];let he,ue;X<re&&X<te?(he=X,ue=0):re<X&&re<te?(he=re,ue=1):(he=te,ue=2),S[q][Y]=x[q-1][Y-1]+he,O[q][Y]=ue}for(let Y=0;Y<y[1];++Y)O[0][Y]=2;for(let Y=0;Y<y[0];++Y)O[Y][0]=1;let R=v,H=w,Q=[],L=[];for(;R>0||H>0;)switch(Q.push(R-1),L.push(H-1),O[R][H]){case 0:--R,--H;break;case 1:--R;break;case 2:--H;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${R}, ${H}]. Please file a bug report.`)}return Q.reverse(),L.reverse(),[Q,L]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>i,Tensor:()=>a,cat:()=>w,full:()=>L,full_like:()=>Y,interpolate:()=>p,interpolate_4d:()=>c,layer_norm:()=>g,matmul:()=>d,mean:()=>R,mean_pooling:()=>b,ones:()=>q,ones_like:()=>X,permute:()=>u,quantize_embeddings:()=>ue,rand:()=>he,rfft:()=>_,slice:()=>k,stack:()=>y,std_mean:()=>O,topk:()=>f,zeros:()=>re,zeros_like:()=>te});var s=t("./src/utils/maths.js"),n=t("./src/backends/onnx.js"),o=t("./src/ops/registry.js");const i=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{constructor(...A){Z(this,"ort_tensor");return(0,n.isONNXTensor)(A[0])?this.ort_tensor=A[0]:this.ort_tensor=new n.Tensor(A[0],A[1],A[2]),new Proxy(this,{get:(K,j)=>{if(typeof j=="string"){let ae=Number(j);if(Number.isInteger(ae))return K._getitem(ae)}return K[j]},set:(K,j,ae)=>K[j]=ae})}get dims(){return this.ort_tensor.dims}set dims(A){this.ort_tensor.dims=A}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[A,...K]=this.dims;if(K.length>0){const j=K.reduce((ae,Ae)=>ae*Ae);for(let ae=0;ae<A;++ae)yield this._subarray(ae,j,K)}else yield*this.data}_getitem(A){const[K,...j]=this.dims;if(A=v(A,K),j.length>0){const ae=j.reduce((Ae,ve)=>Ae*ve);return this._subarray(A,ae,j)}else return new a(this.type,[this.data[A]],j)}indexOf(A){const K=this.data;for(let j=0;j<K.length;++j)if(K[j]==A)return j;return-1}_subarray(A,K,j){const ae=A*K,Ae=(A+1)*K,ve="subarray"in this.data?this.data.subarray(ae,Ae):this.data.slice(ae,Ae);return new a(this.type,ve,j)}item(){const A=this.data;if(A.length!==1)throw new Error(`a Tensor with ${A.length} elements cannot be converted to Scalar`);return A[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const A=this.data;for(let K=0;K<A.length;++K)A[K]=1/(1+Math.exp(-A[K]));return this}map(A){return this.clone().map_(A)}map_(A){const K=this.data;for(let j=0;j<K.length;++j)K[j]=A(K[j],j,K);return this}mul(A){return this.clone().mul_(A)}mul_(A){const K=this.data;for(let j=0;j<K.length;++j)K[j]*=A;return this}div(A){return this.clone().div_(A)}div_(A){const K=this.data;for(let j=0;j<K.length;++j)K[j]/=A;return this}add(A){return this.clone().add_(A)}add_(A){const K=this.data;for(let j=0;j<K.length;++j)K[j]+=A;return this}sub(A){return this.clone().sub_(A)}sub_(A){const K=this.data;for(let j=0;j<K.length;++j)K[j]-=A;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...A){const K=[],j=[];for(let de=0;de<this.dims.length;++de){let G=A[de];if(G==null)j.push([0,this.dims[de]]),K.push(this.dims[de]);else if(typeof G=="number")G=v(G,this.dims[de],de),j.push([G,G+1]);else if(Array.isArray(G)&&G.length===2){let[le,W]=G;if(le=le===null?0:v(le,this.dims[de],de,!1),W=W===null?this.dims[de]:v(W,this.dims[de],de,!1),le>W)throw new Error(`Invalid slice: ${G}`);const we=[Math.max(le,0),Math.min(W,this.dims[de])];j.push(we),K.push(we[1]-we[0])}else throw new Error(`Invalid slice: ${G}`)}const ae=j.map(([de,G])=>G-de),Ae=ae.reduce((de,G)=>de*G),ve=this.data,Ie=new ve.constructor(Ae),Ve=this.stride();for(let de=0;de<Ae;++de){let G=0;for(let le=ae.length-1,W=de;le>=0;--le){const we=ae[le];G+=(W%we+j[le][0])*Ve[le],W=Math.floor(W/we)}Ie[de]=ve[G]}return new a(this.type,Ie,K)}permute(...A){return u(this,A)}transpose(...A){return this.permute(...A)}sum(A=null,K=!1){return this.norm(1,A,K)}norm(A="fro",K=null,j=!1){if(A==="fro")A=2;else if(typeof A=="string")throw Error(`Unsupported norm: ${A}`);const ae=this.data,Ae=(de,G)=>de+G**A;if(K===null){const de=ae.reduce(Ae,0)**(1/A);return new a(this.type,[de],[])}const[ve,Ie,Ve]=S(Ae,this,K,j);if(A!==1)for(let de=0;de<Ie.length;++de)Ie[de]=Ie[de]**(1/A);return new a(ve,Ie,Ve)}normalize_(A=2,K=1){K=v(K,this.dims.length);const j=this.norm(A,K,!0),ae=this.data,Ae=j.data;for(let ve=0;ve<ae.length;++ve){let Ie=0;for(let Ve=this.dims.length-1,de=ve,G=1;Ve>=0;--Ve){const le=this.dims[Ve];if(Ve!==K){const W=de%le;Ie+=W*G,G*=this.dims[Ve]}de=Math.floor(de/le)}ae[ve]/=Ae[Ie]}return this}normalize(A=2,K=1){return this.clone().normalize_(A,K)}stride(){return H(this.dims)}squeeze(A=null){return new a(this.type,this.data,C(this.dims,A))}squeeze_(A=null){return this.dims=C(this.dims,A),this}unsqueeze(A=null){return new a(this.type,this.data,x(this.dims,A))}unsqueeze_(A=null){return this.dims=x(this.dims,A),this}flatten_(A=0,K=-1){K=(K+this.dims.length)%this.dims.length;let j=this.dims.slice(0,A),ae=this.dims.slice(A,K+1),Ae=this.dims.slice(K+1);return this.dims=[...j,ae.reduce((ve,Ie)=>ve*Ie,1),...Ae],this}flatten(A=0,K=-1){return this.clone().flatten_(A,K)}view(...A){let K=-1;for(let ae=0;ae<A.length;++ae)if(A[ae]===-1){if(K!==-1)throw new Error("Only one dimension can be inferred");K=ae}const j=this.data;if(K!==-1){const ae=A.reduce((Ae,ve,Ie)=>Ie!==K?Ae*ve:Ae,1);A[K]=j.length/ae}return new a(this.type,j,A)}neg_(){const A=this.data;for(let K=0;K<A.length;++K)A[K]=-A[K];return this}neg(){return this.clone().neg_()}gt(A){const K=new Uint8Array(this.data.length),j=this.data;for(let ae=0;ae<j.length;++ae)K[ae]=j[ae]>A?1:0;return new a("bool",K,this.dims)}lt(A){const K=new Uint8Array(this.data.length),j=this.data;for(let ae=0;ae<j.length;++ae)K[ae]=j[ae]<A?1:0;return new a("bool",K,this.dims)}clamp_(A,K){const j=this.data;for(let ae=0;ae<j.length;++ae)j[ae]=Math.min(Math.max(j[ae],A),K);return this}clamp(A,K){return this.clone().clamp_(A,K)}round_(){const A=this.data;for(let K=0;K<A.length;++K)A[K]=Math.round(A[K]);return this}round(){return this.clone().round_()}mean(A=null,K=!1){return R(this,A,K)}min(A=null,K=!1){if(A===null){const ve=(0,s.min)(this.data)[0];return new a(this.type,[ve],[])}const[j,ae,Ae]=S((ve,Ie)=>Math.min(ve,Ie),this,A,K,1/0);return new a(j,ae,Ae)}max(A=null,K=!1){if(A===null){const ve=(0,s.max)(this.data)[0];return new a(this.type,[ve],[])}const[j,ae,Ae]=S((ve,Ie)=>Math.max(ve,Ie),this,A,K,-1/0);return new a(j,ae,Ae)}argmin(A=null,K=!1){if(A!==null)throw new Error("`dim !== null` not yet implemented.");const j=(0,s.min)(this.data)[1];return new a("int64",[BigInt(j)],[])}argmax(A=null,K=!1){if(A!==null)throw new Error("`dim !== null` not yet implemented.");const j=(0,s.max)(this.data)[1];return new a("int64",[BigInt(j)],[])}to(A){if(this.type===A)return this;if(!i.hasOwnProperty(A))throw new Error(`Unsupported type: ${A}`);let K;const j=["int64","uint64"].includes(this.type),ae=["int64","uint64"].includes(A);return j&&!ae?K=Number:!j&&ae&&(K=BigInt),new a(A,i[A].from(this.data,K),this.dims)}}function l(N,A){const K=N.length,j=A.reduce((Ae,ve)=>Ae*ve);if(K!==j)throw Error(`cannot reshape array of size ${K} into shape (${A})`);let ae=N;for(let Ae=A.length-1;Ae>=0;Ae--)ae=ae.reduce((ve,Ie)=>{let Ve=ve[ve.length-1];return Ve.length<A[Ae]?Ve.push(Ie):ve.push([Ie]),ve},[[]]);return ae[0]}function u(N,A){const[K,j]=(0,s.permute_data)(N.data,N.dims,A);return new a(N.type,K,j)}function p(N,[A,K],j="bilinear",ae=!1){const Ae=N.dims.at(-3)??1,ve=N.dims.at(-2),Ie=N.dims.at(-1);let Ve=(0,s.interpolate_data)(N.data,[Ae,ve,Ie],[A,K],j,ae);return new a(N.type,Ve,[Ae,A,K])}async function c(N,{size:A=null,mode:K="bilinear"}={}){if(N.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!A)throw new Error("`interpolate_4d` requires a `size` argument.");let j;if(A.length===2)j=[...N.dims.slice(0,2),...A];else if(A.length===3)j=[N.dims[0],...A];else if(A.length===4)j=A;else throw new Error("`size` must be of length 2, 3, or 4.");let ae;if(K==="nearest")ae=await o.TensorOpRegistry.nearest_interpolate_4d;else if(K==="bilinear")ae=await o.TensorOpRegistry.bilinear_interpolate_4d;else if(K==="bicubic")ae=await o.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${K}`);const Ae=new a("int64",new BigInt64Array(j.map(BigInt)),[j.length]);return await ae({x:N,s:Ae})}async function d(N,A){return await(await o.TensorOpRegistry.matmul)({a:N,b:A})}async function _(N,A){return await(await o.TensorOpRegistry.rfft)({x:N,a:A})}async function f(N,A){const K=await o.TensorOpRegistry.top_k;return A==null?A=N.dims.at(-1):A=Math.min(A,N.dims.at(-1)),await K({x:N,k:new a("int64",[BigInt(A)],[1])})}const E=N=>new a("int64",N,[N.length]);async function k(N,A,K,j,ae){return await(await o.TensorOpRegistry.slice)({x:N,s:E(A),e:E(K),a:E(j),t:E(ae??new Array(j.length).fill(1))})}function b(N,A){const K=N.data,j=A.data,ae=[N.dims[0],N.dims[2]],Ae=new K.constructor(ae[0]*ae[1]),[ve,Ie,Ve]=N.dims;let de=0;for(let G=0;G<ve;++G){const le=G*Ve*Ie;for(let W=0;W<Ve;++W){let we=0,Me=0;const Ce=G*Ie,Pe=le+W;for(let Fe=0;Fe<Ie;++Fe){const je=Number(j[Ce+Fe]);Me+=je,we+=K[Pe+Fe*Ve]*je}const Se=we/Me;Ae[de++]=Se}}return new a(N.type,Ae,ae)}function g(N,A,{eps:K=1e-5}={}){if(N.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[j,ae]=N.dims;if(A.length!==1&&A[0]!==ae)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[Ae,ve]=O(N,1,0,!0),Ie=Ae.data,Ve=ve.data,de=N.data,G=new de.constructor(de.length);for(let le=0;le<j;++le){const W=le*ae;for(let we=0;we<ae;++we){const Me=W+we;G[Me]=(de[Me]-Ve[le])/(Ie[le]+K)}}return new a(N.type,G,N.dims)}function C(N,A){return N=N.slice(),A===null?N=N.filter(K=>K!==1):typeof A=="number"?N[A]===1&&N.splice(A,1):Array.isArray(A)&&(N=N.filter((K,j)=>K!==1||!A.includes(j))),N}function x(N,A){return A=v(A,N.length+1),N=N.slice(),N.splice(A,0,1),N}function v(N,A,K=null,j=!0){if(N<-A||N>=A){if(j)throw new Error(`IndexError: index ${N} is out of bounds for dimension${K===null?"":" "+K} with size ${A}`);return N<-A?0:A}return N<0&&(N=(N%A+A)%A),N}function w(N,A=0){A=v(A,N[0].dims.length);const K=N[0].dims.slice();K[A]=N.reduce((ve,Ie)=>ve+Ie.dims[A],0);const j=K.reduce((ve,Ie)=>ve*Ie,1),ae=new N[0].data.constructor(j),Ae=N[0].type;if(A===0){let ve=0;for(const Ie of N){const Ve=Ie.data;ae.set(Ve,ve),ve+=Ve.length}}else{let ve=0;for(let Ie=0;Ie<N.length;++Ie){const{data:Ve,dims:de}=N[Ie];for(let G=0;G<Ve.length;++G){let le=0;for(let W=de.length-1,we=G,Me=1;W>=0;--W){const Ce=de[W];let Pe=we%Ce;W===A&&(Pe+=ve),le+=Pe*Me,Me*=K[W],we=Math.floor(we/Ce)}ae[le]=Ve[G]}ve+=de[A]}}return new a(Ae,ae,K)}function y(N,A=0){return w(N.map(K=>K.unsqueeze(A)),A)}function S(N,A,K=null,j=!1,ae=null){const Ae=A.data,ve=A.dims;K=v(K,ve.length);const Ie=ve.slice();Ie[K]=1;const Ve=new Ae.constructor(Ae.length/ve[K]);ae!==null&&Ve.fill(ae);for(let de=0;de<Ae.length;++de){let G=0;for(let le=ve.length-1,W=de,we=1;le>=0;--le){const Me=ve[le];if(le!==K){const Ce=W%Me;G+=Ce*we,we*=Ie[le]}W=Math.floor(W/Me)}Ve[G]=N(Ve[G],Ae[de],de,G)}return j||Ie.splice(K,1),[A.type,Ve,Ie]}function O(N,A=null,K=1,j=!1){const ae=N.data,Ae=N.dims;if(A===null){const we=ae.reduce((Se,Fe)=>Se+Fe,0)/ae.length,Me=Math.sqrt(ae.reduce((Se,Fe)=>Se+(Fe-we)**2,0)/(ae.length-K)),Ce=new a(N.type,[we],[]);return[new a(N.type,[Me],[]),Ce]}A=v(A,Ae.length);const ve=R(N,A,j),Ie=ve.data,[Ve,de,G]=S((W,we,Me,Ce)=>W+(we-Ie[Ce])**2,N,A,j);for(let W=0;W<de.length;++W)de[W]=Math.sqrt(de[W]/(Ae[A]-K));return[new a(Ve,de,G),ve]}function R(N,A=null,K=!1){const j=N.dims,ae=N.data;if(A===null){const Ve=ae.reduce((de,G)=>de+G,0);return new a(N.type,[Ve/ae.length],[])}A=v(A,j.length);const[Ae,ve,Ie]=S((Ve,de)=>Ve+de,N,A,K);if(j[A]!==1)for(let Ve=0;Ve<ve.length;++Ve)ve[Ve]/=j[A];return new a(Ae,ve,Ie)}function H(N){const A=new Array(N.length);for(let K=N.length-1,j=1;K>=0;--K)A[K]=j,j*=N[K];return A}function Q(N,A,K,j){const ae=N.reduce((Ae,ve)=>Ae*ve,1);return new a(K,new j(ae).fill(A),N)}function L(N,A){let K,j;if(typeof A=="number")K="float32",j=Float32Array;else if(typeof A=="bigint")K="int64",j=BigInt64Array;else if(typeof A=="boolean")K="bool",j=Uint8Array;else throw new Error(`Unsupported data type: ${typeof A}`);return Q(N,A,K,j)}function Y(N,A){return L(N.dims,A)}function q(N){return Q(N,1n,"int64",BigInt64Array)}function X(N){return q(N.dims)}function re(N){return Q(N,0n,"int64",BigInt64Array)}function te(N){return re(N.dims)}function he(N){const A=N.reduce((K,j)=>K*j,1);return new a("float32",Float32Array.from({length:A},()=>Math.random()),N)}function ue(N,A){if(N.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(N.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(A))throw new Error("The precision must be either 'binary' or 'ubinary'");const K=A==="binary",j=K?"int8":"uint8",ae=K?Int8Array:Uint8Array,Ae=N.data,ve=new ae(Ae.length/8);for(let Ie=0;Ie<Ae.length;++Ie){const Ve=Ae[Ie]>0?1:0,de=Math.floor(Ie/8),G=Ie%8;ve[de]|=Ve<<7-G,K&&G===0&&(ve[de]-=128)}return new a(j,ve,[N.dims[0],N.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>i,RawVideoFrame:()=>o,load_video:()=>a});var s=t("./src/utils/image.js"),n=t("./src/env.js");class o{constructor(u,p){this.image=u,this.timestamp=p}}class i{constructor(u,p){u.length>0&&u[0]instanceof s.RawImage&&(u=u.map((c,d)=>new o(c,(d+1)/(u.length+1)*p))),this.frames=u,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:u=null,fps:p=null}={}){if(!n.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(u==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const c=[],d=document.createElement("video");if(d.crossOrigin="anonymous",d.muted=!0,typeof l=="string")d.src=l;else if(l instanceof Blob)d.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)d.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(C=>d.onloadedmetadata=C),d.seekable.start(0)===d.seekable.end(0)){const x=await(await fetch(d.src)).blob();d.src=URL.createObjectURL(x),await new Promise(v=>d.onloadedmetadata=v)}const _=d.duration;let f,E;u!=null?(f=u,E=u===1?0:_/(u-1)):(E=1/p,f=Math.floor(_/E));let k=[];for(let C=0;C<f;++C)k.push(u===1?_/2:C*E);const b=document.createElement("canvas");b.width=d.videoWidth,b.height=d.videoHeight;const g=b.getContext("2d",{willReadFrequently:!0});for(const C of k){d.currentTime=C,await new Promise(y=>{d.onseeked=y}),g.drawImage(d,0,0,b.width,b.height);const x=g.getImageData(0,0,b.width,b.height),v=new s.RawImage(x.data,b.width,b.height,4),w=new o(v,C);c.push(w)}return d.remove(),new i(c,_)}}},Rg={};function Bt(e){var r=Rg[e];if(r!==void 0)return r.exports;var t=Rg[e]={exports:{}};return Px[e](t,t.exports,Bt),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;Bt.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var n=Object.create(null);Bt.r(n);var o={};r=r||[null,e({}),e([]),e(e)];for(var i=s&2&&t;typeof i=="object"&&!~r.indexOf(i);i=e(i))Object.getOwnPropertyNames(i).forEach(a=>o[a]=()=>t[a]);return o.default=()=>t,Bt.d(n,o),n}})(),Bt.d=(e,r)=>{for(var t in r)Bt.o(r,t)&&!Bt.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},Bt.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),Bt.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var m={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Bt.r(m),Bt.d(m,{ASTFeatureExtractor:()=>c.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>n.AutoConfig,AutoFeatureExtractor:()=>d.AutoFeatureExtractor,AutoImageProcessor:()=>E.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>g.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>C.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>c.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>v.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>c.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>c.EncodecFeatureExtractor,EosTokenCriteria:()=>x.EosTokenCriteria,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>u.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>b.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>v.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>v.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>b.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>b.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>c.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>x.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>b.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LogitsProcessor:()=>v.LogitsProcessor,LogitsProcessorList:()=>v.LogitsProcessorList,LogitsWarper:()=>v.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>x.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>b.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>v.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>v.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>c.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>b.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>v.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>v.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>b.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>b.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>b.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>n.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>k.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>b.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>b.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>o.RawAudio,RawImage:()=>i.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>v.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>b.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>c.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>b.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>c.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>c.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>b.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>x.StoppingCriteria,StoppingCriteriaList:()=>x.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>v.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>v.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>C.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>v.TopKLogitsWarper,TopPLogitsWarper:()=>v.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>b.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>b.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>c.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>b.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>b.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>c.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>c.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>b.WhisperProcessor,WhisperTextStreamer:()=>C.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>v.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>u.bankers_round,cat:()=>l.cat,cos_sim:()=>u.cos_sim,dot:()=>u.dot,dynamic_time_warping:()=>u.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getKeyValueShapes:()=>n.getKeyValueShapes,hamming:()=>o.hamming,hanning:()=>o.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>u.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>i.load_image,load_video:()=>a.load_video,log_softmax:()=>u.log_softmax,magnitude:()=>u.magnitude,matmul:()=>l.matmul,max:()=>u.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>u.medianFilter,mel_filter_bank:()=>o.mel_filter_bank,min:()=>u.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>u.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>o.read_audio,rfft:()=>l.rfft,round:()=>u.round,slice:()=>l.slice,softmax:()=>u.softmax,spectrogram:()=>o.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>o.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Bt("./src/env.js"),r=Bt("./src/pipelines.js"),t=Bt("./src/models.js"),s=Bt("./src/tokenizers.js"),n=Bt("./src/configs.js"),o=Bt("./src/utils/audio.js"),i=Bt("./src/utils/image.js"),a=Bt("./src/utils/video.js"),l=Bt("./src/utils/tensor.js"),u=Bt("./src/utils/maths.js"),p=Bt("./src/base/feature_extraction_utils.js"),c=Bt("./src/models/feature_extractors.js"),d=Bt("./src/models/auto/feature_extraction_auto.js"),_=Bt("./src/base/image_processors_utils.js"),f=Bt("./src/models/image_processors.js"),E=Bt("./src/models/auto/image_processing_auto.js"),k=Bt("./src/base/processing_utils.js"),b=Bt("./src/models/processors.js"),g=Bt("./src/models/auto/processing_auto.js"),C=Bt("./src/generation/streamers.js"),x=Bt("./src/generation/stopping_criteria.js"),v=Bt("./src/generation/logits_process.js")})(),m.ASTFeatureExtractor,m.ASTForAudioClassification,m.ASTModel,m.ASTPreTrainedModel,m.AlbertForMaskedLM,m.AlbertForQuestionAnswering,m.AlbertForSequenceClassification,m.AlbertModel,m.AlbertPreTrainedModel,m.AlbertTokenizer,m.AudioClassificationPipeline,m.AutoConfig,m.AutoFeatureExtractor,m.AutoImageProcessor,m.AutoModel,m.AutoModelForAudioClassification,m.AutoModelForAudioFrameClassification,m.AutoModelForAudioTextToText,m.AutoModelForCTC,m.AutoModelForCausalLM,m.AutoModelForDepthEstimation,m.AutoModelForDocumentQuestionAnswering,m.AutoModelForImageClassification,m.AutoModelForImageFeatureExtraction,m.AutoModelForImageMatting,m.AutoModelForImageSegmentation,m.AutoModelForImageTextToText,m.AutoModelForImageToImage,m.AutoModelForMaskGeneration,m.AutoModelForMaskedLM,m.AutoModelForNormalEstimation,m.AutoModelForObjectDetection,m.AutoModelForPoseEstimation,m.AutoModelForQuestionAnswering,m.AutoModelForSemanticSegmentation,m.AutoModelForSeq2SeqLM,m.AutoModelForSequenceClassification,m.AutoModelForSpeechSeq2Seq,m.AutoModelForTextToSpectrogram,m.AutoModelForTextToWaveform,m.AutoModelForTokenClassification,m.AutoModelForUniversalSegmentation,m.AutoModelForVision2Seq,m.AutoModelForXVector,m.AutoModelForZeroShotObjectDetection,m.AutoProcessor,m.AutoTokenizer,m.AutomaticSpeechRecognitionPipeline,m.BackgroundRemovalPipeline,m.BartForConditionalGeneration,m.BartForSequenceClassification,m.BartModel,m.BartPretrainedModel,m.BartTokenizer,m.BaseModelOutput,m.BaseStreamer,m.BeitFeatureExtractor,m.BeitForImageClassification,m.BeitModel,m.BeitPreTrainedModel,m.BertForMaskedLM,m.BertForQuestionAnswering,m.BertForSequenceClassification,m.BertForTokenClassification,m.BertModel,m.BertPreTrainedModel,m.BertTokenizer,m.BitImageProcessor,m.BlenderbotForConditionalGeneration,m.BlenderbotModel,m.BlenderbotPreTrainedModel,m.BlenderbotSmallForConditionalGeneration,m.BlenderbotSmallModel,m.BlenderbotSmallPreTrainedModel,m.BlenderbotSmallTokenizer,m.BlenderbotTokenizer,m.BloomForCausalLM,m.BloomModel,m.BloomPreTrainedModel,m.BloomTokenizer,m.CLIPFeatureExtractor,m.CLIPImageProcessor,m.CLIPModel,m.CLIPPreTrainedModel,m.CLIPSegForImageSegmentation,m.CLIPSegModel,m.CLIPSegPreTrainedModel,m.CLIPTextModel,m.CLIPTextModelWithProjection,m.CLIPTokenizer,m.CLIPVisionModel,m.CLIPVisionModelWithProjection,m.CamembertForMaskedLM,m.CamembertForQuestionAnswering,m.CamembertForSequenceClassification,m.CamembertForTokenClassification,m.CamembertModel,m.CamembertPreTrainedModel,m.CamembertTokenizer,m.CausalLMOutput,m.CausalLMOutputWithPast,m.ChineseCLIPFeatureExtractor,m.ChineseCLIPModel,m.ChineseCLIPPreTrainedModel,m.ClapAudioModelWithProjection,m.ClapFeatureExtractor,m.ClapModel,m.ClapPreTrainedModel,m.ClapTextModelWithProjection,m.ClassifierFreeGuidanceLogitsProcessor,m.CodeGenForCausalLM,m.CodeGenModel,m.CodeGenPreTrainedModel,m.CodeGenTokenizer,m.CodeLlamaTokenizer,m.CohereForCausalLM,m.CohereModel,m.CoherePreTrainedModel,m.CohereTokenizer,m.ConvBertForMaskedLM,m.ConvBertForQuestionAnswering,m.ConvBertForSequenceClassification,m.ConvBertForTokenClassification,m.ConvBertModel,m.ConvBertPreTrainedModel,m.ConvBertTokenizer,m.ConvNextFeatureExtractor,m.ConvNextForImageClassification,m.ConvNextImageProcessor,m.ConvNextModel,m.ConvNextPreTrainedModel,m.ConvNextV2ForImageClassification,m.ConvNextV2Model,m.ConvNextV2PreTrainedModel,m.DFineForObjectDetection,m.DFineModel,m.DFinePreTrainedModel,m.DPTFeatureExtractor,m.DPTForDepthEstimation,m.DPTImageProcessor,m.DPTModel,m.DPTPreTrainedModel,m.DacDecoderModel,m.DacDecoderOutput,m.DacEncoderModel,m.DacEncoderOutput,m.DacFeatureExtractor,m.DacModel,m.DacPreTrainedModel,m.DataTypeMap,m.DebertaForMaskedLM,m.DebertaForQuestionAnswering,m.DebertaForSequenceClassification,m.DebertaForTokenClassification,m.DebertaModel,m.DebertaPreTrainedModel,m.DebertaTokenizer,m.DebertaV2ForMaskedLM,m.DebertaV2ForQuestionAnswering,m.DebertaV2ForSequenceClassification,m.DebertaV2ForTokenClassification,m.DebertaV2Model,m.DebertaV2PreTrainedModel,m.DebertaV2Tokenizer,m.DecisionTransformerModel,m.DecisionTransformerPreTrainedModel,m.DeiTFeatureExtractor,m.DeiTForImageClassification,m.DeiTImageProcessor,m.DeiTModel,m.DeiTPreTrainedModel,m.DepthAnythingForDepthEstimation,m.DepthAnythingPreTrainedModel,m.DepthEstimationPipeline,m.DepthProForDepthEstimation,m.DepthProPreTrainedModel,m.DetrFeatureExtractor,m.DetrForObjectDetection,m.DetrForSegmentation,m.DetrImageProcessor,m.DetrModel,m.DetrObjectDetectionOutput,m.DetrPreTrainedModel,m.DetrSegmentationOutput,m.Dinov2ForImageClassification,m.Dinov2Model,m.Dinov2PreTrainedModel,m.Dinov2WithRegistersForImageClassification,m.Dinov2WithRegistersModel,m.Dinov2WithRegistersPreTrainedModel,m.DistilBertForMaskedLM,m.DistilBertForQuestionAnswering,m.DistilBertForSequenceClassification,m.DistilBertForTokenClassification,m.DistilBertModel,m.DistilBertPreTrainedModel,m.DistilBertTokenizer,m.DocumentQuestionAnsweringPipeline,m.DonutFeatureExtractor,m.DonutImageProcessor,m.DonutSwinModel,m.DonutSwinPreTrainedModel,m.EfficientNetForImageClassification,m.EfficientNetImageProcessor,m.EfficientNetModel,m.EfficientNetPreTrainedModel,m.ElectraForMaskedLM,m.ElectraForQuestionAnswering,m.ElectraForSequenceClassification,m.ElectraForTokenClassification,m.ElectraModel,m.ElectraPreTrainedModel,m.ElectraTokenizer,m.EncodecFeatureExtractor,m.EosTokenCriteria,m.EsmForMaskedLM,m.EsmForSequenceClassification,m.EsmForTokenClassification,m.EsmModel,m.EsmPreTrainedModel,m.EsmTokenizer,m.ExaoneForCausalLM,m.ExaoneModel,m.ExaonePreTrainedModel,m.FFT,m.FalconForCausalLM,m.FalconModel,m.FalconPreTrainedModel,m.FalconTokenizer,m.FastViTForImageClassification,m.FastViTModel,m.FastViTPreTrainedModel,m.FeatureExtractionPipeline,m.FeatureExtractor,m.FillMaskPipeline,m.Florence2ForConditionalGeneration,m.Florence2PreTrainedModel,m.Florence2Processor,m.ForcedBOSTokenLogitsProcessor,m.ForcedEOSTokenLogitsProcessor,m.GLPNFeatureExtractor,m.GLPNForDepthEstimation,m.GLPNModel,m.GLPNPreTrainedModel,m.GPT2LMHeadModel,m.GPT2Model,m.GPT2PreTrainedModel,m.GPT2Tokenizer,m.GPTBigCodeForCausalLM,m.GPTBigCodeModel,m.GPTBigCodePreTrainedModel,m.GPTJForCausalLM,m.GPTJModel,m.GPTJPreTrainedModel,m.GPTNeoForCausalLM,m.GPTNeoModel,m.GPTNeoPreTrainedModel,m.GPTNeoXForCausalLM,m.GPTNeoXModel,m.GPTNeoXPreTrainedModel,m.GPTNeoXTokenizer,m.Gemma2ForCausalLM,m.Gemma2Model,m.Gemma2PreTrainedModel,m.Gemma3ForCausalLM,m.Gemma3Model,m.Gemma3PreTrainedModel,m.GemmaForCausalLM,m.GemmaModel,m.GemmaPreTrainedModel,m.GemmaTokenizer,m.GlmForCausalLM,m.GlmModel,m.GlmPreTrainedModel,m.GraniteForCausalLM,m.GraniteModel,m.GranitePreTrainedModel,m.Grok1Tokenizer,m.GroundingDinoForObjectDetection,m.GroundingDinoImageProcessor,m.GroundingDinoPreTrainedModel,m.GroundingDinoProcessor,m.GroupViTModel,m.GroupViTPreTrainedModel,m.HeliumForCausalLM,m.HeliumModel,m.HeliumPreTrainedModel,m.HerbertTokenizer,m.HieraForImageClassification,m.HieraModel,m.HieraPreTrainedModel,m.HubertForCTC,m.HubertForSequenceClassification,m.HubertModel,m.HubertPreTrainedModel,m.IJepaForImageClassification,m.IJepaModel,m.IJepaPreTrainedModel,m.Idefics3ForConditionalGeneration,m.Idefics3ImageProcessor,m.Idefics3PreTrainedModel,m.Idefics3Processor,m.ImageClassificationPipeline,m.ImageFeatureExtractionPipeline,m.ImageFeatureExtractor,m.ImageMattingOutput,m.ImageProcessor,m.ImageSegmentationPipeline,m.ImageToImagePipeline,m.ImageToTextPipeline,m.InterruptableStoppingCriteria,m.JAISLMHeadModel,m.JAISModel,m.JAISPreTrainedModel,m.JinaCLIPImageProcessor,m.JinaCLIPModel,m.JinaCLIPPreTrainedModel,m.JinaCLIPProcessor,m.JinaCLIPTextModel,m.JinaCLIPVisionModel,m.LiteWhisperForConditionalGeneration,m.LlamaForCausalLM,m.LlamaModel,m.LlamaPreTrainedModel,m.LlamaTokenizer,m.LlavaForConditionalGeneration,m.LlavaOnevisionForConditionalGeneration,m.LlavaOnevisionImageProcessor,m.LlavaPreTrainedModel,m.LogitsProcessor,m.LogitsProcessorList,m.LogitsWarper,m.LongT5ForConditionalGeneration,m.LongT5Model,m.LongT5PreTrainedModel,m.M2M100ForConditionalGeneration,m.M2M100Model,m.M2M100PreTrainedModel,m.M2M100Tokenizer,m.MBart50Tokenizer,m.MBartForCausalLM,m.MBartForConditionalGeneration,m.MBartForSequenceClassification,m.MBartModel,m.MBartPreTrainedModel,m.MBartTokenizer,m.MPNetForMaskedLM,m.MPNetForQuestionAnswering,m.MPNetForSequenceClassification,m.MPNetForTokenClassification,m.MPNetModel,m.MPNetPreTrainedModel,m.MPNetTokenizer,m.MT5ForConditionalGeneration,m.MT5Model,m.MT5PreTrainedModel,m.MarianMTModel,m.MarianModel,m.MarianPreTrainedModel,m.MarianTokenizer,m.Mask2FormerImageProcessor,m.MaskFormerFeatureExtractor,m.MaskFormerForInstanceSegmentation,m.MaskFormerImageProcessor,m.MaskFormerModel,m.MaskFormerPreTrainedModel,m.MaskedLMOutput,m.MaxLengthCriteria,m.Metric3DForDepthEstimation,m.Metric3DPreTrainedModel,m.Metric3Dv2ForDepthEstimation,m.Metric3Dv2PreTrainedModel,m.MgpstrForSceneTextRecognition,m.MgpstrModelOutput,m.MgpstrPreTrainedModel,m.MgpstrProcessor,m.MgpstrTokenizer,m.MimiDecoderModel,m.MimiDecoderOutput,m.MimiEncoderModel,m.MimiEncoderOutput,m.MimiModel,m.MimiPreTrainedModel,m.MinLengthLogitsProcessor,m.MinNewTokensLengthLogitsProcessor,m.MistralForCausalLM,m.MistralModel,m.MistralPreTrainedModel,m.MobileBertForMaskedLM,m.MobileBertForQuestionAnswering,m.MobileBertForSequenceClassification,m.MobileBertModel,m.MobileBertPreTrainedModel,m.MobileBertTokenizer,m.MobileLLMForCausalLM,m.MobileLLMModel,m.MobileLLMPreTrainedModel,m.MobileNetV1FeatureExtractor,m.MobileNetV1ForImageClassification,m.MobileNetV1ForSemanticSegmentation,m.MobileNetV1ImageProcessor,m.MobileNetV1Model,m.MobileNetV1PreTrainedModel,m.MobileNetV2FeatureExtractor,m.MobileNetV2ForImageClassification,m.MobileNetV2ForSemanticSegmentation,m.MobileNetV2ImageProcessor,m.MobileNetV2Model,m.MobileNetV2PreTrainedModel,m.MobileNetV3FeatureExtractor,m.MobileNetV3ForImageClassification,m.MobileNetV3ForSemanticSegmentation,m.MobileNetV3ImageProcessor,m.MobileNetV3Model,m.MobileNetV3PreTrainedModel,m.MobileNetV4FeatureExtractor,m.MobileNetV4ForImageClassification,m.MobileNetV4ForSemanticSegmentation,m.MobileNetV4ImageProcessor,m.MobileNetV4Model,m.MobileNetV4PreTrainedModel,m.MobileViTFeatureExtractor,m.MobileViTForImageClassification,m.MobileViTImageProcessor,m.MobileViTModel,m.MobileViTPreTrainedModel,m.MobileViTV2ForImageClassification,m.MobileViTV2Model,m.MobileViTV2PreTrainedModel,m.ModelOutput,m.ModernBertForMaskedLM,m.ModernBertForSequenceClassification,m.ModernBertForTokenClassification,m.ModernBertModel,m.ModernBertPreTrainedModel,m.Moondream1ForConditionalGeneration,m.MoonshineFeatureExtractor,m.MoonshineForConditionalGeneration,m.MoonshineModel,m.MoonshinePreTrainedModel,m.MoonshineProcessor,m.MptForCausalLM,m.MptModel,m.MptPreTrainedModel,m.MultiModalityCausalLM,m.MultiModalityPreTrainedModel,m.MusicgenForCausalLM,m.MusicgenForConditionalGeneration,m.MusicgenModel,m.MusicgenPreTrainedModel,m.NllbTokenizer,m.NoBadWordsLogitsProcessor,m.NoRepeatNGramLogitsProcessor,m.NomicBertModel,m.NomicBertPreTrainedModel,m.NougatImageProcessor,m.NougatTokenizer,m.OPTForCausalLM,m.OPTModel,m.OPTPreTrainedModel,m.ObjectDetectionPipeline,m.Olmo2ForCausalLM,m.Olmo2Model,m.Olmo2PreTrainedModel,m.OlmoForCausalLM,m.OlmoModel,m.OlmoPreTrainedModel,m.OpenELMForCausalLM,m.OpenELMModel,m.OpenELMPreTrainedModel,m.OwlViTFeatureExtractor,m.OwlViTForObjectDetection,m.OwlViTImageProcessor,m.OwlViTModel,m.OwlViTPreTrainedModel,m.OwlViTProcessor,m.Owlv2ForObjectDetection,m.Owlv2ImageProcessor,m.Owlv2Model,m.Owlv2PreTrainedModel,m.PaliGemmaForConditionalGeneration,m.PaliGemmaPreTrainedModel,m.PaliGemmaProcessor,m.PatchTSMixerForPrediction,m.PatchTSMixerModel,m.PatchTSMixerPreTrainedModel,m.PatchTSTForPrediction,m.PatchTSTModel,m.PatchTSTPreTrainedModel,m.Phi3ForCausalLM,m.Phi3Model,m.Phi3PreTrainedModel,m.Phi3VForCausalLM,m.Phi3VImageProcessor,m.Phi3VPreTrainedModel,m.Phi3VProcessor,m.PhiForCausalLM,m.PhiModel,m.PhiPreTrainedModel,m.Pipeline,m.PreTrainedModel,m.PreTrainedTokenizer,m.PretrainedConfig,m.PretrainedMixin,m.Processor,m.PvtForImageClassification,m.PvtImageProcessor,m.PvtModel,m.PvtPreTrainedModel,m.PyAnnoteFeatureExtractor,m.PyAnnoteForAudioFrameClassification,m.PyAnnoteModel,m.PyAnnotePreTrainedModel,m.PyAnnoteProcessor,m.QuestionAnsweringModelOutput,m.QuestionAnsweringPipeline,m.Qwen2ForCausalLM,m.Qwen2Model,m.Qwen2PreTrainedModel,m.Qwen2Tokenizer,m.Qwen2VLForConditionalGeneration,m.Qwen2VLImageProcessor,m.Qwen2VLPreTrainedModel,m.Qwen2VLProcessor,m.Qwen3ForCausalLM,m.Qwen3Model,m.Qwen3PreTrainedModel,m.RFDetrForObjectDetection,m.RFDetrModel,m.RFDetrObjectDetectionOutput,m.RFDetrPreTrainedModel,m.RTDetrForObjectDetection,m.RTDetrImageProcessor,m.RTDetrModel,m.RTDetrObjectDetectionOutput,m.RTDetrPreTrainedModel,m.RTDetrV2ForObjectDetection,m.RTDetrV2Model,m.RTDetrV2ObjectDetectionOutput,m.RTDetrV2PreTrainedModel,m.RawAudio,m.RawImage,m.RawVideo,m.RawVideoFrame,m.RepetitionPenaltyLogitsProcessor,m.ResNetForImageClassification,m.ResNetModel,m.ResNetPreTrainedModel,m.RoFormerForMaskedLM,m.RoFormerForQuestionAnswering,m.RoFormerForSequenceClassification,m.RoFormerForTokenClassification,m.RoFormerModel,m.RoFormerPreTrainedModel,m.RoFormerTokenizer,m.RobertaForMaskedLM,m.RobertaForQuestionAnswering,m.RobertaForSequenceClassification,m.RobertaForTokenClassification,m.RobertaModel,m.RobertaPreTrainedModel,m.RobertaTokenizer,m.SamImageProcessor,m.SamImageSegmentationOutput,m.SamModel,m.SamPreTrainedModel,m.SamProcessor,m.SapiensForDepthEstimation,m.SapiensForNormalEstimation,m.SapiensForSemanticSegmentation,m.SapiensPreTrainedModel,m.SeamlessM4TFeatureExtractor,m.SegformerFeatureExtractor,m.SegformerForImageClassification,m.SegformerForSemanticSegmentation,m.SegformerImageProcessor,m.SegformerModel,m.SegformerPreTrainedModel,m.Seq2SeqLMOutput,m.SequenceClassifierOutput,m.SiglipImageProcessor,m.SiglipModel,m.SiglipPreTrainedModel,m.SiglipTextModel,m.SiglipTokenizer,m.SiglipVisionModel,m.SmolVLMForConditionalGeneration,m.SmolVLMImageProcessor,m.SmolVLMProcessor,m.SnacDecoderModel,m.SnacEncoderModel,m.SnacFeatureExtractor,m.SnacModel,m.SnacPreTrainedModel,m.SpeechT5FeatureExtractor,m.SpeechT5ForSpeechToText,m.SpeechT5ForTextToSpeech,m.SpeechT5HifiGan,m.SpeechT5Model,m.SpeechT5PreTrainedModel,m.SpeechT5Processor,m.SpeechT5Tokenizer,m.SqueezeBertForMaskedLM,m.SqueezeBertForQuestionAnswering,m.SqueezeBertForSequenceClassification,m.SqueezeBertModel,m.SqueezeBertPreTrainedModel,m.SqueezeBertTokenizer,m.StableLmForCausalLM,m.StableLmModel,m.StableLmPreTrainedModel,m.Starcoder2ForCausalLM,m.Starcoder2Model,m.Starcoder2PreTrainedModel,m.StoppingCriteria,m.StoppingCriteriaList,m.StyleTextToSpeech2Model,m.StyleTextToSpeech2PreTrainedModel,m.SummarizationPipeline,m.SuppressTokensAtBeginLogitsProcessor,m.Swin2SRForImageSuperResolution,m.Swin2SRImageProcessor,m.Swin2SRModel,m.Swin2SRPreTrainedModel,m.SwinForImageClassification,m.SwinForSemanticSegmentation,m.SwinModel,m.SwinPreTrainedModel,m.T5ForConditionalGeneration,m.T5Model,m.T5PreTrainedModel,m.T5Tokenizer,m.TableTransformerForObjectDetection,m.TableTransformerModel,m.TableTransformerObjectDetectionOutput,m.TableTransformerPreTrainedModel,m.TemperatureLogitsWarper,m.Tensor,m.Text2TextGenerationPipeline,m.TextClassificationPipeline,m.TextGenerationPipeline,m.TextStreamer,m.TextToAudioPipeline,m.TokenClassificationPipeline,m.TokenClassifierOutput,m.TokenizerModel,m.TopKLogitsWarper,m.TopPLogitsWarper,m.TrOCRForCausalLM,m.TrOCRPreTrainedModel,m.TranslationPipeline,m.UltravoxModel,m.UltravoxPreTrainedModel,m.UltravoxProcessor,m.UniSpeechForCTC,m.UniSpeechForSequenceClassification,m.UniSpeechModel,m.UniSpeechPreTrainedModel,m.UniSpeechSatForAudioFrameClassification,m.UniSpeechSatForCTC,m.UniSpeechSatForSequenceClassification,m.UniSpeechSatModel,m.UniSpeechSatPreTrainedModel,m.VLChatProcessor,m.VLMImageProcessor,m.ViTFeatureExtractor,m.ViTForImageClassification,m.ViTImageProcessor,m.ViTMAEModel,m.ViTMAEPreTrainedModel,m.ViTMSNForImageClassification,m.ViTMSNModel,m.ViTMSNPreTrainedModel,m.ViTModel,m.ViTPreTrainedModel,m.VisionEncoderDecoderModel,m.VitMatteForImageMatting,m.VitMatteImageProcessor,m.VitMattePreTrainedModel,m.VitPoseForPoseEstimation,m.VitPoseImageProcessor,m.VitPosePreTrainedModel,m.VitsModel,m.VitsModelOutput,m.VitsPreTrainedModel,m.VitsTokenizer,m.Wav2Vec2BertForCTC,m.Wav2Vec2BertForSequenceClassification,m.Wav2Vec2BertModel,m.Wav2Vec2BertPreTrainedModel,m.Wav2Vec2CTCTokenizer,m.Wav2Vec2FeatureExtractor,m.Wav2Vec2ForAudioFrameClassification,m.Wav2Vec2ForCTC,m.Wav2Vec2ForSequenceClassification,m.Wav2Vec2Model,m.Wav2Vec2PreTrainedModel,m.Wav2Vec2Processor,m.Wav2Vec2ProcessorWithLM,m.WavLMForAudioFrameClassification,m.WavLMForCTC,m.WavLMForSequenceClassification,m.WavLMForXVector,m.WavLMModel,m.WavLMPreTrainedModel,m.WeSpeakerFeatureExtractor,m.WeSpeakerResNetModel,m.WeSpeakerResNetPreTrainedModel,m.WhisperFeatureExtractor,m.WhisperForConditionalGeneration,m.WhisperModel,m.WhisperPreTrainedModel,m.WhisperProcessor,m.WhisperTextStreamer,m.WhisperTimeStampLogitsProcessor,m.WhisperTokenizer,m.XLMForQuestionAnswering,m.XLMForSequenceClassification,m.XLMForTokenClassification,m.XLMModel,m.XLMPreTrainedModel,m.XLMRobertaForMaskedLM,m.XLMRobertaForQuestionAnswering,m.XLMRobertaForSequenceClassification,m.XLMRobertaForTokenClassification,m.XLMRobertaModel,m.XLMRobertaPreTrainedModel,m.XLMRobertaTokenizer,m.XLMTokenizer,m.XLMWithLMHeadModel,m.XVectorOutput,m.YolosFeatureExtractor,m.YolosForObjectDetection,m.YolosImageProcessor,m.YolosModel,m.YolosObjectDetectionOutput,m.YolosPreTrainedModel,m.ZeroShotAudioClassificationPipeline,m.ZeroShotClassificationPipeline,m.ZeroShotImageClassificationPipeline,m.ZeroShotObjectDetectionPipeline,m.bankers_round,m.cat,m.cos_sim,m.dot,m.dynamic_time_warping,m.env,m.full,m.full_like,m.getKeyValueShapes,m.hamming,m.hanning,m.interpolate,m.interpolate_4d,m.interpolate_data,m.is_chinese_char,m.layer_norm,m.load_image,m.load_video,m.log_softmax,m.magnitude,m.matmul,m.max,m.mean,m.mean_pooling,m.medianFilter,m.mel_filter_bank,m.min,m.ones,m.ones_like,m.permute,m.permute_data;var Cx=m.pipeline;m.quantize_embeddings,m.rand,m.read_audio,m.rfft,m.round,m.slice,m.softmax,m.spectrogram,m.stack,m.std_mean,m.topk,m.window_function,m.zeros,m.zeros_like;let jg;const Sx=async()=>{jg=await Cx("automatic-speech-recognition","WhisperForConditionalGeneration",{dtype:"fp32",device:"webgpu"})},$x=async e=>{const r=await jg(e,{language:"chinese",task:"transcribe",chunk_length_s:30,stride_length_s:5,generation_kwargs:{prompt:"以下是普通话的句子，输出的时候请带上标点符号。切记！"}});return console.log(r),r};onmessage=async function(e){console.log(e);const{data:{type:r,data:t}}=e;if(r==="init"&&await Sx(),r==="whisper"){const s=await $x(new Float32Array(t));self.postMessage({type:"whisper-result",data:s})}}})();
